<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>进程间实时通信模块设计和实现</title>
    <link href="/2020/06/27/%E8%BF%9B%E7%A8%8B%E9%97%B4%E5%AE%9E%E6%97%B6%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%AE%9E%E7%8E%B0/"/>
    <url>/2020/06/27/%E8%BF%9B%E7%A8%8B%E9%97%B4%E5%AE%9E%E6%97%B6%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="进程间实时通信模块设计和实现"><a href="#进程间实时通信模块设计和实现" class="headerlink" title="进程间实时通信模块设计和实现"></a>进程间实时通信模块设计和实现</h2><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><ul><li>基于设备文件作为数据传输介质，一切皆文件</li><li>设备文件必须可以读可以写</li><li>通过linux kernel的file_operations来实现设备的读写</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><img src="/2020/06/27/%E8%BF%9B%E7%A8%8B%E9%97%B4%E5%AE%9E%E6%97%B6%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%AE%9E%E7%8E%B0/%E8%BF%9B%E7%A8%8B%E9%97%B4%E5%AE%9E%E6%97%B6%E9%80%9A%E4%BF%A1.png" srcset="/img/loading.gif" alt></p><ul><li>设计一个内核模块，客户端A写数据客户端B，客户端A到某个字符设备，然后通过设计的内核模块主动推送客户端B，这样就能达到进程间实时通信的效果.</li><li>设备文件也是文件，通过绑定内核的file_operations的函数实现设备的open/release/read/write/mmap等接口，客户端当open/read/write时候会对应调用内核模块的open/read/write函数</li></ul><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><ul><li>进程A写数据</li></ul><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> <span class="hljs-string">"aaaa"</span> &gt; <span class="hljs-string">/dev/memchan</span></code></pre><ul><li>进程B接收数据</li></ul><pre><code class="hljs arduino"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: mem_channel_reader.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Fri 26 Jun 2020 01:35:15 PM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;errno.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/types.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/stat.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;fcntl.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/mman.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUFFER_LENGTH 128</span><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *device_name = <span class="hljs-string">"/dev/memchan"</span>;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> fd = <span class="hljs-built_in">open</span>(device_name, O_RDWR);  <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)  &#123;    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"%s,err:%s\n"</span>, device_name, strerror(errno));    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  &#125;  <span class="hljs-keyword">char</span> *<span class="hljs-built_in">buffer</span> = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(BUFFER_LENGTH);  <span class="hljs-built_in">memset</span>(<span class="hljs-built_in">buffer</span>, <span class="hljs-number">0</span>, BUFFER_LENGTH);  <span class="hljs-keyword">char</span> *start = mmap(<span class="hljs-literal">NULL</span>, BUFFER_LENGTH, PROT_READ | PROT_WRITE, MAP_SHARED, fd, <span class="hljs-number">0</span>);  fd_set rds;  FD_ZERO(&amp;rds);  FD_SET(fd, &amp;rds);  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)  &#123;    <span class="hljs-keyword">int</span> ret = select(fd + <span class="hljs-number">1</span>, &amp;rds, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);    <span class="hljs-keyword">if</span> (ret &lt; <span class="hljs-number">0</span>)    &#123;      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"select error\n"</span>);      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);    &#125;    <span class="hljs-keyword">if</span> (FD_ISSET(fd, &amp;rds))    &#123;<span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> 0</span><span class="hljs-built_in">strcpy</span>(<span class="hljs-built_in">buffer</span>, start);<span class="hljs-built_in">printf</span>(<span class="hljs-string">"ntychannel: %s\n"</span>, <span class="hljs-built_in">buffer</span>);<span class="hljs-meta">#<span class="hljs-meta-keyword">else</span></span>      <span class="hljs-built_in">read</span>(fd, <span class="hljs-built_in">buffer</span>, BUFFER_LENGTH);      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"channel: %s\n"</span>, <span class="hljs-built_in">buffer</span>);<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span>    &#125;  &#125;  munmap(start, BUFFER_LENGTH);  <span class="hljs-built_in">free</span>(<span class="hljs-built_in">buffer</span>);  <span class="hljs-built_in">close</span>(fd);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><ul><li>内核模块</li></ul><pre><code class="hljs arduino"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: mem_channel.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Fri 26 Jun 2020 12:59:42 PM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/module.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/types.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/fs.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/errno.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/mm.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/sched.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/init.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/cdev.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;asm/io.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;asm/uaccess.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/slab.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;linux/poll.h&gt;</span></span><span class="hljs-comment">// first device id in kernel</span><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> MEM_CHANNEL_MAJOR</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MEM_CHANNEL_MAJOR 110</span><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-comment">//second device id in kernel</span><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> MEM_CHANNEL_MINOR</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MEM_CHANNEL_MINOR 2</span><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> MEM_CHANNEL_DATA_LENGTH</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MEM_CHANNEL_DATA_LENGTH 4096</span><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ENABLE_POLL 1</span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> ENABLE_POLL</span><span class="hljs-keyword">uint8_t</span> is_have_data = <span class="hljs-number">0</span>;<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *mem_channel_device = <span class="hljs-string">"memchan"</span>;<span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">cdev</span> <span class="hljs-title">mem_channel_dev</span>;</span><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span></span><span class="hljs-class">&#123;</span>  <span class="hljs-keyword">char</span> *data;  <span class="hljs-keyword">size_t</span> <span class="hljs-built_in">size</span>;<span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> ENABLE_POLL</span>  <span class="hljs-keyword">wait_queue_head_t</span> <span class="hljs-built_in">queue</span>;<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span>&#125;;<span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">chan</span>;</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">mem_channel_open</span><span class="hljs-params">(struct inode *node, struct file *pfile)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">mem</span> = <span class="hljs-title">NULL</span>;</span>  <span class="hljs-keyword">int</span> num = node-&gt;i_rdev;  <span class="hljs-keyword">if</span> (num &gt; MEM_CHANNEL_MINOR || num == <span class="hljs-number">0</span>)  &#123;    <span class="hljs-keyword">return</span> -ENODEV;  &#125;  mem = &amp;chan[num];  pfile-&gt;private_data = mem;  printk(KERN_INFO <span class="hljs-string">"mem_channel_open %d device success\n"</span>, num);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">mem_channel_release</span><span class="hljs-params">(struct inode *node, struct file *pfile)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">mem_channel_read</span><span class="hljs-params">(struct file *pfile, <span class="hljs-keyword">char</span> __user *<span class="hljs-built_in">buffer</span>, <span class="hljs-keyword">size_t</span> <span class="hljs-built_in">size</span>, <span class="hljs-keyword">loff_t</span> *ppos)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> ret;  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> p = *ppos;  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> count = <span class="hljs-built_in">size</span>;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">mem</span> = <span class="hljs-title">pfile</span>-&gt;<span class="hljs-title">private_data</span>;</span>  <span class="hljs-keyword">if</span> (p &gt; MEM_CHANNEL_DATA_LENGTH)  &#123;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  &#125;  <span class="hljs-keyword">if</span> (count &gt; (MEM_CHANNEL_DATA_LENGTH - p))  &#123;    count = MEM_CHANNEL_DATA_LENGTH - p;  &#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> ENABLE_POLL</span>  <span class="hljs-keyword">while</span> (!is_have_data)  &#123;    <span class="hljs-keyword">if</span> (pfile-&gt;f_flags &amp; O_NONBLOCK)    &#123;      <span class="hljs-keyword">return</span> -EAGAIN;    &#125;    wait_event_interruptible(mem-&gt;<span class="hljs-built_in">queue</span>, is_have_data);  &#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span>  <span class="hljs-keyword">if</span> (copy_to_user(<span class="hljs-built_in">buffer</span>, (<span class="hljs-keyword">void</span> *)(mem-&gt;data + p), count))  &#123;    ret = -EFAULT;  &#125;  <span class="hljs-keyword">else</span>  &#123;    ret = <span class="hljs-built_in">strlen</span>(<span class="hljs-built_in">buffer</span>);    mem-&gt;<span class="hljs-built_in">size</span> -= ret;  &#125;  printk(KERN_INFO <span class="hljs-string">"read %d bytes from %ld\n"</span>, ret, p);  <span class="hljs-keyword">return</span> ret;&#125;<span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">mem_channel_write</span><span class="hljs-params">(struct file *pfile, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> __user *<span class="hljs-built_in">buffer</span>, <span class="hljs-keyword">size_t</span> <span class="hljs-built_in">size</span>, <span class="hljs-keyword">loff_t</span> *ppos)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> ret;  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> p = *ppos;  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> count = <span class="hljs-built_in">size</span>;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">mem</span> = (<span class="hljs-title">struct</span> <span class="hljs-title">mem_channel</span> *)<span class="hljs-title">pfile</span>-&gt;<span class="hljs-title">private_data</span>;</span>  <span class="hljs-keyword">if</span> (p &gt; MEM_CHANNEL_DATA_LENGTH)  &#123;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  &#125;  <span class="hljs-keyword">if</span> (count &gt; (MEM_CHANNEL_DATA_LENGTH - p))  &#123;    count = MEM_CHANNEL_DATA_LENGTH - p;  &#125;  <span class="hljs-keyword">if</span> (copy_from_user((<span class="hljs-keyword">void</span> *)(mem-&gt;data + p), <span class="hljs-built_in">buffer</span>, count))  &#123;    ret = -EFAULT;  &#125;  <span class="hljs-keyword">else</span>  &#123;    *ppos += count;    ret = count;    mem-&gt;<span class="hljs-built_in">size</span> += count;    *(mem-&gt;data + p + count) = <span class="hljs-string">'\0'</span>;    printk(KERN_INFO <span class="hljs-string">"write %d bytes from %ld\n"</span>, count, p);  &#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> ENABLE_POLL</span>  is_have_data = <span class="hljs-number">1</span>;  wake_up(&amp;mem-&gt;<span class="hljs-built_in">queue</span>);<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span>  <span class="hljs-keyword">return</span> ret;&#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> ENABLE_POLL</span><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mem_channel_poll</span><span class="hljs-params">(struct file *pfile, struct poll_table_struct *wait)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">mem</span> = <span class="hljs-title">pfile</span>-&gt;<span class="hljs-title">private_data</span>;</span>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> mask = <span class="hljs-number">0</span>;  poll_wait(pfile, &amp;mem-&gt;<span class="hljs-built_in">queue</span>, wait);  <span class="hljs-keyword">if</span> (is_have_data)  &#123;    mask |= (POLLIN | POLLRDNORM);  &#125;  <span class="hljs-keyword">return</span> mask;&#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">mem_channel_mmap</span><span class="hljs-params">(struct file *pfile, struct vm_area_struct *vma)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mem_channel</span> *<span class="hljs-title">mem</span> = <span class="hljs-title">pfile</span>-&gt;<span class="hljs-title">private_data</span>;</span>  vma-&gt;vm_flags |= VM_IO;  vma-&gt;vm_flags |= (VM_DONTEXPAND | VM_DONTDUMP);  <span class="hljs-keyword">if</span> (remap_pfn_range(vma, vma-&gt;vm_start, virt_to_phys(mem-&gt;data) &gt;&gt; PAGE_SHIFT,                      vma-&gt;vm_end - vma-&gt;vm_start, vma-&gt;vm_page_prot))  &#123;    <span class="hljs-keyword">return</span> -EAGAIN;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">file_operations</span> <span class="hljs-title">fops</span> = &#123;</span>    .owner = THIS_MODULE,    .<span class="hljs-built_in">open</span> = mem_channel_open,    .<span class="hljs-built_in">release</span> = mem_channel_release,    .<span class="hljs-built_in">read</span> = mem_channel_read,    .<span class="hljs-built_in">write</span> = mem_channel_write,    .poll = mem_channel_poll,    .mmap = mem_channel_mmap,&#125;;<span class="hljs-comment">//when execute insmod xx.ko,mem_channel_init will be called</span><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mem_channel_init</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> result;  <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;  <span class="hljs-comment">//init first device no</span>  <span class="hljs-keyword">dev_t</span> devno = MKDEV(MEM_CHANNEL_MAJOR, <span class="hljs-number">0</span>);  <span class="hljs-comment">//init minor device array for first device</span>  result = register_chrdev_region(devno, MEM_CHANNEL_MINOR, mem_channel_device);  <span class="hljs-keyword">if</span> (result != <span class="hljs-number">0</span>)  &#123;    <span class="hljs-keyword">return</span> result;  &#125;  cdev_init(&amp;mem_channel_dev, &amp;fops);  mem_channel_dev.owner = THIS_MODULE;  <span class="hljs-comment">//add device to kernel device list,that save data</span>  cdev_add(&amp;mem_channel_dev, devno, MEM_CHANNEL_MINOR);  chan = kmalloc(MEM_CHANNEL_MINOR * <span class="hljs-keyword">sizeof</span>(struct mem_channel), GFP_KERNEL);  <span class="hljs-keyword">if</span> (chan == <span class="hljs-literal">NULL</span>)  &#123;    result = -ENOMEM;    <span class="hljs-keyword">goto</span> failed;  &#125;  <span class="hljs-built_in">memset</span>(chan, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(struct mem_channel) * MEM_CHANNEL_MINOR);  <span class="hljs-keyword">for</span> (; i &lt; MEM_CHANNEL_MINOR; i++)  &#123;    chan[i].<span class="hljs-built_in">size</span> = MEM_CHANNEL_DATA_LENGTH;    chan[i].data = kmalloc(MEM_CHANNEL_DATA_LENGTH * <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">char</span>), GFP_KERNEL);    <span class="hljs-keyword">if</span> (chan[i].data == <span class="hljs-literal">NULL</span>)    &#123;      <span class="hljs-keyword">goto</span> failed;    &#125;    <span class="hljs-built_in">memset</span>(chan[i].data, <span class="hljs-number">0</span>, MEM_CHANNEL_DATA_LENGTH);  &#125;  printk(KERN_INFO <span class="hljs-string">"mem_channel init success\n"</span>);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;failed:  unregister_chrdev_region(devno, MEM_CHANNEL_MINOR);  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MEM_CHANNEL_MINOR; i++)  &#123;    <span class="hljs-keyword">if</span> (chan[i].data != <span class="hljs-literal">NULL</span>)    &#123;      kfree(chan[i].data);      chan[i].data = <span class="hljs-literal">NULL</span>;    &#125;    chan[i].<span class="hljs-built_in">size</span> = <span class="hljs-number">0</span>;  &#125;  <span class="hljs-keyword">if</span> (chan != <span class="hljs-literal">NULL</span>)  &#123;    kfree(chan);    chan = <span class="hljs-literal">NULL</span>;  &#125;  <span class="hljs-keyword">return</span> result;&#125;<span class="hljs-comment">//when rmmod xx.ko,mem_channel_exit will be called</span><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mem_channel_exit</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> i;  cdev_del(&amp;mem_channel_dev);  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MEM_CHANNEL_MINOR; i++)  &#123;    kfree(chan[i].data);    chan[i].data = <span class="hljs-literal">NULL</span>;    chan[i].<span class="hljs-built_in">size</span> = <span class="hljs-number">0</span>;  &#125;  <span class="hljs-keyword">if</span> (chan != <span class="hljs-literal">NULL</span>)  &#123;    kfree(chan);    chan = <span class="hljs-literal">NULL</span>;  &#125;  unregister_chrdev_region(MKDEV(MEM_CHANNEL_MAJOR, <span class="hljs-number">0</span>), MEM_CHANNEL_MINOR);  printk(KERN_INFO <span class="hljs-string">"mem_channel_exit succes\n"</span>);&#125;MODULE_AUTHOR(<span class="hljs-string">"perrynzhou@gmail.com"</span>);MODULE_LICENSE(<span class="hljs-string">"GPL"</span>);module_init(mem_channel_init);module_exit(mem_channel_exit);</code></pre><ul><li>Makefile</li></ul><pre><code class="hljs properties"><span class="hljs-attr">KERNEL_SRC</span> = <span class="hljs-string">/usr/src/kernels/3.10.0-1127.8.2.el7.x86_64</span><span class="hljs-meta">obj-m</span> :<span class="hljs-string">= mem_channel.o</span><span class="hljs-meta">module-objs</span> :<span class="hljs-string">= mem_channel.o</span><span class="hljs-attr">all</span>:<span class="hljs-string"></span><span class="hljs-meta">$(MAKE)</span>    <span class="hljs-string">-C $(KERNEL_SRC)   M=$(PWD) modules</span><span class="hljs-attr">gcc</span> <span class="hljs-string">-g -std=gnu99 mem_channel_reader.c -o mem_channel_reader</span><span class="hljs-attr">clean</span>:<span class="hljs-string"></span><span class="hljs-attr">rm</span> <span class="hljs-string">*.ko *.o</span><span class="hljs-attr">rm</span> <span class="hljs-string">-rf  mem_channel_reader</span><span class="hljs-attr">rm</span> <span class="hljs-string">-rf .mem_channel*</span><span class="hljs-attr">rm</span> <span class="hljs-string">-rf modules.order  Module.symvers</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>kernel module</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>start kernel plan</title>
    <link href="/2020/06/25/start-kernel-plan/"/>
    <url>/2020/06/25/start-kernel-plan/</url>
    
    <content type="html"><![CDATA[<h3 id="Kernel-About-Linux"><a href="#Kernel-About-Linux" class="headerlink" title="Kernel About Linux"></a>Kernel About Linux</h3><h4 id="Kernel-计划"><a href="#Kernel-计划" class="headerlink" title="Kernel 计划"></a>Kernel 计划</h4><p> <img src="/2020/06/25/start-kernel-plan/kernel-plan.png" srcset="/img/loading.gif" alt></p><h4 id="Kernel-架构"><a href="#Kernel-架构" class="headerlink" title="Kernel 架构"></a>Kernel 架构</h4><p> <img src="/2020/06/25/start-kernel-plan/kernel-01.png" srcset="/img/loading.gif" alt></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>epoll中惊群效应解决方法</title>
    <link href="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="epoll中惊群效应解决方法"><a href="#epoll中惊群效应解决方法" class="headerlink" title="epoll中惊群效应解决方法"></a>epoll中惊群效应解决方法</h2><h3 id="epoll惊群效应复现"><a href="#epoll惊群效应复现" class="headerlink" title="epoll惊群效应复现"></a>epoll惊群效应复现</h3><ul><li><p>创建5个进程，父进程负责fork所有的子进程，然后等待子进程退出，每个子进程监听监听同一个端口，接受来自客户单请求</p><p><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E7%88%B6%E8%BF%9B%E7%A8%8B%E5%90%AF%E5%8A%A8.png" srcset="/img/loading.gif" alt></p></li><li><p>客户端连接服务端的同一个端口，服务端只有一个子进程响应该请求</p><p><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%B7%E6%B1%82.png" srcset="/img/loading.gif" alt></p></li><li><p>strace每个子进程的系统调用，可以发现客户端的请求仅仅只有一个子进程响应，其他的子进程都做了无效的系统调用，这种现象叫做惊群效应，假设在10W个并发链接的情况下，这种无效的系统调用非常影响请求处理的吞吐量和处理性能。子进程10012、10014、10015，出现了“accept(3, 0x7fff66a88dc0, [16])         = -1 EAGAIN (Resource temporarily unavailable)”，接受客户端请求失败，仅仅是10013接受客户端请求成功，并且处理了客户端请求。<br><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/strace-1.png" srcset="/img/loading.gif" alt></p><p><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/strace-2.png" srcset="/img/loading.gif" alt></p><p><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/strace-3.png" srcset="/img/loading.gif" alt></p><p><img src="/2020/06/25/epoll%E4%B8%AD%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/strace-4.png" srcset="/img/loading.gif" alt></p></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li><p>linux 内核中accept惊群问题：linux 内核accept之所以阻塞是因为条件等待，这种现象和线程池的惊群效应是一致的，2.6内核之前是通过广播方式通知,2.6内核之后采用了发送信号量，解决了accept的惊群问题。</p></li><li><p>epoll的惊群问题：</p><ul><li>互斥锁：在epoll_wait前后加互斥锁会导致线程或者进程挂起，在高并发的情况下，严重影响请求处理的图屯粮，这种性能损耗基本无法接受。</li><li>自旋锁: 在epoll_wait前后加spinlock，spinlock是独占的，虽然不会导致线程切换，但是会导致其他的监听进程或者线程饿死，这种情况也是无法接受的。</li><li>原子操作/CAS：惊群问题通用解决方法是通过原子操作，原子操作通过汇编实现。</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>new/mallc/delete/free的区别</title>
    <link href="/2020/06/24/new-mallc-delete-free%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2020/06/24/new-mallc-delete-free%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p><strong>在使用C/C++开发使用，很多对于mallc和new、free和delete搞不清楚的，这里能简单说下区别</strong></p><ul><li>1.malloc和free是库函数;new和delete是C++的关键字</li><li>2.malloc是以字节来申请堆内存;new是以类型申请堆空间</li><li>3.malloc和free是单纯的申请内存和释放内存</li><li>4.new和delete分别负责申请内存调用calss的构造函数初始化和调用析构函数释放资源</li><li>5.new申请的内存使用free释放，是不会触发调用析构函数的，一般会造成资源泄露</li></ul><p><strong>代码示例</strong></p><ul><li>代码<pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;new&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span> &#123;</span>        <span class="hljs-keyword">public</span>:                T()&#123;<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"Call T()"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;iv = <span class="hljs-number">100</span>;&#125;;                ~T()&#123;<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"Call ~T()"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;&#125;                <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">GetIv</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span> iv;&#125;        <span class="hljs-keyword">private</span>:                <span class="hljs-keyword">int</span> iv;&#125;;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">func</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-keyword">int</span> *t1 = <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">int</span> *&gt;(<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>)));        <span class="hljs-keyword">int</span> *t2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>(<span class="hljs-number">10</span>);<span class="hljs-comment">//new 可以申请内存同时也可以赋值</span>        *t1 = <span class="hljs-number">88</span>;<span class="hljs-comment">//malloc则不行</span>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"begin :*t1"</span>&lt;&lt;*t1&lt;&lt;<span class="hljs-string">",*t2="</span>&lt;&lt;*t2&lt;&lt;<span class="hljs-built_in">endl</span>;        <span class="hljs-built_in">free</span>(t1);        <span class="hljs-keyword">delete</span> t2;        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"end :t1"</span>&lt;&lt;t1&lt;&lt;<span class="hljs-string">",t2="</span>&lt;&lt;t2&lt;&lt;<span class="hljs-built_in">endl</span>; &#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-comment">//func();</span>        T *t1 = <span class="hljs-keyword">new</span> T();<span class="hljs-comment">//她会调用构造函数，以类型申请堆空间</span>        T *t2 = <span class="hljs-keyword">static_cast</span>&lt;T *&gt;(<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(T))); <span class="hljs-comment">//不会调用构造和析构函数，以字节申请堆空间</span>        <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"t1.iv = "</span>&lt;&lt;t1-&gt;GetIv()&lt;&lt;<span class="hljs-built_in">endl</span>;                <span class="hljs-keyword">delete</span> t2;<span class="hljs-comment">//触发析构函数，析构函数用于释放资源</span>        <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"t2.iv = "</span>&lt;&lt;t2-&gt;GetIv()&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-built_in">free</span>(t1);<span class="hljs-comment">//如果new申请的空间，用free释放，析构函数是不会调用，会造成资源泄露 </span><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></li><li>运行</li></ul><pre><code class="hljs elixir">perryn@<span class="hljs-symbol">:/data/source/Cpp/demo</span><span class="hljs-symbol">:</span>./a.outCall T()t1.iv = <span class="hljs-number">100</span>t2.iv = 0Call <span class="hljs-string">~T()</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>c/c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx 简单介绍</title>
    <link href="/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h3 id="nginx-简单介绍"><a href="#nginx-简单介绍" class="headerlink" title="nginx 简单介绍"></a>nginx 简单介绍</h3><h4 id="什么是nginx"><a href="#什么是nginx" class="headerlink" title="什么是nginx?"></a>什么是nginx?</h4><ul><li>nginx是用纯C开发的一套web服务器软件，运行于用户态度</li><li>nginx 是一款web服务器，类似的产品还有apache<h4 id="nginx-能做什么？"><a href="#nginx-能做什么？" class="headerlink" title="nginx 能做什么？"></a>nginx 能做什么？</h4></li></ul><p><img src="/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/%E6%AD%A3%E5%90%91-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.png" srcset="/img/loading.gif" alt></p><ul><li>反向代理：后端服务器被代理的过程叫反向代理过程，代理后端服务器的节点叫做反向代理节点。举个例子，现在我们业务搭建了4个节点的服务集群，这4个节点是对等的，业务的一次请求不会请求4个节点的IP来完成任务，对外提供的只有一个公网IP，公网IP是请求流量的入口，这个时候就需要另外一个节点来代理内网中的4个节点集群服务，用户请求流量都是通过这个公网IP的节点进入，用nginx来做方向代理，把请求流量转发到服务集群中。</li><li>正向代理: 客户端被代理的过程叫正向代理，比如我们使用企业的VPN，安装VPN后，浏览器请求google，这个时候可以使用nginx来代理你的客户端来请求google的服务。</li><li>负载均衡:在反向代理中，每个被代理服务器可以设置不同的权重，用户请求到反向代理服务节点上会根据权重，把请求下发到不同权重的后端服务器上。比如每个服务节点的配置不同，为了达到配置比较好的节点能处理更多流量，配置低的节点处理少量流量的目的，我们使用nginx来为每个被代理节点设置权重来达到负载均衡。</li></ul><h4 id="nginx-应用场景有哪些？"><a href="#nginx-应用场景有哪些？" class="headerlink" title="nginx 应用场景有哪些？"></a>nginx 应用场景有哪些？</h4><p><img src="/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/nginx%E5%9C%BA%E6%99%AF.png" srcset="/img/loading.gif" alt></p><ul><li>静态资源:访问的资源和nginx部署的节点是在同一个服务器上。</li></ul><pre><code class="hljs axapta"><span class="hljs-comment">// 路径为:/home/perrynzhou/images下面有2张png图片</span><span class="hljs-comment">//修改配置文件nginx.conf</span>   <span class="hljs-keyword">server</span> &#123;        listen       <span class="hljs-number">80</span>;        server_name  localhost;        <span class="hljs-meta">#charset koi8-r;</span>        <span class="hljs-meta">#access_log  logs/host.access.log  main;</span>        location / &#123;            root   /home/perrynzhou/images/;            <span class="hljs-keyword">index</span>  <span class="hljs-keyword">index</span>.html <span class="hljs-keyword">index</span>.htm;        &#125; <span class="hljs-comment">// nginx -s reload</span> <span class="hljs-comment">// http://172.25.14.71/2.png 即可访问图片</span></code></pre><ul><li>API服务：代理后端API服务，比如代理redis api服务</li><li>反向代理: 代理后端服务器</li><li>缓存加速：nginx能否缓存请求的资源</li><li>负载均衡: nginx按照权重设置代理服务或者节点的优先级，按照优先级转发请求的流量</li></ul><h4 id="nginx的同类产品分析"><a href="#nginx的同类产品分析" class="headerlink" title="nginx的同类产品分析"></a>nginx的同类产品分析</h4><p><img src="/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%99%A8.png" srcset="/img/loading.gif" alt></p><ul><li>F5：硬件F5负载均衡器工作在数据链路层，基于mac地址的负载均衡。</li><li>lvs: 软件层的负载均衡，工作在网络层(IP层)，基于IP地址的负载均衡。</li><li>haproxy:工作在传输层，基于tcp/ip的聚在均衡器</li><li>nginx:工作在应用层的HTTP协议，基于http的聚在负载均衡器。</li></ul><h4 id="nginx-进程结构"><a href="#nginx-进程结构" class="headerlink" title="nginx 进程结构"></a>nginx 进程结构</h4><p><img src="/2020/06/24/nginx-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/nginx%E8%BF%9B%E7%A8%8B%E7%BB%93%E6%9E%84.jpg" srcset="/img/loading.gif" alt></p><ul><li><p>nginx进程结构分为master和worker进程，master进程和worker进程是1对多的关系。</p></li><li><p>master进程：主要用来管理worker进程，接收来自外界的信号，向各个worker进程发送信号，监控worker进程的运行状态当worker进程退出后，会自动情动新的worker进程,master进程扮演用户和worker进程的交互接口角色，同时对进程进行监护，他不需要处理网络事件，不负责业务执行，只会通过worker进程来实现重启服务，平滑升级，更换日志文件，配置文件生效等功能</p></li><li><p>worker进程 ： worker进程相互之间隔离和对等的，具有相同的几率去处理请求，所有的worker进程都是从master进程fork出来的,所有worker进程的listenfd会在新连接到来时变得可读，为保证只有一个进程处理该连接，所有worker进程在注册listenfd读事件前抢accept_mutex，抢到互斥锁的那个进程注册listenfd读事件，在读事件里调用accept接受该连接。当一个worker进程在accept这个连接之后，就开始读取请求，解析请求，处理请求，产生数据后，再返回给客户端，最后才断开连接，这样一个完整的请求就是这样的了。一个请求，完全由worker进程来处理，而且只在一个worker进程中处理。</p></li></ul><h4 id="nginx的核心模块"><a href="#nginx的核心模块" class="headerlink" title="nginx的核心模块"></a>nginx的核心模块</h4><ul><li><p>nginx 采用的模块方式组装整个nginx的功能，在编译阶段会产生一个ngx_modules.c的文件，该文件中定义了所有nginx的处理模块,其中有一个ngx_modules的数组。</p></li><li><p>当一个请求同时符合多个模块的处理规则时候，按照ngx_modules数组中的顺序选择最靠前的模块优先处理。</p></li><li><p>针对http的过滤模块而言则是相反的，因为http框架在初始化时候，会在ngx_modules的数组中将过滤模块按先后顺序向filter list中添加，每次添加都是添加到表头，因此针对http模块，越是靠后的模块越是优先响应http.</p></li><li><p>ngx_modules.c  定义</p><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ngx_config.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ngx_core.h&gt;</span></span><span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_core_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_errlog_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_conf_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_regex_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_events_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_event_core_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_epoll_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_core_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_log_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_static_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_autoindex_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_index_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_mirror_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_try_files_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_auth_basic_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_access_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_limit_conn_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_limit_req_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_geo_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_map_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_split_clients_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_referer_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_rewrite_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_proxy_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_fastcgi_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_uwsgi_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_scgi_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_memcached_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_empty_gif_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_browser_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_hash_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_ip_hash_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_least_conn_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_random_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_keepalive_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_upstream_zone_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_write_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_header_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_chunked_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_range_header_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_gzip_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_postpone_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_ssi_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_charset_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_userid_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_headers_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_copy_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_range_body_filter_module;<span class="hljs-keyword">extern</span> <span class="hljs-keyword">ngx_module_t</span>  ngx_http_not_modified_filter_module;<span class="hljs-keyword">ngx_module_t</span> *ngx_modules[] = &#123;    &amp;ngx_core_module,    &amp;ngx_errlog_module,    &amp;ngx_conf_module,    &amp;ngx_regex_module,    &amp;ngx_events_module,    &amp;ngx_event_core_module,    &amp;ngx_epoll_module,    &amp;ngx_http_module,    &amp;ngx_http_core_module,    &amp;ngx_http_log_module,    &amp;ngx_http_upstream_module,    &amp;ngx_http_static_module,    &amp;ngx_http_autoindex_module,    &amp;ngx_http_index_module,    &amp;ngx_http_mirror_module,    &amp;ngx_http_try_files_module,    &amp;ngx_http_auth_basic_module,    &amp;ngx_http_access_module,    &amp;ngx_http_limit_conn_module,    &amp;ngx_http_limit_req_module,    &amp;ngx_http_geo_module,    &amp;ngx_http_map_module,    &amp;ngx_http_split_clients_module,    &amp;ngx_http_referer_module,    &amp;ngx_http_rewrite_module,    &amp;ngx_http_proxy_module,    &amp;ngx_http_fastcgi_module,    &amp;ngx_http_uwsgi_module,    &amp;ngx_http_scgi_module,    &amp;ngx_http_memcached_module,    &amp;ngx_http_empty_gif_module,    &amp;ngx_http_browser_module,    &amp;ngx_http_upstream_hash_module,    &amp;ngx_http_upstream_ip_hash_module,    &amp;ngx_http_upstream_least_conn_module,    &amp;ngx_http_upstream_random_module,    &amp;ngx_http_upstream_keepalive_module,    &amp;ngx_http_upstream_zone_module,    &amp;ngx_http_write_filter_module,    &amp;ngx_http_header_filter_module,    &amp;ngx_http_chunked_filter_module,    &amp;ngx_http_range_header_filter_module,    &amp;ngx_http_gzip_filter_module,    &amp;ngx_http_postpone_filter_module,    &amp;ngx_http_ssi_filter_module,    &amp;ngx_http_charset_filter_module,    &amp;ngx_http_userid_filter_module,    &amp;ngx_http_headers_filter_module,    &amp;ngx_http_copy_filter_module,    &amp;ngx_http_range_body_filter_module,    &amp;ngx_http_not_modified_filter_module,    <span class="hljs-literal">NULL</span>&#125;;<span class="hljs-keyword">char</span> *ngx_module_names[] = &#123;    <span class="hljs-string">"ngx_core_module"</span>,    <span class="hljs-string">"ngx_errlog_module"</span>,    <span class="hljs-string">"ngx_conf_module"</span>,    <span class="hljs-string">"ngx_regex_module"</span>,    <span class="hljs-string">"ngx_events_module"</span>,    <span class="hljs-string">"ngx_event_core_module"</span>,    <span class="hljs-string">"ngx_epoll_module"</span>,    <span class="hljs-string">"ngx_http_module"</span>,    <span class="hljs-string">"ngx_http_core_module"</span>,    <span class="hljs-string">"ngx_http_log_module"</span>,    <span class="hljs-string">"ngx_http_upstream_module"</span>,    <span class="hljs-string">"ngx_http_static_module"</span>,    <span class="hljs-string">"ngx_http_autoindex_module"</span>,    <span class="hljs-string">"ngx_http_index_module"</span>,    <span class="hljs-string">"ngx_http_mirror_module"</span>,    <span class="hljs-string">"ngx_http_try_files_module"</span>,    <span class="hljs-string">"ngx_http_auth_basic_module"</span>,    <span class="hljs-string">"ngx_http_access_module"</span>,    <span class="hljs-string">"ngx_http_limit_conn_module"</span>,    <span class="hljs-string">"ngx_http_limit_req_module"</span>,    <span class="hljs-string">"ngx_http_geo_module"</span>,    <span class="hljs-string">"ngx_http_map_module"</span>,    <span class="hljs-string">"ngx_http_split_clients_module"</span>,    <span class="hljs-string">"ngx_http_referer_module"</span>,    <span class="hljs-string">"ngx_http_rewrite_module"</span>,    <span class="hljs-string">"ngx_http_proxy_module"</span>,    <span class="hljs-string">"ngx_http_fastcgi_module"</span>,    <span class="hljs-string">"ngx_http_uwsgi_module"</span>,    <span class="hljs-string">"ngx_http_scgi_module"</span>,    <span class="hljs-string">"ngx_http_memcached_module"</span>,    <span class="hljs-string">"ngx_http_empty_gif_module"</span>,    <span class="hljs-string">"ngx_http_browser_module"</span>,    <span class="hljs-string">"ngx_http_upstream_hash_module"</span>,    <span class="hljs-string">"ngx_http_upstream_ip_hash_module"</span>,    <span class="hljs-string">"ngx_http_upstream_least_conn_module"</span>,    <span class="hljs-string">"ngx_http_upstream_random_module"</span>,    <span class="hljs-string">"ngx_http_upstream_keepalive_module"</span>,    <span class="hljs-string">"ngx_http_upstream_zone_module"</span>,    <span class="hljs-string">"ngx_http_write_filter_module"</span>,    <span class="hljs-string">"ngx_http_header_filter_module"</span>,    <span class="hljs-string">"ngx_http_chunked_filter_module"</span>,    <span class="hljs-string">"ngx_http_range_header_filter_module"</span>,    <span class="hljs-string">"ngx_http_gzip_filter_module"</span>,    <span class="hljs-string">"ngx_http_postpone_filter_module"</span>,    <span class="hljs-string">"ngx_http_ssi_filter_module"</span>,    <span class="hljs-string">"ngx_http_charset_filter_module"</span>,    <span class="hljs-string">"ngx_http_userid_filter_module"</span>,    <span class="hljs-string">"ngx_http_headers_filter_module"</span>,    <span class="hljs-string">"ngx_http_copy_filter_module"</span>,    <span class="hljs-string">"ngx_http_range_body_filter_module"</span>,    <span class="hljs-string">"ngx_http_not_modified_filter_module"</span>,    <span class="hljs-literal">NULL</span>&#125;;</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>epoll中的惊群效应</title>
    <link href="/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/"/>
    <url>/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/</url>
    
    <content type="html"><![CDATA[<h3 id="多进程-使用epoll-select-poll-监听同一个端口的惊群效应解决方案"><a href="#多进程-使用epoll-select-poll-监听同一个端口的惊群效应解决方案" class="headerlink" title="多进程(使用epoll/select/poll)监听同一个端口的惊群效应解决方案"></a>多进程(使用epoll/select/poll)监听同一个端口的惊群效应解决方案</h3><h4 id="1-什么是惊群效应"><a href="#1-什么是惊群效应" class="headerlink" title="1.什么是惊群效应?"></a>1.什么是惊群效应?</h4><p><img src="/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/1.png" srcset="/img/loading.gif" alt></p><ul><li>多个进程(A、B、C、D的worker进程)使用epoll/poll/select等函数监听同一个端口时候，当有一个TCP请求连接到该端口时候，A、B、C、D进程会被同时唤醒，但是仅仅有一个进程会accept接受来自客户端的连接，其他的进程则会挂起。</li></ul><ul><li>举个例子，假设你去银行柜台取钱，银行有4个窗口，每个窗口的营业员都在等待客户来取钱，叫到某个号码时候(就该手持某个号码的人去柜台取钱),这个人就去柜台，在这个时候4个窗口营业员同时叫那个人去自己窗口办理，但是仅仅只会有一个窗口的营业员提供服务给你，但是这4个窗口的营业员会去“招呼”你去她哪里办理业务。4个窗口的营业员同时叫你自己的号码时候，只有一个窗口提供服务，这个效应就是惊群</li></ul><h4 id="2-如何产生惊群效应"><a href="#2-如何产生惊群效应" class="headerlink" title="2.如何产生惊群效应"></a>2.如何产生惊群效应</h4><ul><li>在早期的Linux版本中，内核对于阻塞在epoll_wait的进程，也是采用全部唤醒的机制，所以存在和accept相似的“惊群”问题。新版本的的解决方案也是只会唤醒等待队列上的第一个进程或线程，所以，新版本Linux 部分的解决了epoll的“惊群”问题。所谓部分的解决，意思就是：对于部分特殊场景，使用epoll机制，已经不存在“惊群”的问题了，但是对于大多数场景，epoll机制仍然存在“惊群”.</li><li>多个进程同时监听同一个端口时候，当有请求连接到该端口时候，多个进程会被同时唤醒，但是仅仅有一个进程会accept的请求，其他的进程则会挂起</li></ul><h4 id="3-惊群效应影响"><a href="#3-惊群效应影响" class="headerlink" title="3.惊群效应影响"></a>3.惊群效应影响</h4><ul><li>假设有10万tcp请求，后端有64个worker进程,这些进程的唤醒和挂起之间的切换开销非常大，会严重影响服务器的处理请求的吞吐量</li></ul><h4 id="4-如何解决惊群效应"><a href="#4-如何解决惊群效应" class="headerlink" title="4.如何解决惊群效应"></a>4.如何解决惊群效应</h4><ul><li>多进程方式下，在共享内存设置一个变量，在多个进程accept请求之前针对该变量加锁，哪个进程获取到锁，哪个进程就accept请求。</li></ul><h4 id="5-解决惊群效应解决思路"><a href="#5-解决惊群效应解决思路" class="headerlink" title="5.解决惊群效应解决思路"></a>5.解决惊群效应解决思路</h4><p><img src="/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/2.png" srcset="/img/loading.gif" alt></p><ul><li>在epoll_wait返回，获取锁，如果获得锁就继续accept新的request;否则继续epoll_wait</li></ul><h4 id="6-惊群效应例子"><a href="#6-惊群效应例子" class="headerlink" title="6.惊群效应例子"></a>6.惊群效应例子</h4><ul><li>运行实例</li></ul><p><img src="/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/3.jpg" srcset="/img/loading.gif" alt><br><img src="/2020/06/23/epoll%E4%B8%AD%E7%9A%84%E6%83%8A%E7%BE%A4%E6%95%88%E5%BA%94/4.jpg" srcset="/img/loading.gif" alt></p><ul><li>代码<pre><code class="hljs arduino"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: epoll_test.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Tuesday, June 23, 2020 AM08:45:28 HKT</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/types.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/socket.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/epoll.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;netdb.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;fcntl.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;errno.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;netinet/in.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;arpa/inet.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> NET_SERVICE_BUFFER_LEN (1024)</span><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">net_service_t</span></span><span class="hljs-class">&#123;</span>  <span class="hljs-keyword">int</span> sfd;  <span class="hljs-keyword">int</span> efd;  <span class="hljs-keyword">int</span> worker_process_num;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">epoll_event</span> <span class="hljs-title">event</span>;</span>  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">epoll_event</span> *<span class="hljs-title">events</span>;</span>&#125; net_service;<span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">net_service_accept_request</span><span class="hljs-params">(net_service *ns)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr</span> <span class="hljs-title">client_addr</span>;</span>  <span class="hljs-keyword">socklen_t</span> len = <span class="hljs-keyword">sizeof</span>(struct sockaddr);  <span class="hljs-keyword">return</span> accept(ns-&gt;sfd, &amp;client_addr, &amp;len);&#125;<span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">net_service_fetch_client_addr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> newfd, <span class="hljs-keyword">char</span> *buf, <span class="hljs-keyword">size_t</span> sz)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">addr</span>;</span>  <span class="hljs-keyword">socklen_t</span> addr_size = <span class="hljs-keyword">sizeof</span>(struct sockaddr_in);  <span class="hljs-keyword">int</span> res = getpeername(newfd, (struct sockaddr *)&amp;addr, &amp;addr_size);  <span class="hljs-built_in">strncpy</span>(buf, inet_ntoa(addr.sin_addr), sz);&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">net_service_handle_request</span><span class="hljs-params">(net_service *ns, <span class="hljs-keyword">int</span> k)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> max_event = <span class="hljs-number">1024</span>;  <span class="hljs-keyword">int</span> efd = ns-&gt;efd;  <span class="hljs-keyword">int</span> sfd = ns-&gt;sfd;  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">epoll_event</span> *<span class="hljs-title">events</span> = <span class="hljs-title">ns</span>-&gt;<span class="hljs-title">events</span>;</span>  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)  &#123;    <span class="hljs-keyword">int</span> n = epoll_wait(efd, events, max_event, <span class="hljs-number">-1</span>);    usleep(<span class="hljs-number">100</span>);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)    &#123;      <span class="hljs-keyword">if</span> (events[i].events &amp; EPOLLERR)      &#123;        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"epoll error\n"</span>);        <span class="hljs-built_in">close</span>(events[i].data.fd);        <span class="hljs-keyword">continue</span>;      &#125;      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sfd == events[i].data.fd)      &#123;        <span class="hljs-keyword">int</span> client_fd = net_service_accept_request(ns);        <span class="hljs-keyword">if</span> (client_fd == <span class="hljs-number">-1</span>)        &#123;          <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"worker-%d-[%d] process return from  epoll_wait,accept failed\n"</span>, k, getpid());          <span class="hljs-keyword">break</span>;        &#125;        <span class="hljs-keyword">char</span> b[NET_SERVICE_BUFFER_LEN];        net_service_fetch_client_addr(client_fd, (<span class="hljs-keyword">char</span> *)&amp;b, NET_SERVICE_BUFFER_LEN);        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"worker-%d-[%d] process return from  epoll_wait,accept %s success\n"</span>, k, getpid(), (<span class="hljs-keyword">char</span> *)&amp;b);        <span class="hljs-built_in">close</span>(client_fd);      &#125;    &#125;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">net_service_create_and_bind</span><span class="hljs-params">(net_service *ns, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *addr, <span class="hljs-keyword">int</span> port)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> fd = socket(PF_INET, SOCK_STREAM, <span class="hljs-number">0</span>);  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">serveraddr</span>;</span>  serveraddr.sin_family = AF_INET;  inet_pton(AF_INET, addr, &amp;serveraddr.sin_addr);  serveraddr.sin_port = htons(port);  bind(fd, (struct sockaddr *)&amp;serveraddr, <span class="hljs-keyword">sizeof</span>(serveraddr));  ns-&gt;sfd = fd;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">net_service_setsockopt</span><span class="hljs-params">(net_service *ns)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> flags, s;  flags = fcntl(ns-&gt;sfd, F_GETFL, <span class="hljs-number">0</span>);  <span class="hljs-keyword">if</span> (flags == <span class="hljs-number">-1</span>)  &#123;    perror(<span class="hljs-string">"fcntl"</span>);    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  &#125;  flags |= O_NONBLOCK;  <span class="hljs-keyword">if</span> (fcntl(ns-&gt;sfd, F_SETFL, flags) == <span class="hljs-number">-1</span>)  &#123;    perror(<span class="hljs-string">"fcntl"</span>);    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  &#125;  <span class="hljs-keyword">int</span> reuse = <span class="hljs-number">0</span>;  setsockopt(s, SOL_SOCKET, SO_REUSEADDR, (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;reuse, <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>));  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">net_service_init</span><span class="hljs-params">(net_service *ns, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *addr, <span class="hljs-keyword">int</span> port, <span class="hljs-keyword">int</span> num)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> max_events = <span class="hljs-number">1024</span>;  <span class="hljs-keyword">if</span> (addr != <span class="hljs-literal">NULL</span> &amp;&amp; net_service_create_and_bind(ns, addr, port) != <span class="hljs-number">-1</span>)  &#123;    net_service_setsockopt(ns);    <span class="hljs-built_in">listen</span>(ns-&gt;sfd, <span class="hljs-number">1024</span>);    ns-&gt;efd = epoll_create(max_events);    ns-&gt;event.data.fd = ns-&gt;sfd;    ns-&gt;event.events = EPOLLIN;    epoll_ctl(ns-&gt;efd, EPOLL_CTL_ADD, ns-&gt;sfd, &amp;ns-&gt;event);    ns-&gt;events = <span class="hljs-built_in">calloc</span>(max_events, <span class="hljs-keyword">sizeof</span>(struct epoll_event));    assert(ns-&gt;events != <span class="hljs-literal">NULL</span>);    ns-&gt;worker_process_num = num;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">net_service_run</span><span class="hljs-params">(net_service *ns)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">pid_t</span> pid = <span class="hljs-number">0</span>;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; ns-&gt;worker_process_num; i++)  &#123;    fflush(<span class="hljs-literal">NULL</span>);    pid = fork();    <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"start worker-%d-%d\n"</span>, i, getpid());      net_service_handle_request(ns, i);    &#125;  &#125;  <span class="hljs-keyword">while</span> ((pid = waitpid(<span class="hljs-number">-1</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>)))  &#123;    <span class="hljs-keyword">if</span> (errno == ECHILD)    &#123;      <span class="hljs-keyword">break</span>;    &#125;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">net_service_deinit</span><span class="hljs-params">(net_service *ns)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">if</span> (ns != <span class="hljs-literal">NULL</span>)  &#123;    <span class="hljs-keyword">if</span> (ns-&gt;efd != <span class="hljs-number">-1</span>)    &#123;      <span class="hljs-built_in">close</span>(ns-&gt;efd);    &#125;    <span class="hljs-keyword">if</span> (ns-&gt;sfd != <span class="hljs-number">-1</span>)    &#123;      <span class="hljs-built_in">close</span>(ns-&gt;sfd);    &#125;    ns-&gt;sfd = ns-&gt;efd = <span class="hljs-number">-1</span>;    <span class="hljs-keyword">if</span> (ns-&gt;events != <span class="hljs-literal">NULL</span>)    &#123;      <span class="hljs-built_in">free</span>(ns-&gt;events);      ns-&gt;events = <span class="hljs-literal">NULL</span>;    &#125;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>&#123;  net_service net;  net_service_init(&amp;net, <span class="hljs-string">"127.0.0.1"</span>, <span class="hljs-number">9988</span>, <span class="hljs-number">4</span>);  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"run on %s:%d\n"</span>, <span class="hljs-string">"127.0.0.1"</span>, <span class="hljs-number">9988</span>);  net_service_run(&amp;net);  net_service_deinit(&amp;net);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title> linux 锁</title>
    <link href="/2020/06/22/linux-%E9%94%81/"/>
    <url>/2020/06/22/linux-%E9%94%81/</url>
    
    <content type="html"><![CDATA[<h2 id="linux-锁"><a href="#linux-锁" class="headerlink" title="linux 锁"></a>linux 锁</h2><h3 id="linux中有哪几种临界资源访问保护机制"><a href="#linux中有哪几种临界资源访问保护机制" class="headerlink" title="linux中有哪几种临界资源访问保护机制"></a>linux中有哪几种临界资源访问保护机制</h3><ul><li>互斥锁:核心以pthread_mutex_t为核心</li><li>自旋锁:核心以pthread_spinlock_t为核心</li><li>原子操作:自定义C函数封装汇编</li></ul><h3 id="各种临界资源保护机制的用法"><a href="#各种临界资源保护机制的用法" class="headerlink" title="各种临界资源保护机制的用法"></a>各种临界资源保护机制的用法</h3><ul><li>pthread_t :在多线程情况下,线程会切换，但是某个线程方法进入以pthread_mutex_t加锁的临界资源</li><li>pthread_spinlock_t:多线程情况下，不会产生线程切换，某个线程进入以pthread_spinlock_t加锁的临界资源时候，线程无法获取锁就会自旋等待，这个pthread_spinlock_t用在操作非常简单，等待时间非常短的情况下。</li><li>原子操作：在函数内部嵌入asm汇编，用一条汇编指令表达。</li></ul><h3 id="i-自增操"><a href="#i-自增操" class="headerlink" title="i++ 自增操"></a>i++ 自增操</h3><ul><li>i++ 操作：i++操作编译成汇编后，都是三条指令,线程执行任何一个汇编指令时候都可能发生线程切换，多线程情况下不能保证i++是原子操作<pre><code class="hljs css">1<span class="hljs-selector-class">.move</span> <span class="hljs-selector-attr">[var]</span>,%<span class="hljs-selector-tag">ebx</span>2<span class="hljs-selector-class">.incr</span> %<span class="hljs-selector-tag">ebx</span>3<span class="hljs-selector-class">.move</span> %<span class="hljs-selector-tag">ebx</span> <span class="hljs-selector-attr">[var]</span></code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tcp/ip 三次握手</title>
    <link href="/2020/06/20/tcp-ip-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/"/>
    <url>/2020/06/20/tcp-ip-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/</url>
    
    <content type="html"><![CDATA[<h4 id="tcp-ip-三次握手"><a href="#tcp-ip-三次握手" class="headerlink" title="tcp/ip 三次握手"></a>tcp/ip 三次握手</h4><p><img src="/2020/06/20/tcp-ip-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/tcp-shandshark.png" srcset="/img/loading.gif" alt="image-20200620161218149"></p><ul><li>tcp/ip和系统api有啥关系<ul><li>tcp/ip基于ip层来提供稳定的有连接的服务。tcp/ip编程中的socket是有几个元素组成，分别是:（文件描述符:源端IP、源端端口、目标端IP、目标端端口、协议）组成</li><li>tcp/ip中的发起第一次和服务端握手，体现在api中的connect是发起连接，第二次和第三次握手都是在网络协议栈中完成，其中服务端的api 中的accept完成了协议栈中从syn队列中取出握手信息到accept队列中。</li></ul></li><li>read和recv区别？write和send区别?<ul><li>linux系统调用read读取到fd,进入do_read函数，发现是网络socket套接字，最终执行的recv的函数；</li><li>同理write函数和read函数也是这么做，read/write对应的是文件描述符；send/recv对应的是网络协议栈中的源端IP、源端端口、目标端IP、目标端端口、协议.一切接文件是linux的抽象</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs 如何定位一个文件位置</title>
    <link href="/2020/06/10/glusterfs-%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE/"/>
    <url>/2020/06/10/glusterfs-%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="glusterfs-如何定位一个文件位置"><a href="#glusterfs-如何定位一个文件位置" class="headerlink" title="glusterfs 如何定位一个文件位置"></a>glusterfs 如何定位一个文件位置</h3><ul><li>volume 信息</li></ul><pre><code class="hljs yaml"><span class="hljs-comment"># gluster volume info</span> <span class="hljs-attr">Volume Name:</span> <span class="hljs-string">rep3_vol</span><span class="hljs-attr">Type:</span> <span class="hljs-string">Distributed-Replicate</span><span class="hljs-attr">Volume ID:</span> <span class="hljs-string">73360fc2-e105-4fd4-9b92-b5fa333ba75d</span><span class="hljs-attr">Status:</span> <span class="hljs-string">Started</span><span class="hljs-attr">Snapshot Count:</span> <span class="hljs-number">0</span><span class="hljs-attr">Number of Bricks:</span> <span class="hljs-number">12</span> <span class="hljs-string">x</span> <span class="hljs-number">3</span> <span class="hljs-string">=</span> <span class="hljs-number">36</span><span class="hljs-attr">Transport-type:</span> <span class="hljs-string">tcp</span><span class="hljs-attr">Bricks:</span><span class="hljs-attr">Brick1:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Brick2:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Brick3:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Brick4:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data2/brick_rep3_vol</span><span class="hljs-attr">Brick5:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data2/brick_rep3_vol</span><span class="hljs-attr">Brick6:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data2/brick_rep3_vol</span><span class="hljs-attr">Brick7:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data3/brick_rep3_vol</span><span class="hljs-attr">Brick8:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data3/brick_rep3_vol</span><span class="hljs-attr">Brick9:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data3/brick_rep3_vol</span><span class="hljs-attr">Brick10:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data4/brick_rep3_vol</span><span class="hljs-attr">Brick11:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data4/brick_rep3_vol</span><span class="hljs-attr">Brick12:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data4/brick_rep3_vol</span><span class="hljs-attr">Brick13:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data5/brick_rep3_vol</span><span class="hljs-attr">Brick14:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data5/brick_rep3_vol</span><span class="hljs-attr">Brick15:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data5/brick_rep3_vol</span><span class="hljs-attr">Brick16:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data6/brick_rep3_vol</span><span class="hljs-attr">Brick17:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data6/brick_rep3_vol</span><span class="hljs-attr">Brick18:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data6/brick_rep3_vol</span><span class="hljs-attr">Brick19:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data7/brick_rep3_vol</span><span class="hljs-attr">Brick20:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data7/brick_rep3_vol</span><span class="hljs-attr">Brick21:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data7/brick_rep3_vol</span><span class="hljs-attr">Brick22:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data8/brick_rep3_vol</span><span class="hljs-attr">Brick23:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data8/brick_rep3_vol</span><span class="hljs-attr">Brick24:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data8/brick_rep3_vol</span><span class="hljs-attr">Brick25:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data9/brick_rep3_vol</span><span class="hljs-attr">Brick26:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data9/brick_rep3_vol</span><span class="hljs-attr">Brick27:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data9/brick_rep3_vol</span><span class="hljs-attr">Brick28:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data10/brick_rep3_vol</span><span class="hljs-attr">Brick29:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data10/brick_rep3_vol</span><span class="hljs-attr">Brick30:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data10/brick_rep3_vol</span><span class="hljs-attr">Brick31:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data11/brick_rep3_vol</span><span class="hljs-attr">Brick32:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data11/brick_rep3_vol</span><span class="hljs-attr">Brick33:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data11/brick_rep3_vol</span><span class="hljs-attr">Brick34:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/data12/brick_rep3_vol</span><span class="hljs-attr">Brick35:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/data12/brick_rep3_vol</span><span class="hljs-attr">Brick36:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/data12/brick_rep3_vol</span><span class="hljs-attr">Options Reconfigured:</span><span class="hljs-attr">cluster.lookup-unhashed:</span> <span class="hljs-string">off</span><span class="hljs-attr">features.shard-block-size:</span> <span class="hljs-string">8GB</span><span class="hljs-attr">features.shard:</span> <span class="hljs-string">on</span><span class="hljs-attr">diagnostics.brick-log-level:</span> <span class="hljs-string">INFO</span><span class="hljs-attr">performance.client-io-threads:</span> <span class="hljs-string">off</span><span class="hljs-attr">nfs.disable:</span> <span class="hljs-string">on</span><span class="hljs-attr">storage.fips-mode-rchecksum:</span> <span class="hljs-string">on</span><span class="hljs-attr">transport.address-family:</span> <span class="hljs-string">inet</span><span class="hljs-attr">diagnostics.client-log-level:</span> <span class="hljs-string">DEBUG</span></code></pre><ul><li>cp或者rm一个文件，无论是dht/aft的模式，glusterfs都会先定位这个文件在哪个节点的哪个brick上，其使用的查找方法是dht_layout_search。</li></ul><pre><code class="hljs arduino"><span class="hljs-comment">// 参数传递一个目录名称或者文件名称，计算哈希值</span><span class="hljs-function"><span class="hljs-keyword">xlator_t</span> *<span class="hljs-title">dht_layout_search</span><span class="hljs-params">(<span class="hljs-keyword">xlator_t</span> *<span class="hljs-keyword">this</span>, <span class="hljs-keyword">dht_layout_t</span> *layout, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *name)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">uint32_t</span> hash = <span class="hljs-number">0</span>;    <span class="hljs-keyword">xlator_t</span> *subvol = <span class="hljs-literal">NULL</span>;    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;    <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;    <span class="hljs-comment">//哈希函数</span>    ret = dht_hash_compute(<span class="hljs-keyword">this</span>, layout-&gt;type, name, &amp;hash);    <span class="hljs-comment">//如果是哈席卷,layout-&gt;cnt为brick的数量;如果是副本卷，layout-&gt;cnt则为副本的数量，比如12*3的副本卷模式，则layout-&gt;cnt为12</span>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; layout-&gt;cnt; i++) &#123;        <span class="hljs-keyword">if</span> (layout-&gt;<span class="hljs-built_in">list</span>[i].start &lt;= hash &amp;&amp; layout-&gt;<span class="hljs-built_in">list</span>[i].<span class="hljs-built_in">stop</span> &gt;= hash) &#123;        <span class="hljs-comment">// layout-&gt;list[i].xlator代表的是某个rep3_vol-replicate-&#123;n&#125;,的，而某个replicat有三个rep3_vol-client-&#123;n&#125;组成，rep3_vol-client是连接每个glusterfsd的进程的信息</span>            subvol = layout-&gt;<span class="hljs-built_in">list</span>[i].xlator;            <span class="hljs-keyword">break</span>;        &#125;    &#125;out:    <span class="hljs-keyword">return</span> subvol;&#125;</code></pre><ul><li>dht_layout_search并不是显示的调用该函数，而是通过dht_init_methods初始化<pre><code class="hljs cpp"><span class="hljs-keyword">int</span>dht_init_methods(<span class="hljs-keyword">xlator_t</span> *<span class="hljs-keyword">this</span>)&#123;    <span class="hljs-keyword">int</span> ret = <span class="hljs-number">-1</span>;    <span class="hljs-keyword">dht_conf_t</span> *conf = <span class="hljs-literal">NULL</span>;    <span class="hljs-keyword">dht_methods_t</span> *methods = <span class="hljs-literal">NULL</span>;    GF_VALIDATE_OR_GOTO(<span class="hljs-string">"dht"</span>, <span class="hljs-keyword">this</span>, err);    conf = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-keyword">private</span>;    methods = &amp;(conf-&gt;methods);    methods-&gt;migration_get_dst_subvol = dht_migration_get_dst_subvol;    methods-&gt;migration_needed = dht_migration_needed;    methods-&gt;migration_other = <span class="hljs-literal">NULL</span>;    methods-&gt;layout_search = dht_layout_search;    ret = <span class="hljs-number">0</span>;err:    <span class="hljs-keyword">return</span> ret;&#125;</code></pre></li><li>Final graph</li></ul><pre><code class="hljs sql">Final graph:+<span class="hljs-comment">------------------------------------------------------------------------------+</span> volume rep3_vol-client-0     type protocol/client     option opversion 70200     option clnt-lk-version 1     option volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-0</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /debug/glusterfs/rep3_vol/brick     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-1</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-1</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /debug/glusterfs/rep3_vol/brick     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-2</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-2</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /debug/glusterfs/rep3_vol/brick     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-0</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-0</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-1</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-2</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-0</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-1</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-2</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-3</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-3</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data2/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-4</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-4</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data2/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-5</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-5</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data2/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-1</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-3</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-4</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-5</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-3</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-4</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-5</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-6</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-6</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data3/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-7</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-7</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data3/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-8</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-8</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data3/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-2</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-6</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-7</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-8</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-6</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-7</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-8</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-9</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-9</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data4/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-10</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-10</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data4/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-11</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-11</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data4/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-3</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-9</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-10</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-11</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-9</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-10</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-11</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-12</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-12</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data5/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-13</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-13</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data5/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-14</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-14</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data5/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-4</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-12</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-13</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-14</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-12</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-13</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-14</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-15</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-15</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data6/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-16</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-16</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data6/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-17</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-17</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data6/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-5</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-15</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-16</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-17</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-15</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-16</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-17</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-18</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-18</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data7/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-19</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-19</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data7/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-20</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-20</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data7/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-6</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-18</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-19</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-20</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-18</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-19</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-20</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-21</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-21</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data8/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-22</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-22</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data8/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-23</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-23</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data8/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-7</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-21</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-22</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-23</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-21</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-22</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-23</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-24</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-24</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data9/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-25</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-25</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data9/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-26</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-26</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data9/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-8</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-24</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-25</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-26</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-24</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-25</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-26</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-27</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-27</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data10/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-28</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-28</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data10/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-29</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-29</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data10/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-9</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-27</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-28</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-29</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-27</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-28</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-29</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-30</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-30</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data11/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-31</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-31</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data11/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-32</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-32</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data11/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span><span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480043</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: <span class="hljs-keyword">returning</span> ip<span class="hljs-number">-10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span>      <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-10</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-30</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-31</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-32</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-30</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-31</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-32</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> opversion <span class="hljs-number">70200</span>     <span class="hljs-keyword">option</span> clnt-lk-<span class="hljs-keyword">version</span> <span class="hljs-number">1</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">checksum</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> volfile-<span class="hljs-keyword">key</span> rep3_vol     <span class="hljs-keyword">option</span> <span class="hljs-keyword">client</span>-<span class="hljs-keyword">version</span> <span class="hljs-number">2020.05</span><span class="hljs-number">.12</span>     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">name</span> fuse     <span class="hljs-keyword">option</span> process-<span class="hljs-keyword">uuid</span> CTX_ID:da279c3e<span class="hljs-number">-54</span>cc<span class="hljs-number">-4</span>d0e-b921<span class="hljs-number">-1395</span>feeeae9a-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">93273</span>-HOST:ai-<span class="hljs-keyword">storage</span>-prd<span class="hljs-number">-10</span><span class="hljs-number">-193</span><span class="hljs-number">-189</span><span class="hljs-number">-153.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>-RECON_NO:<span class="hljs-number">-0</span>     <span class="hljs-keyword">option</span> fops-<span class="hljs-keyword">version</span> <span class="hljs-number">1298437</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>     <span class="hljs-keyword">option</span> remote-subvolume /data12/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-34</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span>     <span class="hljs-keyword">option</span> remote-subvolume /data12/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-35</span>     <span class="hljs-keyword">type</span> protocol/<span class="hljs-keyword">client</span>     <span class="hljs-keyword">option</span> ping-<span class="hljs-keyword">timeout</span> <span class="hljs-number">42</span>     <span class="hljs-keyword">option</span> remote-host <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span>     <span class="hljs-keyword">option</span> remote-subvolume /data12/brick_rep3_vol     <span class="hljs-keyword">option</span> transport-<span class="hljs-keyword">type</span> socket     <span class="hljs-keyword">option</span> transport.address-family inet     <span class="hljs-keyword">option</span> username bdb0a45d-e70d<span class="hljs-number">-445</span>d<span class="hljs-number">-8</span>fe6<span class="hljs-number">-76118</span>dfdb738     <span class="hljs-keyword">option</span> <span class="hljs-keyword">password</span> <span class="hljs-number">7e9</span>a1877<span class="hljs-number">-0837</span><span class="hljs-number">-4563</span>-b73d-aa4cde754c91     <span class="hljs-keyword">option</span> transport.socket.ssl-enabled <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> transport.tcp-<span class="hljs-keyword">user</span>-<span class="hljs-keyword">timeout</span> <span class="hljs-number">0</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">time</span> <span class="hljs-number">20</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-built_in">interval</span> <span class="hljs-number">2</span>     <span class="hljs-keyword">option</span> transport.socket.keepalive-<span class="hljs-keyword">count</span> <span class="hljs-number">9</span>     <span class="hljs-keyword">option</span> send-gids <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-11</span>     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">replicate</span>     <span class="hljs-keyword">option</span> afr-pending-xattr rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-34</span>,rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-35</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">use</span>-<span class="hljs-keyword">compound</span>-fops <span class="hljs-keyword">off</span>     subvolumes rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-34</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-35</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-dht     <span class="hljs-keyword">type</span> cluster/<span class="hljs-keyword">distribute</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">lock</span>-<span class="hljs-keyword">migration</span> <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">force</span>-<span class="hljs-keyword">migration</span> <span class="hljs-keyword">off</span><span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480240</span>] I [MSGID: <span class="hljs-number">114046</span>] [<span class="hljs-keyword">client</span>-handshake.c:<span class="hljs-number">1105</span>:client_setvolume_cbk] <span class="hljs-number">0</span>-rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>: Connected <span class="hljs-keyword">to</span> rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>, attached <span class="hljs-keyword">to</span> remote volume <span class="hljs-string">'/data12/brick_rep3_vol'</span>.      subvolumes rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-0</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-1</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-2</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-3</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-4</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-5</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-6</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-7</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-8</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-9</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-10</span> rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-11</span> <span class="hljs-keyword">end</span>-volume  <span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480280</span>] D [MSGID: <span class="hljs-number">0</span>] [<span class="hljs-keyword">client</span>-handshake.c:<span class="hljs-number">945</span>:client_post_handshake] <span class="hljs-number">0</span>-rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-33</span>: <span class="hljs-keyword">No</span> fds <span class="hljs-keyword">to</span> <span class="hljs-keyword">open</span> - notifying <span class="hljs-keyword">all</span> parents <span class="hljs-keyword">child</span> up  volume rep3_vol-shard     <span class="hljs-keyword">type</span> features/shard     <span class="hljs-keyword">option</span> shard-<span class="hljs-keyword">block</span>-<span class="hljs-keyword">size</span> <span class="hljs-number">8</span>GB     subvolumes rep3_vol-dht <span class="hljs-keyword">end</span>-volume   volume rep3_vol-utime<span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480305</span>] D [MSGID: <span class="hljs-number">0</span>] [afr-common.c:<span class="hljs-number">5209</span>:afr_get_halo_latency] <span class="hljs-number">0</span>-rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-11</span>: <span class="hljs-keyword">Using</span> halo latency <span class="hljs-number">5</span>      <span class="hljs-keyword">type</span> features/utime     <span class="hljs-keyword">option</span> noatime <span class="hljs-keyword">on</span><span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480343</span>] I [MSGID: <span class="hljs-number">108005</span>] [afr-common.c:<span class="hljs-number">5293</span>:__afr_handle_child_up_event] <span class="hljs-number">0</span>-rep3_vol-<span class="hljs-keyword">replicate</span><span class="hljs-number">-11</span>: Subvolume <span class="hljs-string">'rep3_vol-client-33'</span> came back up; going online.      subvolumes rep3_vol-shard <span class="hljs-keyword">end</span>-volume   volume rep3_vol-write-behind     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/write-behind     subvolumes rep3_vol-utime <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">read</span>-ahead     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/<span class="hljs-keyword">read</span>-ahead     subvolumes rep3_vol-write-behind <span class="hljs-keyword">end</span>-volume   volume rep3_vol-readdir-ahead     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/readdir-ahead     <span class="hljs-keyword">option</span> <span class="hljs-keyword">parallel</span>-readdir <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> rda-request-<span class="hljs-keyword">size</span> <span class="hljs-number">131072</span>     <span class="hljs-keyword">option</span> rda-<span class="hljs-keyword">cache</span>-<span class="hljs-keyword">limit</span> <span class="hljs-number">10</span>MB     subvolumes rep3_vol-<span class="hljs-keyword">read</span>-ahead <span class="hljs-keyword">end</span>-volume   volume rep3_vol-io-<span class="hljs-keyword">cache</span><span class="hljs-number">0</span><span class="hljs-number">-06</span><span class="hljs-number">-10</span> <span class="hljs-number">08</span>:<span class="hljs-number">15</span>:<span class="hljs-number">10.480407</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2323</span>:client_rpc_notify] <span class="hljs-number">0</span>-rep3_vol-<span class="hljs-keyword">client</span><span class="hljs-number">-35</span>: got RPC_CLNT_CONNECT      <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/io-<span class="hljs-keyword">cache</span>     subvolumes rep3_vol-readdir-ahead <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">open</span>-behind     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/<span class="hljs-keyword">open</span>-behind     subvolumes rep3_vol-io-<span class="hljs-keyword">cache</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol-<span class="hljs-keyword">quick</span>-<span class="hljs-keyword">read</span>     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/<span class="hljs-keyword">quick</span>-<span class="hljs-keyword">read</span>     subvolumes rep3_vol-<span class="hljs-keyword">open</span>-behind <span class="hljs-keyword">end</span>-volume   volume rep3_vol-md-<span class="hljs-keyword">cache</span>     <span class="hljs-keyword">type</span> <span class="hljs-keyword">performance</span>/md-<span class="hljs-keyword">cache</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">cache</span>-posix-acl <span class="hljs-literal">true</span>     subvolumes rep3_vol-<span class="hljs-keyword">quick</span>-<span class="hljs-keyword">read</span> <span class="hljs-keyword">end</span>-volume   volume rep3_vol     <span class="hljs-keyword">type</span> debug/io-stats     <span class="hljs-keyword">option</span> <span class="hljs-keyword">log</span>-<span class="hljs-keyword">level</span> DEBUG     <span class="hljs-keyword">option</span> threads <span class="hljs-number">16</span>     <span class="hljs-keyword">option</span> latency-measurement <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">count</span>-fop-hits <span class="hljs-keyword">off</span>     <span class="hljs-keyword">option</span> <span class="hljs-keyword">global</span>-threading <span class="hljs-keyword">off</span>     subvolumes rep3_vol-md-<span class="hljs-keyword">cache</span> <span class="hljs-keyword">end</span>-volume   volume posix-acl-autoload     <span class="hljs-keyword">type</span> <span class="hljs-keyword">system</span>/posix-acl     subvolumes rep3_vol <span class="hljs-keyword">end</span>-volume   volume meta-autoload     <span class="hljs-keyword">type</span> meta     subvolumes posix-acl-autoload <span class="hljs-keyword">end</span>-volume  +<span class="hljs-comment">------------------------------------------------------------------------------+</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs客户端如何cp一个文件?</title>
    <link href="/2020/06/10/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A6%82%E4%BD%95cp%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6/"/>
    <url>/2020/06/10/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A6%82%E4%BD%95cp%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="glusterfs-fuse简单介绍"><a href="#glusterfs-fuse简单介绍" class="headerlink" title="glusterfs fuse简单介绍"></a>glusterfs fuse简单介绍</h3><pre><code>xlator是glusterfs核心的概念，每个xlator对用一系列函数处理对应的文件操作,glusterfs/glusterfsd/glusterd的三个二进制的入口都是相同的(glusterfs/src/glusterfsd.c)，但是在不同模块的逻辑上处理会加载不同的xlator来完成对应模块功能的操作。glusterfs客户端实现是基于fuse实现了自己的API。如下是glusterfs客户单核心函数调用链(glusterfs/src/glusterfsd.c)</code></pre><h3 id="fuse-请求转发流程"><a href="#fuse-请求转发流程" class="headerlink" title="fuse 请求转发流程"></a>fuse 请求转发流程</h3><p><img src="/2020/06/10/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A6%82%E4%BD%95cp%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6/glusterfs-process.png" srcset="/img/loading.gif" alt></p><ul><li><p>1.main</p><ul><li>glusterfs入口函数</li></ul></li><li><p>2.create_fuse_mount</p><ul><li>设置mount/fuse xlator,调用xlator_set_type初始化这个mount/fuse的模块(实际调用mount/fuse中的xlator的init方法)，这个也是后面我们着重需要讲清楚的模块</li></ul></li><li><p>3.glusterfs_volumes_init</p><ul><li>根据挂载时候的提供的节点IP，初始化glusterfs客户端需要的信息，比如服务端brick的元数据局，客户端需要加载的哪些xlators</li></ul></li><li><p>4.glusterfs_mgmt_init</p><ul><li>依据挂载(mount)时候提供的IP，和节点所在glusterd通信获取服务端的brick信息以及需要xlators</li></ul></li><li><p>5.glusterfs_process_volfp</p></li><li><p>依据获取到的服务端提供的元数据，调用xlator_init初始化，整个客户端glustefs初始化完成,glusterfs 第一个访问的是mount/fuse xlator（这个xlator的配置信息不需要从glusterd请求获取) ，最后访问的是protocol/client的xlator</p></li></ul><pre><code class="hljs gradle"><span class="hljs-comment">/* client.so 对应的protocol/client 的xlator */</span><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/protocol/</span>client.so<span class="hljs-comment">/* replicate.so 对应cluster/replicate,也就是cluster/afr 副本卷这块实现 */</span><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/cluster/</span>replicate.so<span class="hljs-comment">/* distribute.so 对应cluster/distribute,也就是cluster/dht哈希卷的实现 */</span><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/cluster/</span>distribute.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/features/u</span>time.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/</span><span class="hljs-keyword">write</span>-behind.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/</span><span class="hljs-keyword">read</span>-ahead.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/</span>readdir-ahead.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/i</span>o-cache.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/</span>open-behind.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/</span>quick-<span class="hljs-keyword">read</span>.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/performance/m</span>d-cache.so<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/g</span>lusterfs<span class="hljs-regexp">/2020.05.12/</span>xlator<span class="hljs-regexp">/debug/i</span>o-stats.so</code></pre><ul><li><p>glusterfs_graph_activate</p><ul><li><p>ctx-&gt;master在初始化时候已经把mount/fuse的xlator赋值给master了，然后在xlator graph激活时候，如果master不为空就执行xlator_notify函数，第一个参数就是mount/fuse的xlator的结构体指针</p><pre><code class="hljs xl">glusterfs_graph_activate(glusterfs_graph_t *graph, glusterfs_ctx_t *ctx)&#123;    <span class="hljs-comment">//fuse-bridge.c:notify在这里调用</span>    <span class="hljs-function"><span class="hljs-title">if</span> (ctx-&gt;</span>master) &#123;        <span class="hljs-function"><span class="hljs-title">ret</span> = xlator_notify(ctx-&gt;</span>master, GF_EVENT_GRAPH_NEW, graph)        ((<span class="hljs-function"><span class="hljs-title">xlator_t</span> *)ctx-&gt;</span><span class="hljs-function"><span class="hljs-title">master</span>)-&gt;</span><span class="hljs-function"><span class="hljs-title">next</span> = graph-&gt;</span>top;    &#125;&#125;</code></pre></li></ul></li><li><p>xlator_notify</p><ul><li>xlator_notify函数主要是调用mount/fuse这个xlator的notify函数多个线程读取/dev/fuse中数据</li></ul><pre><code class="hljs reasonml">xlator<span class="hljs-constructor">_notify(<span class="hljs-params">xlator_t</span> <span class="hljs-operator">*</span><span class="hljs-params">xl</span>, <span class="hljs-params">int</span> <span class="hljs-params">event</span>, <span class="hljs-params">void</span> <span class="hljs-operator">*</span><span class="hljs-params">data</span>, <span class="hljs-operator">...</span>)</span>&#123;<span class="hljs-comment">//调用mount/fuse xlator中的notify函数</span>     xl-&gt;notify(xl, event, data);&#125;</code></pre></li></ul><ul><li><p>notify</p><ul><li><p>该函数是mount/fuse中的notify函数</p><pre><code class="hljs cpp"><span class="hljs-comment">//mount/fuse中notify的函数</span>notify(<span class="hljs-keyword">xlator_t</span> *<span class="hljs-keyword">this</span>, <span class="hljs-keyword">int32_t</span> event, <span class="hljs-keyword">void</span> *data, ...) &#123; <span class="hljs-comment">//fork子进程在多线程中执行fuse_thread_proc</span> <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">private</span>-&gt;reader_thread_count; i++) &#123;      ret = gf_thread_create(&amp;<span class="hljs-keyword">private</span>-&gt;fuse_thread[i], <span class="hljs-literal">NULL</span>,fuse_thread_proc, <span class="hljs-keyword">this</span>, <span class="hljs-string">"fuseproc"</span>);         &#125;</code></pre></li></ul></li></ul><ul><li><p>fuse_thread_proc</p><ul><li>读取/dev/fuse中的数据，转发给对应的fuse_xxx的函数</li></ul><pre><code class="hljs kotlin"><span class="hljs-comment">//启动线程轮训读取数据，在转发给对应的fuse_xxx函数</span>fuse_thread_proc(void *<span class="hljs-keyword">data</span>)&#123; xlator_t *<span class="hljs-keyword">this</span> = NULL; fuse_private_t *priv = NULL; <span class="hljs-keyword">this</span> = <span class="hljs-keyword">data</span>;  priv = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-keyword">private</span>;  THIS = <span class="hljs-keyword">this</span>;  <span class="hljs-comment">//在xlator/mount/fuse源代码模块中init函数中已经把priv-&gt;fd设置为/dev/fuse的文件描述符</span>res = sys_readv(priv-&gt;fd, iov_in, <span class="hljs-number">2</span>);  gf_async(&amp;fasync-&gt;async, <span class="hljs-keyword">this</span>, fuse_dispatch);&#125;</code></pre></li></ul><ul><li><p>fuse_dispatch</p><ul><li><p>主要是读取到/dev/fuse的数据转发给对应的fuse_xxx函数,比如fuse初始化挂载操作会转发请求到fuse_init函数</p><pre><code class="hljs xl"><span class="hljs-comment">//读取到的数据转发到对应的fuse_ops函数中</span>fuse_dispatch(xlator_t *xl, gf_async_t *async)&#123;    <span class="hljs-function"><span class="hljs-title">priv</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">fuse_ops</span>[finh-&gt;</span><span class="hljs-function"><span class="hljs-title">opcode</span>](xl, finh, fasync-&gt;</span>msg, iobuf);    <span class="hljs-comment">//priv-&gt;fuse_ops对应的是fuse_std_ops函数指针数组</span>    <span class="hljs-function"><span class="hljs-title">priv</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">fuse_ops</span>[finh-&gt;</span><span class="hljs-function"><span class="hljs-title">opcode</span>](xl, finh, fasync-&gt;</span>msg, iobuf);&#125;</code></pre><ul><li><p>其中priv-&gt;fuse_ops中定义了fuse一系列操作，具体的定义如下</p><pre><code class="hljs cs"><span class="hljs-keyword">static</span> fuse_handler_t *fuse_std_ops[FUSE_OP_HIGH] = &#123;    [<span class="hljs-meta">FUSE_LOOKUP</span>] = fuse_lookup,    [<span class="hljs-meta">FUSE_FORGET</span>] = fuse_forget,    [<span class="hljs-meta">FUSE_GETATTR</span>] = fuse_getattr,    [<span class="hljs-meta">FUSE_SETATTR</span>] = fuse_setattr,    [<span class="hljs-meta">FUSE_READLINK</span>] = fuse_readlink,    [<span class="hljs-meta">FUSE_SYMLINK</span>] = fuse_symlink,    [<span class="hljs-meta">FUSE_MKNOD</span>] = fuse_mknod,    [<span class="hljs-meta">FUSE_MKDIR</span>] = fuse_mkdir,    [<span class="hljs-meta">FUSE_UNLINK</span>] = fuse_unlink,    [<span class="hljs-meta">FUSE_RMDIR</span>] = fuse_rmdir,    [<span class="hljs-meta">FUSE_RENAME</span>] = fuse_rename,    [<span class="hljs-meta">FUSE_LINK</span>] = fuse_link,    [<span class="hljs-meta">FUSE_OPEN</span>] = fuse_open,    [<span class="hljs-meta">FUSE_READ</span>] = fuse_readv,    [<span class="hljs-meta">FUSE_WRITE</span>] = fuse_write,    [<span class="hljs-meta">FUSE_STATFS</span>] = fuse_statfs,    [<span class="hljs-meta">FUSE_RELEASE</span>] = fuse_release,    [<span class="hljs-meta">FUSE_FSYNC</span>] = fuse_fsync,    [<span class="hljs-meta">FUSE_SETXATTR</span>] = fuse_setxattr,    [<span class="hljs-meta">FUSE_GETXATTR</span>] = fuse_getxattr,    [<span class="hljs-meta">FUSE_LISTXATTR</span>] = fuse_listxattr,    [<span class="hljs-meta">FUSE_REMOVEXATTR</span>] = fuse_removexattr,    [<span class="hljs-meta">FUSE_FLUSH</span>] = fuse_flush,    [<span class="hljs-meta">FUSE_INIT</span>] = fuse_init,    [<span class="hljs-meta">FUSE_OPENDIR</span>] = fuse_opendir,    [<span class="hljs-meta">FUSE_READDIR</span>] = fuse_readdir,    [<span class="hljs-meta">FUSE_RELEASEDIR</span>] = fuse_releasedir,    [<span class="hljs-meta">FUSE_FSYNCDIR</span>] = fuse_fsyncdir,    [<span class="hljs-meta">FUSE_GETLK</span>] = fuse_getlk,    [<span class="hljs-meta">FUSE_SETLK</span>] = fuse_setlk,    [<span class="hljs-meta">FUSE_SETLKW</span>] = fuse_setlk,    [<span class="hljs-meta">FUSE_ACCESS</span>] = fuse_access,    [<span class="hljs-meta">FUSE_CREATE</span>] = fuse_create,    [<span class="hljs-meta">FUSE_INTERRUPT</span>] = fuse_interrupt,    <span class="hljs-comment">/* [FUSE_BMAP] */</span>    [<span class="hljs-meta">FUSE_DESTROY</span>] = fuse_destroy,<span class="hljs-comment">/* [FUSE_IOCTL] */</span><span class="hljs-comment">/* [FUSE_POLL] */</span><span class="hljs-comment">/* [FUSE_NOTIFY_REPLY] */</span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> FUSE_KERNEL_MINOR_VERSION &gt;= 16</span>    [<span class="hljs-meta">FUSE_BATCH_FORGET</span>] = fuse_batch_forget,<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> FUSE_KERNEL_MINOR_VERSION &gt;= 19</span><span class="hljs-meta">#ifdef FALLOC_FL_KEEP_SIZE</span>    [<span class="hljs-meta">FUSE_FALLOCATE</span>] = fuse_fallocate,<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span> /* FALLOC_FL_KEEP_SIZE */</span><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> FUSE_KERNEL_MINOR_VERSION &gt;= 21</span>    [<span class="hljs-meta">FUSE_READDIRPLUS</span>] = fuse_readdirp,<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> FUSE_KERNEL_MINOR_VERSION &gt;= 24 &amp;&amp; HAVE_SEEK_HOLE</span>    [<span class="hljs-meta">FUSE_LSEEK</span>] = fuse_lseek,<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> FUSE_KERNEL_MINOR_VERSION &gt;= 28</span>    [<span class="hljs-meta">FUSE_COPY_FILE_RANGE</span>] = fuse_copy_file_range,<span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span>&#125;;</code></pre></li></ul></li></ul></li><li><p>FUSE_FOP</p><ul><li>FUSE_FOP用于转发当前操作到下一个xlator的fops函数，比如下一个xlator是cluster/dht，dht下一个xlator是cluster/afr,afr最后一个是protocol/client，procotol/client对应的是client4_0_writev函数，把数据通过网络push到对应某个glusterfsd进程。<pre><code class="hljs xl">FUSE_FOP(<span class="hljs-function"><span class="hljs-title">state</span>, fuse_writev_cbk, GF_FOP_WRITE, writev, state-&gt;</span>fd,            &amp;<span class="hljs-function"><span class="hljs-title">state</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">vector</span>, 1, state-&gt;</span><span class="hljs-function"><span class="hljs-title">off</span>, state-&gt;</span>io_flags, iobref,            <span class="hljs-function"><span class="hljs-title">state</span>-&gt;</span>xdata);</code></pre></li></ul></li><li><p>dht_writev<br>  *dht_writev按照哈希卷的方式写入数据</p><pre><code class="hljs xl"><span class="hljs-comment">//cluster/dht 的xlator中的dht_writev方法</span>int dht_writev(call_frame_t *frame, xlator_t *this, fd_t *fd, struct iovec *vector,           int count, off_t off, uint32_t flags, struct iobref *iobref,           dict_t *xdata)&#123;   <span class="hljs-comment">//下一个xlator的调用申请</span>   STACK_WIND_COOKIE(frame, dht_writev_cbk, subvol, subvol,                      <span class="hljs-function"><span class="hljs-title">subvol</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">fops</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">writev</span>, fd, local-&gt;</span>rebalance.vector,                      <span class="hljs-function"><span class="hljs-title">local</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">rebalance</span>.count, local-&gt;</span>rebalance.offset,                      <span class="hljs-function"><span class="hljs-title">local</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">rebalance</span>.flags, local-&gt;</span>rebalance.iobref,                      <span class="hljs-function"><span class="hljs-title">local</span>-&gt;</span>xattr_req);&#125;</code></pre></li><li><p>afr_writev</p><ul><li>副本卷执行写入操作的方法     <pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> afr<span class="hljs-constructor">_writev(<span class="hljs-params">call_frame_t</span> <span class="hljs-operator">*</span><span class="hljs-params">frame</span>, <span class="hljs-params">xlator_t</span> <span class="hljs-operator">*</span><span class="hljs-params">this</span>,<span class="hljs-operator">...</span>)</span>&#123; afr<span class="hljs-constructor">_do_writev(<span class="hljs-params">frame</span>, <span class="hljs-params">this</span>)</span>;&#125;</code></pre></li></ul></li><li><p>client4_0_writev(protocol/client xlator)</p><ul><li>procotcol/client中的client4_0_writev是把数据push到某个节点的glusterfsd进程<pre><code class="hljs reasonml"><span class="hljs-comment">// procotol/client的xlator的writev方法</span>int32_t client4<span class="hljs-constructor">_0_writev(<span class="hljs-params">call_frame_t</span> <span class="hljs-operator">*</span><span class="hljs-params">frame</span>, <span class="hljs-params">xlator_t</span> <span class="hljs-operator">*</span><span class="hljs-params">this</span>, <span class="hljs-params">void</span> <span class="hljs-operator">*</span><span class="hljs-params">data</span>)</span>&#123;    ret = client<span class="hljs-constructor">_submit_request(<span class="hljs-params">this</span>, &amp;<span class="hljs-params">req</span>, <span class="hljs-params">frame</span>, <span class="hljs-params">conf</span>-&gt;<span class="hljs-params">fops</span>, GFS3_OP_WRITE, <span class="hljs-params">client4_0_writev_cbk</span>, &amp;<span class="hljs-params">cp</span>,(<span class="hljs-params">xdrproc_t</span>)</span>xdr_gfx_write_req);&#125;<span class="hljs-comment">//(gdb) p conf-&gt;fops</span>$<span class="hljs-number">99</span> = (rpc_clnt_prog_t *) <span class="hljs-number">0x7fffe9b79c20</span> &lt;clnt4_0_fop_prog&gt;</code></pre></li></ul></li></ul><h3 id="mount-fuse-cp文件流程"><a href="#mount-fuse-cp文件流程" class="headerlink" title="mount/fuse cp文件流程"></a>mount/fuse cp文件流程</h3><ul><li><p>设计基本思路</p><ul><li>mount/fuse 这个xlator的实现在xlator/src/mount模块中，该模块以fuse_开头的函数并么有在这个模块中显性中调用，都是通过fuse_std_ops初始化这个一些列函数，在具体执行时候根据这个数组的指针来隐形的调用。针对每个文件系统的操作（比如,ls,rm）都会转发到对应的fuse的函数处理，处理完毕后在走mount/fuse的下一个xlator,走对应xlator的一些列函数。</li></ul></li><li><p>gdb 堆栈的信息</p></li></ul><pre><code class="hljs llvm">//简化版本(gdb) bt<span class="hljs-symbol">#0</span>  afr_writev  at afr-inode-write.<span class="hljs-keyword">c</span>:<span class="hljs-number">491</span><span class="hljs-symbol">#1</span>  dht_writev  at dht-inode-write.<span class="hljs-keyword">c</span>:<span class="hljs-number">223</span><span class="hljs-symbol">#2</span>  shard_common_inode_write_wind at shard.<span class="hljs-keyword">c</span>:<span class="hljs-number">5397</span><span class="hljs-symbol">#3</span>  shard_common_inode_write_do at shard.<span class="hljs-keyword">c</span>:<span class="hljs-number">5527</span><span class="hljs-symbol">#4</span> wb_writev at write-behind.<span class="hljs-keyword">c</span>:<span class="hljs-number">1897</span><span class="hljs-symbol">#5</span> ra_writev at read-ahead.<span class="hljs-keyword">c</span>:<span class="hljs-number">650</span><span class="hljs-symbol">#6</span>  rda_writev  at readdir-ahead.<span class="hljs-keyword">c</span>:<span class="hljs-number">788</span><span class="hljs-symbol">#7</span> ioc_writev at io-cache.<span class="hljs-keyword">c</span>:<span class="hljs-number">1303</span><span class="hljs-symbol">#8</span> default_writev_resume at defaults.<span class="hljs-keyword">c</span>:<span class="hljs-number">1983</span><span class="hljs-symbol">#9</span> call_resume_wind  at <span class="hljs-keyword">call</span>-stub.<span class="hljs-keyword">c</span>:<span class="hljs-number">2085</span><span class="hljs-symbol">#10</span> call_resume  at <span class="hljs-keyword">call</span>-stub.<span class="hljs-keyword">c</span>:<span class="hljs-number">2555</span><span class="hljs-symbol">#11</span> open_and_resume at open-behind.<span class="hljs-keyword">c</span>:<span class="hljs-number">485</span><span class="hljs-symbol">#12</span> ob_writev at open-behind.<span class="hljs-keyword">c</span>:<span class="hljs-number">683</span><span class="hljs-symbol">#13</span> qr_writev  at quick-read.<span class="hljs-keyword">c</span>:<span class="hljs-number">849</span><span class="hljs-symbol">#14</span> mdc_writev  at md-cache.<span class="hljs-keyword">c</span>:<span class="hljs-number">2082</span><span class="hljs-symbol">#15</span> io_stats_writev  at io-stats.<span class="hljs-keyword">c</span>:<span class="hljs-number">2882</span><span class="hljs-symbol">#16</span> default_writev at defaults.<span class="hljs-keyword">c</span>:<span class="hljs-number">2735</span><span class="hljs-symbol">#17</span> meta_writev at meta.<span class="hljs-keyword">c</span>:<span class="hljs-number">131</span><span class="hljs-symbol">#18</span>  fuse_write_resume  at fuse-bridge.<span class="hljs-keyword">c</span>:<span class="hljs-number">2959</span><span class="hljs-symbol">#19</span> fuse_fop_resume at fuse-bridge.<span class="hljs-keyword">c</span>:<span class="hljs-number">1030</span><span class="hljs-symbol">#20</span> fuse_resolve_done at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">629</span><span class="hljs-symbol">#21</span> fuse_resolve_all at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">653</span><span class="hljs-symbol">#22</span> fuse_resolve  at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">620</span><span class="hljs-symbol">#23</span> fuse_resolve_all  at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">650</span><span class="hljs-symbol">#24</span> fuse_resolve_continue at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">668</span><span class="hljs-symbol">#25</span> fuse_resolve_fd at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">543</span><span class="hljs-symbol">#26</span> fuse_resolve at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">611</span><span class="hljs-symbol">#27</span> fuse_resolve_all  at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">644</span><span class="hljs-symbol">#28</span> fuse_resolve_and_resume at fuse-resolve.<span class="hljs-keyword">c</span>:<span class="hljs-number">680</span><span class="hljs-symbol">#29</span> fuse_write at fuse-bridge.<span class="hljs-keyword">c</span>:<span class="hljs-number">3011</span><span class="hljs-symbol">#30</span> fuse_dispatch at fuse-bridge.<span class="hljs-keyword">c</span>:<span class="hljs-number">5838</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统调调用</title>
    <link href="/2020/05/30/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E8%B0%83%E7%94%A8/"/>
    <url>/2020/05/30/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E8%B0%83%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h4 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h4><p><img src="/2020/05/30/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E8%B0%83%E7%94%A8/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8.png" srcset="/img/loading.gif" alt></p><h4 id="系统调用例子"><a href="#系统调用例子" class="headerlink" title="系统调用例子"></a>系统调用例子</h4><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;    <span class="hljs-keyword">time_t</span> tt;    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tm</span> *<span class="hljs-title">t</span>;</span>    <span class="hljs-comment">//time系统调用非常方便</span>    tt = time(<span class="hljs-literal">NULL</span>);    <span class="hljs-comment">//内嵌汇编替换time系统调用</span>       <span class="hljs-function"><span class="hljs-keyword">asm</span> <span class="hljs-title">volatile</span> <span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-comment">//清空ebx寄存器</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-string">"mov $0,%%ebx\n\t"</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-comment">//系统调用一般是通过eax保存系统调用号，time在32位系统中调用号为13，因此传递13到eax寄存器</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-string">"mov $0xd,%%eax\n\t"</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-comment">//调用int 0x80指令，陷入内核态，进行系统调用</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-string">"int $0x80\n\t"</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-comment">//把结果eax寄存器结果保存在变量tt中</span></span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-string">"mov %%eax,%0\n\t"</span></span></span><span class="hljs-function"><span class="hljs-params">        : <span class="hljs-string">"=m"</span> (tt)</span></span><span class="hljs-function"><span class="hljs-params">    )</span></span>;        t = localtime(&amp;tt);    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>,<span class="hljs-string">"%s"</span>,asctime(t));    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs client客戶端出现RPC_CLNT_DISCONNECT问题和kernel出现task xxx blocked for more than 120 seconds</title>
    <link href="/2020/05/27/glusterfs-client%E5%AE%A2%E6%88%B6%E7%AB%AF%E5%87%BA%E7%8E%B0RPC-CLNT-DISCONNECT%E9%97%AE%E9%A2%98%E5%92%8Ckernel%E5%87%BA%E7%8E%B0task-xxx-blocked-for-more-than-120-second/"/>
    <url>/2020/05/27/glusterfs-client%E5%AE%A2%E6%88%B6%E7%AB%AF%E5%87%BA%E7%8E%B0RPC-CLNT-DISCONNECT%E9%97%AE%E9%A2%98%E5%92%8Ckernel%E5%87%BA%E7%8E%B0task-xxx-blocked-for-more-than-120-second/</url>
    
    <content type="html"><![CDATA[<h4 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h4><ul><li>glusterfs客户端无法连接某个节点的brick，一直出现rpc无法连接</li><li>kernel 出现hung_task_timeout_secs超时问题</li></ul><h4 id="故障分析"><a href="#故障分析" class="headerlink" title="故障分析"></a>故障分析</h4><p>   <strong>kernel层面分析</strong><br>   kernel出现sync flood，原因是客户端断掉后不断重新尝试导致，后面CallTrace出现 hung_task_timeout_secs关键字，该关键字含义是，异步刷新IO到磁盘，如果在hung_task_timeout_secs时间内IO没有刷完，就会报出这个错误，解决方法需要调整vm.dirty_ratio和vm.dirty_backgroud_ratio参数，两个参数分别控制脏页刷磁盘的比例，如果后端磁盘非常慢，超过操作系统默认的timeout会出现这样的calltrace.建议设置vm.dirty_ratio=5和vm.dirty_backgroud_ratio=5</p><p>  <strong>客户端日志分析</strong><br>    日志中大量报出0-speech_vol_v2-client-55对应的brick无法建立rpc连接(通过网络telnet 主机和端口无异常),从日志来看可能是sync flood导致，客户端无法连接到这个glusterfsd</p><p>  <strong>服务端日志</strong><br>    服务端的日志也很明显出现read/write出现告警</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><ul><li>调整kernel中 vm.dirty_ratio=5和 vm.dirty_backgroud_ratio=10（该问题仅仅关闭kernel报错)</li><li>重启节点的glusterd的进程或者重启节点(sync flood的问题)</li></ul><h4 id="glusterfs-version"><a href="#glusterfs-version" class="headerlink" title="glusterfs version"></a>glusterfs version</h4><ul><li>服务端版本</li></ul><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>ai-storage-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-65</span><span class="hljs-number">-141.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan:/root]# gluster --versionglusterfs <span class="hljs-number">7.2</span></code></pre><ul><li>客户端版本</li></ul><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>storage-center-prd<span class="hljs-number">-10</span><span class="hljs-number">-194</span><span class="hljs-number">-8</span><span class="hljs-number">-133.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan:/var/log/glusterfs]# rpm -qa|grep glusterglusterfs<span class="hljs-number">-7.2</span><span class="hljs-number">-1.</span>el7.x86_64glusterfs-fuse<span class="hljs-number">-7.2</span><span class="hljs-number">-1.</span>el7.x86_64glusterfs-libs<span class="hljs-number">-7.2</span><span class="hljs-number">-1.</span>el7.x86_64</code></pre><h4 id="cluster-volume"><a href="#cluster-volume" class="headerlink" title="cluster volume"></a>cluster volume</h4><ul><li><p>volume info</p><pre><code class="hljs yaml"><span class="hljs-comment"># gluster volume info  speech_vol_v2     </span> <span class="hljs-attr">Volume Name:</span> <span class="hljs-string">speech_vol_v2</span><span class="hljs-attr">Type:</span> <span class="hljs-string">Distributed-Replicate</span><span class="hljs-attr">Volume ID:</span> <span class="hljs-string">e1b28e82-0d0b-4c87-bb6a-45306ec4a568</span><span class="hljs-attr">Status:</span> <span class="hljs-string">Started</span><span class="hljs-attr">Snapshot Count:</span> <span class="hljs-number">0</span><span class="hljs-attr">Number of Bricks:</span> <span class="hljs-number">24</span> <span class="hljs-string">x</span> <span class="hljs-number">3</span> <span class="hljs-string">=</span> <span class="hljs-number">72</span><span class="hljs-attr">Transport-type:</span> <span class="hljs-string">tcp</span><span class="hljs-attr">Bricks:</span><span class="hljs-attr">Brick1:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick2:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick3:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick4:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick5:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick6:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick7:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick8:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick9:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick10:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick11:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick12:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick13:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick14:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick15:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick16:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick17:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick18:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick19:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick20:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick21:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick22:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick23:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick24:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick25:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick26:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick27:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick28:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick29:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick30:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick31:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick32:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick33:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick34:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Brick35:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Brick36:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Brick37:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick38:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick39:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data1/brick</span><span class="hljs-attr">Brick40:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick41:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick42:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data2/brick</span><span class="hljs-attr">Brick43:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick44:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick45:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data3/brick</span><span class="hljs-attr">Brick46:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick47:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick48:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data4/brick</span><span class="hljs-attr">Brick49:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick50:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick51:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data5/brick</span><span class="hljs-attr">Brick52:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick53:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick54:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data6/brick</span><span class="hljs-attr">Brick55:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick56:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick57:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data7/brick</span><span class="hljs-attr">Brick58:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick59:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick60:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data8/brick</span><span class="hljs-attr">Brick61:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick62:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick63:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data9/brick</span><span class="hljs-attr">Brick64:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick65:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick66:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data10/brick</span><span class="hljs-attr">Brick67:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick68:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick69:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data11/brick</span><span class="hljs-attr">Brick70:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Brick71:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Brick72:</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data12/brick</span><span class="hljs-attr">Options Reconfigured:</span><span class="hljs-attr">network.ping-timeout:</span> <span class="hljs-number">120</span><span class="hljs-attr">cluster.read-hash-mode:</span> <span class="hljs-number">3</span><span class="hljs-attr">storage.fips-mode-rchecksum:</span> <span class="hljs-string">on</span><span class="hljs-attr">nfs.disable:</span> <span class="hljs-string">on</span></code></pre></li><li><p>volume status</p></li></ul><pre><code class="hljs yaml"><span class="hljs-comment"># gluster volume status   speech_vol_v2     </span><span class="hljs-attr">Status of volume:</span> <span class="hljs-string">speech_vol_v2</span><span class="hljs-string">Gluster</span> <span class="hljs-string">process</span>                             <span class="hljs-string">TCP</span> <span class="hljs-string">Port</span>  <span class="hljs-string">RDMA</span> <span class="hljs-string">Port</span>  <span class="hljs-string">Online</span>  <span class="hljs-string">Pid</span><span class="hljs-string">------------------------------------------------------------------------------</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data1/brick</span>            <span class="hljs-number">49152</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16432</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data1/brick</span>            <span class="hljs-number">49152</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16355</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data1/brick</span>            <span class="hljs-number">49152</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32212</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data2/brick</span>            <span class="hljs-number">49153</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">20613</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data2/brick</span>            <span class="hljs-number">49153</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16376</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data2/brick</span>            <span class="hljs-number">49153</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32232</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data3/brick</span>            <span class="hljs-number">49154</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">20627</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data3/brick</span>            <span class="hljs-number">49154</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16402</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data3/brick</span>            <span class="hljs-number">49154</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32252</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data4/brick</span>            <span class="hljs-number">49155</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10020</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data4/brick</span>            <span class="hljs-number">49155</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16433</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data4/brick</span>            <span class="hljs-number">49155</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32272</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data5/brick</span>            <span class="hljs-number">49156</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10026</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data5/brick</span>            <span class="hljs-number">49156</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16457</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data5/brick</span>            <span class="hljs-number">49156</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32292</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data6/brick</span>            <span class="hljs-number">49157</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">20620</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data6/brick</span>            <span class="hljs-number">49157</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16485</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data6/brick</span>            <span class="hljs-number">49157</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32312</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data7/brick</span>            <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10055</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data7/brick</span>            <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16505</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data7/brick</span>            <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32332</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data8/brick</span>            <span class="hljs-number">49159</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">15551</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data8/brick</span>            <span class="hljs-number">49159</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16530</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data8/brick</span>            <span class="hljs-number">49159</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32352</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data9/brick</span>            <span class="hljs-number">49160</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10075</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data9/brick</span>            <span class="hljs-number">49160</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16552</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data9/brick</span>            <span class="hljs-number">49160</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32372</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data10/brick</span>           <span class="hljs-number">49161</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10086</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data10/brick</span>           <span class="hljs-number">49161</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16573</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data10/brick</span>           <span class="hljs-number">49161</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32394</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data11/brick</span>           <span class="hljs-number">49162</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10099</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data11/brick</span>           <span class="hljs-number">49162</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16595</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data11/brick</span>           <span class="hljs-number">49162</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32415</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.141</span><span class="hljs-string">:/data12/brick</span>           <span class="hljs-number">49163</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">10106</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.142</span><span class="hljs-string">:/data12/brick</span>           <span class="hljs-number">49163</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">16616</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.65</span><span class="hljs-number">.144</span><span class="hljs-string">:/data12/brick</span>           <span class="hljs-number">49163</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">32435</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data1/brick</span>           <span class="hljs-number">49152</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177222</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data1/brick</span>           <span class="hljs-number">49164</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215532</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data1/brick</span>           <span class="hljs-number">49152</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182183</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data2/brick</span>           <span class="hljs-number">49153</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177242</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data2/brick</span>           <span class="hljs-number">49165</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215541</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data2/brick</span>           <span class="hljs-number">49153</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182203</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data3/brick</span>           <span class="hljs-number">49154</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177263</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data3/brick</span>           <span class="hljs-number">49166</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215552</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data3/brick</span>           <span class="hljs-number">49154</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182224</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data4/brick</span>           <span class="hljs-number">49155</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177283</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data4/brick</span>           <span class="hljs-number">49167</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215563</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data4/brick</span>           <span class="hljs-number">49155</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182244</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data5/brick</span>           <span class="hljs-number">49156</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177303</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data5/brick</span>           <span class="hljs-number">49168</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215574</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data5/brick</span>           <span class="hljs-number">49156</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182264</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data6/brick</span>           <span class="hljs-number">49157</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177323</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data6/brick</span>           <span class="hljs-number">49169</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215585</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data6/brick</span>           <span class="hljs-number">49157</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182284</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data7/brick</span>           <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177343</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data7/brick</span>           <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">176773</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data7/brick</span>           <span class="hljs-number">49158</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182304</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data8/brick</span>           <span class="hljs-number">49159</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177363</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data8/brick</span>           <span class="hljs-number">49170</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215596</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data8/brick</span>           <span class="hljs-number">49159</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182324</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data9/brick</span>           <span class="hljs-number">49160</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177383</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data9/brick</span>           <span class="hljs-number">49171</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215607</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data9/brick</span>           <span class="hljs-number">49160</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182346</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data10/brick</span>          <span class="hljs-number">49161</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177403</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data10/brick</span>          <span class="hljs-number">49172</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215618</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data10/brick</span>          <span class="hljs-number">49161</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182366</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data11/brick</span>          <span class="hljs-number">49162</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177423</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data11/brick</span>          <span class="hljs-number">49173</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215629</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data11/brick</span>          <span class="hljs-number">49162</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182386</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.146</span><span class="hljs-string">:/data12/brick</span>          <span class="hljs-number">49163</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">177443</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span><span class="hljs-string">:/data12/brick</span>          <span class="hljs-number">49174</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">215639</span><span class="hljs-string">Brick</span> <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.148</span><span class="hljs-string">:/data12/brick</span>          <span class="hljs-number">49163</span>     <span class="hljs-number">0</span>          <span class="hljs-string">Y</span>       <span class="hljs-number">182406</span></code></pre><h4 id="客户端无法连接的Brick的信息"><a href="#客户端无法连接的Brick的信息" class="headerlink" title="客户端无法连接的Brick的信息"></a>客户端无法连接的Brick的信息</h4><pre><code class="hljs elm">//这些信息存在于/var/log/glusterfs/mnt-&#123;挂载名称&#125;.log中的<span class="hljs-type">Final</span> graph:<span class="hljs-title">volume</span> speech_vol_v2-client<span class="hljs-number">-55</span>    <span class="hljs-keyword">type</span> protocol/client    option ping-timeout <span class="hljs-number">120</span>    option remote-host <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>    option remote-subvolume /data7/brick    option trans<span class="hljs-keyword">port</span>-type socket    option trans<span class="hljs-keyword">port</span>.socket.ssl-enabled off    option trans<span class="hljs-keyword">port</span>.tcp-user-timeout 0    option trans<span class="hljs-keyword">port</span>.socket.keepalive-time 20    option trans<span class="hljs-keyword">port</span>.socket.keepalive-interval 2    option trans<span class="hljs-keyword">port</span>.socket.keepalive-count 9    option send-gids true<span class="hljs-title">end</span>-volume</code></pre><h4 id="客户端挂载Debug日志"><a href="#客户端挂载Debug日志" class="headerlink" title="客户端挂载Debug日志"></a>客户端挂载Debug日志</h4><h5 id="操作系统kernel日志-var-log-message"><a href="#操作系统kernel日志-var-log-message" class="headerlink" title="操作系统kernel日志(/var/log/message)"></a>操作系统kernel日志(/var/log/message)</h5><pre><code class="hljs angelscript">May <span class="hljs-number">26</span> <span class="hljs-number">12</span>:<span class="hljs-number">20</span>:<span class="hljs-number">18</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4036004.156726</span>] TCP: request_sock_TCP: Possible SYN flooding on port <span class="hljs-number">24007.</span> Sending cookies.  Check SNMP counters.May <span class="hljs-number">26</span> <span class="hljs-number">16</span>:<span class="hljs-number">52</span>:<span class="hljs-number">13</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> systemd[<span class="hljs-number">1</span>]: Starting Cleanup of Temporary Directories...May <span class="hljs-number">26</span> <span class="hljs-number">16</span>:<span class="hljs-number">52</span>:<span class="hljs-number">13</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> systemd[<span class="hljs-number">1</span>]: Started Cleanup of Temporary Directories.May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.524551</span>] INFO: task kswapd0:<span class="hljs-number">266</span> blocked <span class="hljs-keyword">for</span> more than <span class="hljs-number">120</span> seconds.May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.531180</span>] <span class="hljs-string">"echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs"</span> disables <span class="hljs-keyword">this</span> message.May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539187</span>] kswapd0         D <span class="hljs-number">0000000007496801</span>     <span class="hljs-number">0</span>   <span class="hljs-number">266</span>      <span class="hljs-number">2</span> <span class="hljs-number">0x00000000</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539195</span>]  ffff881ffcd3b8f0 <span class="hljs-number">0000000000000046</span> ffff881ffeab9fa0 ffff881ffcd3bfd8May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539198</span>]  ffff881ffcd3bfd8 ffff881ffcd3bfd8 ffff881ffeab9fa0 ffff8804e82b4860May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539200</span>]  <span class="hljs-number">7f</span>ffffffffffffff ffff8804e82b4858 ffff881ffeab9fa0 <span class="hljs-number">0000000007496801</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539202</span>] Call Trace:May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539216</span>]  [&lt;ffffffff816a94c9&gt;] schedule+<span class="hljs-number">0x29</span>/<span class="hljs-number">0x70</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539228</span>]  [&lt;ffffffff816a6fd9&gt;] schedule_timeout+<span class="hljs-number">0x239</span>/<span class="hljs-number">0x2c0</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539235</span>]  [&lt;ffffffff812fab24&gt;] ? blk_finish_plug+<span class="hljs-number">0x14</span>/<span class="hljs-number">0x40</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539271</span>]  [&lt;ffffffffc01f9354&gt;] ? _xfs_buf_ioapply+<span class="hljs-number">0x334</span>/<span class="hljs-number">0x460</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539273</span>]  [&lt;ffffffff816a987d&gt;] wait_for_completion+<span class="hljs-number">0xfd</span>/<span class="hljs-number">0x140</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539277</span>]  [&lt;ffffffff810c4810&gt;] ? wake_up_state+<span class="hljs-number">0x20</span>/<span class="hljs-number">0x20</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539292</span>]  [&lt;ffffffffc01fb434&gt;] ? xfs_bwrite+<span class="hljs-number">0x24</span>/<span class="hljs-number">0x60</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539305</span>]  [&lt;ffffffffc01fb026&gt;] xfs_buf_submit_wait+<span class="hljs-number">0xe6</span>/<span class="hljs-number">0x1d0</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539316</span>]  [&lt;ffffffffc01fb434&gt;] xfs_bwrite+<span class="hljs-number">0x24</span>/<span class="hljs-number">0x60</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539330</span>]  [&lt;ffffffffc0203b71&gt;] xfs_reclaim_inode+<span class="hljs-number">0x331</span>/<span class="hljs-number">0x360</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539346</span>]  [&lt;ffffffffc0203e07&gt;] xfs_reclaim_inodes_ag+<span class="hljs-number">0x267</span>/<span class="hljs-number">0x390</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539348</span>]  [&lt;ffffffff810c4593&gt;] ? try_to_wake_up+<span class="hljs-number">0x183</span>/<span class="hljs-number">0x340</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539351</span>]  [&lt;ffffffff8121d67a&gt;] ? evict+<span class="hljs-number">0x10a</span>/<span class="hljs-number">0x180</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539353</span>]  [&lt;ffffffff810c4765&gt;] ? wake_up_process+<span class="hljs-number">0x15</span>/<span class="hljs-number">0x20</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539366</span>]  [&lt;ffffffffc0204df3&gt;] xfs_reclaim_inodes_nr+<span class="hljs-number">0x33</span>/<span class="hljs-number">0x40</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539380</span>]  [&lt;ffffffffc02146f5&gt;] xfs_fs_free_cached_objects+<span class="hljs-number">0x15</span>/<span class="hljs-number">0x20</span> [xfs]May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539383</span>]  [&lt;ffffffff81203888&gt;] prune_super+<span class="hljs-number">0xe8</span>/<span class="hljs-number">0x170</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539387</span>]  [&lt;ffffffff81195413&gt;] shrink_slab+<span class="hljs-number">0x163</span>/<span class="hljs-number">0x330</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539390</span>]  [&lt;ffffffff811f7537&gt;] ? vmpressure+<span class="hljs-number">0x87</span>/<span class="hljs-number">0x90</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539392</span>]  [&lt;ffffffff81199081&gt;] balance_pgdat+<span class="hljs-number">0x4b1</span>/<span class="hljs-number">0x5e0</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539394</span>]  [&lt;ffffffff81199323&gt;] kswapd+<span class="hljs-number">0x173</span>/<span class="hljs-number">0x440</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539398</span>]  [&lt;ffffffff810b1910&gt;] ? wake_up_atomic_t+<span class="hljs-number">0x30</span>/<span class="hljs-number">0x30</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539401</span>]  [&lt;ffffffff811991b0&gt;] ? balance_pgdat+<span class="hljs-number">0x5e0</span>/<span class="hljs-number">0x5e0</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539402</span>]  [&lt;ffffffff810b098f&gt;] kthread+<span class="hljs-number">0xcf</span>/<span class="hljs-number">0xe0</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539404</span>]  [&lt;ffffffff810b08c0&gt;] ? insert_kthread_work+<span class="hljs-number">0x40</span>/<span class="hljs-number">0x40</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539408</span>]  [&lt;ffffffff816b4f18&gt;] ret_from_fork+<span class="hljs-number">0x58</span>/<span class="hljs-number">0x90</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">30</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079697.539409</span>]  [&lt;ffffffff810b08c0&gt;] ? insert_kthread_work+<span class="hljs-number">0x40</span>/<span class="hljs-number">0x40</span>May <span class="hljs-number">27</span> <span class="hljs-number">00</span>:<span class="hljs-number">32</span>:<span class="hljs-number">14</span> storage-center-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-181</span><span class="hljs-number">-147</span> kernel: [<span class="hljs-number">4079817.259262</span>] INFO: task kswapd0:<span class="hljs-number">266</span> blocked <span class="hljs-keyword">for</span> more than <span class="hljs-number">120</span> seconds.</code></pre><h5 id="客户端Mount-Debug日志详情"><a href="#客户端Mount-Debug日志详情" class="headerlink" title="客户端Mount Debug日志详情"></a>客户端Mount Debug日志详情</h5><pre><code class="hljs angelscript">[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">34.303569</span>] D [logging.c:<span class="hljs-number">1718</span>:__gf_log_inject_timer_event] <span class="hljs-number">0</span>-logging-infra: Starting timer now. Timeout = <span class="hljs-number">120</span>, current buf size = <span class="hljs-number">5</span>[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">52.040397</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">7</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">52.040442</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">52.040639</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_connection_cleanup+<span class="hljs-number">0x92</span>)[<span class="hljs-number">0x7fb222fc5922</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0xf4e8</span>)[<span class="hljs-number">0x7fb222fc64e8</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_transport_notify+<span class="hljs-number">0x23</span>)[<span class="hljs-number">0x7fb222fc2a93</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.040804</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043219</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043244</span>] D [socket.c:<span class="hljs-number">3384</span>:socket_fix_ssl_opts] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disabling SSL <span class="hljs-keyword">for</span> portmapper connection[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043408</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2323</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_CONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043611</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x13691</span>)[<span class="hljs-number">0x7fb222fca691</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_submit+<span class="hljs-number">0x3b4</span>)[<span class="hljs-number">0x7fb222fc6914</span>] (--&gt; /usr/lib64/glusterfs/<span class="hljs-number">7.2</span>/xlator/protocol/client.so(+<span class="hljs-number">0x135b2</span>)[<span class="hljs-number">0x7fb2146675b2</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043662</span>] D [MSGID: <span class="hljs-number">0</span>] [client-handshake.c:<span class="hljs-number">1399</span>:server_has_portmap] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: detected portmapper on server [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043783</span>] D [rpc-clnt-ping.c:<span class="hljs-number">195</span>:rpc_clnt_ping_cbk] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: Ping latency <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>ms[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043812</span>] I [rpc-clnt.c:<span class="hljs-number">1963</span>:rpc_clnt_reconfig] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: changing port to <span class="hljs-number">49158</span> (<span class="hljs-keyword">from</span> <span class="hljs-number">0</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043844</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">6</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043855</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2394</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disconnected (skipped notify) [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043876</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">49</span>:<span class="hljs-number">34.303646</span>] D [logging.c:<span class="hljs-number">1756</span>:gf_log_flush_timeout_cbk] <span class="hljs-number">0</span>-logging-infra: Log timer timed <span class="hljs-keyword">out</span>. About to flush outstanding messages <span class="hljs-keyword">if</span> present[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.043854</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">47</span>:<span class="hljs-number">55.046202</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">49</span>:<span class="hljs-number">34.303898</span>] D [logging.c:<span class="hljs-number">1718</span>:__gf_log_inject_timer_event] <span class="hljs-number">0</span>-logging-infra: Starting timer now. Timeout = <span class="hljs-number">120</span>, current buf size = <span class="hljs-number">5</span>[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">02.344385</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">7</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">02.344418</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">02.344582</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_connection_cleanup+<span class="hljs-number">0x92</span>)[<span class="hljs-number">0x7fb222fc5922</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0xf4e8</span>)[<span class="hljs-number">0x7fb222fc64e8</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_transport_notify+<span class="hljs-number">0x23</span>)[<span class="hljs-number">0x7fb222fc2a93</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.344677</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347099</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347126</span>] D [socket.c:<span class="hljs-number">3384</span>:socket_fix_ssl_opts] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disabling SSL <span class="hljs-keyword">for</span> portmapper connection[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347336</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2323</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_CONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347542</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x13691</span>)[<span class="hljs-number">0x7fb222fca691</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_submit+<span class="hljs-number">0x3b4</span>)[<span class="hljs-number">0x7fb222fc6914</span>] (--&gt; /usr/lib64/glusterfs/<span class="hljs-number">7.2</span>/xlator/protocol/client.so(+<span class="hljs-number">0x135b2</span>)[<span class="hljs-number">0x7fb2146675b2</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347591</span>] D [MSGID: <span class="hljs-number">0</span>] [client-handshake.c:<span class="hljs-number">1399</span>:server_has_portmap] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: detected portmapper on server [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347633</span>] D [rpc-clnt-ping.c:<span class="hljs-number">195</span>:rpc_clnt_ping_cbk] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: Ping latency <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>ms[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347701</span>] I [rpc-clnt.c:<span class="hljs-number">1963</span>:rpc_clnt_reconfig] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: changing port to <span class="hljs-number">49158</span> (<span class="hljs-keyword">from</span> <span class="hljs-number">0</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347735</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">6</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347749</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2394</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disconnected (skipped notify) [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347765</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)/<span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">51</span>:<span class="hljs-number">34.303977</span>] D [logging.c:<span class="hljs-number">1756</span>:gf_log_flush_timeout_cbk] <span class="hljs-number">0</span>-logging-infra: Log timer timed <span class="hljs-keyword">out</span>. About to flush outstanding messages <span class="hljs-keyword">if</span> present[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.347748</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">50</span>:<span class="hljs-number">05.350156</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">51</span>:<span class="hljs-number">34.304035</span>] D [logging.c:<span class="hljs-number">1718</span>:__gf_log_inject_timer_event] <span class="hljs-number">0</span>-logging-infra: Starting timer now. Timeout = <span class="hljs-number">120</span>, current buf size = <span class="hljs-number">5</span>[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">12.648388</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">7</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">12.648424</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">12.648591</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_connection_cleanup+<span class="hljs-number">0x92</span>)[<span class="hljs-number">0x7fb222fc5922</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0xf4e8</span>)[<span class="hljs-number">0x7fb222fc64e8</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_transport_notify+<span class="hljs-number">0x23</span>)[<span class="hljs-number">0x7fb222fc2a93</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.648683</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651027</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651052</span>] D [socket.c:<span class="hljs-number">3384</span>:socket_fix_ssl_opts] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disabling SSL <span class="hljs-keyword">for</span> portmapper connection[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651271</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2323</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_CONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651501</span>] D [rpc-clnt-ping.c:<span class="hljs-number">96</span>:rpc_clnt_remove_ping_timer_locked] (--&gt; /lib64/libglusterfs.so<span class="hljs-number">.0</span>(_gf_log_callingfn+<span class="hljs-number">0x13a</span>)[<span class="hljs-number">0x7fb22321e8ea</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x12eeb</span>)[<span class="hljs-number">0x7fb222fc9eeb</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x13691</span>)[<span class="hljs-number">0x7fb222fca691</span>] (--&gt; /lib64/libgfrpc.so<span class="hljs-number">.0</span>(rpc_clnt_submit+<span class="hljs-number">0x3b4</span>)[<span class="hljs-number">0x7fb222fc6914</span>] (--&gt; /usr/lib64/glusterfs/<span class="hljs-number">7.2</span>/xlator/protocol/client.so(+<span class="hljs-number">0x135b2</span>)[<span class="hljs-number">0x7fb2146675b2</span>] ))))) <span class="hljs-number">0</span>-: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span>: ping timer event already removed[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651557</span>] D [MSGID: <span class="hljs-number">0</span>] [client-handshake.c:<span class="hljs-number">1399</span>:server_has_portmap] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: detected portmapper on server [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651693</span>] D [rpc-clnt-ping.c:<span class="hljs-number">195</span>:rpc_clnt_ping_cbk] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: Ping latency <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>ms[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651734</span>] I [rpc-clnt.c:<span class="hljs-number">1963</span>:rpc_clnt_reconfig] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: changing port to <span class="hljs-number">49158</span> (<span class="hljs-keyword">from</span> <span class="hljs-number">0</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651758</span>] D [socket.c:<span class="hljs-number">3053</span>:socket_event_handler] <span class="hljs-number">0</span>-transport: EPOLLERR - disconnecting (sock:<span class="hljs-number">6</span>) (non-SSL)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651770</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2394</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: disconnected (skipped notify) [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651785</span>] D [name.c:<span class="hljs-number">171</span>:client_fill_address_family] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: address-family <span class="hljs-keyword">not</span> specified, marking it as unspec <span class="hljs-keyword">for</span> getaddrinfo to resolve <span class="hljs-keyword">from</span> (remote-host: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">53</span>:<span class="hljs-number">34.304123</span>] D [logging.c:<span class="hljs-number">1756</span>:gf_log_flush_timeout_cbk] <span class="hljs-number">0</span>-logging-infra: Log timer timed <span class="hljs-keyword">out</span>. About to flush outstanding messages <span class="hljs-keyword">if</span> present[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.651768</span>] D [MSGID: <span class="hljs-number">0</span>] [client.c:<span class="hljs-number">2334</span>:client_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-client<span class="hljs-number">-55</span>: got RPC_CLNT_DISCONNECT [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">52</span>:<span class="hljs-number">15.654154</span>] D [MSGID: <span class="hljs-number">0</span>] [common-utils.c:<span class="hljs-number">532</span>:gf_resolve_ip6] <span class="hljs-number">0</span>-resolver: returning ip<span class="hljs-number">-141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> (port<span class="hljs-number">-24007</span>) <span class="hljs-keyword">for</span> hostname: <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span> <span class="hljs-keyword">and</span> port: <span class="hljs-number">24007</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">03</span>:<span class="hljs-number">53</span>:<span class="hljs-number">34.304179</span>] D [logging.c:<span class="hljs-number">1718</span>:__gf_log_inject_timer_event] <span class="hljs-number">0</span>-logging-infra: Starting timer now. Timeout = <span class="hljs-number">120</span>, current buf size = <span class="hljs-number">5</span></code></pre><h5 id="0-speech-vol-v2-client-55对应服务端节点-147下的-data7-brick-日志"><a href="#0-speech-vol-v2-client-55对应服务端节点-147下的-data7-brick-日志" class="headerlink" title="0-speech_vol_v2-client-55对应服务端节点(147下的/data7/brick)日志"></a>0-speech_vol_v2-client-55对应服务端节点(147下的/data7/brick)日志</h5><pre><code class="hljs angelscript">[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">02</span>:<span class="hljs-number">22.421765</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.32</span><span class="hljs-number">.25</span>:<span class="hljs-number">47645</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">02</span>:<span class="hljs-number">22.421795</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:de438bc8<span class="hljs-number">-1</span>b52<span class="hljs-number">-446</span>c<span class="hljs-number">-817f</span><span class="hljs-number">-60</span>d646af0ba6-GRAPH_ID:<span class="hljs-number">2</span>-PID:<span class="hljs-number">84971</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-32</span><span class="hljs-number">-25.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">02</span>:<span class="hljs-number">26.918776</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.32</span><span class="hljs-number">.25</span>:<span class="hljs-number">47562</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">02</span>:<span class="hljs-number">26.918807</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:<span class="hljs-number">36965041</span><span class="hljs-number">-2046</span><span class="hljs-number">-4413</span><span class="hljs-number">-88</span>a4<span class="hljs-number">-08</span>bc06fc1de4-GRAPH_ID:<span class="hljs-number">2</span>-PID:<span class="hljs-number">87591</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-32</span><span class="hljs-number">-25.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">03</span>:<span class="hljs-number">13.270262</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.86</span><span class="hljs-number">.129</span>:<span class="hljs-number">48212</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">03</span>:<span class="hljs-number">13.270295</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:<span class="hljs-number">2</span>dafdf38-ff96<span class="hljs-number">-45</span>cc<span class="hljs-number">-99</span>c2<span class="hljs-number">-1238764</span>b59ae-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">75668</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-86</span><span class="hljs-number">-129.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">03</span>:<span class="hljs-number">13.285400</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.86</span><span class="hljs-number">.129</span>:<span class="hljs-number">48162</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">03</span>:<span class="hljs-number">13.285422</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:<span class="hljs-number">4251f</span>fc2-e1c5<span class="hljs-number">-4357</span>-a5d2<span class="hljs-number">-7</span>c92e8221fad-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">75625</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-86</span><span class="hljs-number">-129.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">36</span>:<span class="hljs-number">05.410946</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">10.196</span><span class="hljs-number">.20</span><span class="hljs-number">.133</span>:<span class="hljs-number">47621</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">36</span>:<span class="hljs-number">05.410974</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:<span class="hljs-number">57f</span>bf79a-bae3<span class="hljs-number">-4</span>bcd<span class="hljs-number">-8670</span><span class="hljs-number">-70</span>d559956cac-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">15841</span>-HOST:ai-vtraining-gpu-prd<span class="hljs-number">-10</span><span class="hljs-number">-196</span><span class="hljs-number">-20</span><span class="hljs-number">-133.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">36</span>:<span class="hljs-number">06.056913</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">10.196</span><span class="hljs-number">.20</span><span class="hljs-number">.133</span>:<span class="hljs-number">47331</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">01</span>:<span class="hljs-number">36</span>:<span class="hljs-number">06.056941</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:b68c4c8e-e8d8<span class="hljs-number">-4</span>d44<span class="hljs-number">-97</span>a3-a503791d6177-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">16094</span>-HOST:ai-vtraining-gpu-prd<span class="hljs-number">-10</span><span class="hljs-number">-196</span><span class="hljs-number">-20</span><span class="hljs-number">-133.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">10</span>:<span class="hljs-number">34.719707</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.30</span><span class="hljs-number">.45</span>:<span class="hljs-number">48603</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">10</span>:<span class="hljs-number">34.719738</span>] I [MSGID: <span class="hljs-number">115036</span>] [server.c:<span class="hljs-number">501</span>:server_rpc_notify] <span class="hljs-number">0</span>-speech_vol_v2-server: disconnecting connection <span class="hljs-keyword">from</span> CTX_ID:<span class="hljs-number">0</span>ed18a02<span class="hljs-number">-3363</span><span class="hljs-number">-4</span>cba<span class="hljs-number">-9313</span><span class="hljs-number">-93f</span>7b221ede4-GRAPH_ID:<span class="hljs-number">10</span>-PID:<span class="hljs-number">6869</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-30</span><span class="hljs-number">-45.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">13</span>:<span class="hljs-number">50.989206</span>] I [addr.c:<span class="hljs-number">54</span>:compare_addr_and_update] <span class="hljs-number">0</span>-/data7/brick: allowed = <span class="hljs-string">"*"</span>, received addr = <span class="hljs-string">"141.165.30.45"</span>[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">13</span>:<span class="hljs-number">50.989234</span>] I [MSGID: <span class="hljs-number">115029</span>] [server-handshake.c:<span class="hljs-number">549</span>:server_setvolume] <span class="hljs-number">0</span>-speech_vol_v2-server: accepted client <span class="hljs-keyword">from</span> CTX_ID:a327610d<span class="hljs-number">-0</span>acf<span class="hljs-number">-4785</span>-a912<span class="hljs-number">-17e87</span>c126ba9-GRAPH_ID:<span class="hljs-number">0</span>-PID:<span class="hljs-number">67045</span>-HOST:ai-vtraining-prd<span class="hljs-number">-141</span><span class="hljs-number">-165</span><span class="hljs-number">-30</span><span class="hljs-number">-45.</span>v-bj<span class="hljs-number">-4.</span>vivo.lan-PC_NAME:speech_vol_v2-client<span class="hljs-number">-55</span>-RECON_NO:<span class="hljs-number">-0</span> (version: <span class="hljs-number">6.5</span>) with subvol /data7/brick [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">17</span>:<span class="hljs-number">13.967294</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-tcp.speech_vol_v2-server: readv on <span class="hljs-number">141.165</span><span class="hljs-number">.30</span><span class="hljs-number">.45</span>:<span class="hljs-number">48606</span> failed (No data available)[<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">39</span>:<span class="hljs-number">55.104419</span>] W [glusterfsd.c:<span class="hljs-number">1596</span>:cleanup_and_exit] (--&gt;/lib64/libpthread.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x7dd5</span>) [<span class="hljs-number">0x7f9d087f1dd5</span>] --&gt;/usr/sbin/glusterfsd(glusterfs_sigwaiter+<span class="hljs-number">0xe5</span>) [<span class="hljs-number">0x55f6769bb625</span>] --&gt;/usr/sbin/glusterfsd(cleanup_and_exit+<span class="hljs-number">0x6b</span>) [<span class="hljs-number">0x55f6769bb48b</span>] ) <span class="hljs-number">0</span>-: received signum (<span class="hljs-number">15</span>), shutting down [<span class="hljs-number">2020</span><span class="hljs-number">-05</span><span class="hljs-number">-27</span> <span class="hljs-number">02</span>:<span class="hljs-number">39</span>:<span class="hljs-number">55.104502</span>] W [socket.c:<span class="hljs-number">774</span>:__socket_rwv] <span class="hljs-number">0</span>-glusterfs: writev on <span class="hljs-number">141.165</span><span class="hljs-number">.181</span><span class="hljs-number">.147</span>:<span class="hljs-number">24007</span> failed (Broken pipe)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs客户端挂载init流程</title>
    <link href="/2020/05/26/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8C%82%E8%BD%BDinit%E6%B5%81%E7%A8%8B/"/>
    <url>/2020/05/26/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8C%82%E8%BD%BDinit%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h4 id="Glusterfs-原理"><a href="#Glusterfs-原理" class="headerlink" title="Glusterfs 原理"></a>Glusterfs 原理</h4><p><strong>Glusterfs 基本原理</strong><br>    Glusterfs 是基于fuse的分布式存储，功能上支持分布式/3副本/EC三种存储方式。Glusterfs采用堆栈式的架构设计，服务端和客户端采用translator.<br>    GlusterFS概念中，由一系列translator构成的完整功能栈称之为Volume，分配给一个volume的本地文件系统称为brick，被至少一个translator处理过的brick称为subvolume。客户端是由于volume类型来加载对应的translator，服务端也是一样，根据不同的volume的类型加载translator。客户端(glusterfs)通过挂载时候提供节点IP地址，很对应节点的服务端管理进程通信，获取brick源信息、客户单需要加载的配置，客户端根据配置初始化xlator，后续IO的流程按照xlator的顺序经过每个xlator的fop函数，然后直接和对应的glusterfsd的进程交互IO操作。glusterfsd也是一样，根据服务端配置文件，初始化服务端需要加载xlator，进行每个xlator的fop的操作，最终执行系统IO函数进行IO操作。节点的管理服务(glusterd),仅仅加载一个管理的xlator,处理来自glusterfs/gluster的请求，不会处理对应的IO操作操作。</p><h4 id="Glusterfs环境"><a href="#Glusterfs环境" class="headerlink" title="Glusterfs环境"></a>Glusterfs环境</h4><p><strong>1.Glusterfs版本</strong></p><pre><code class="hljs angelscript">glusterfs <span class="hljs-number">7.5</span></code></pre><p><strong>2.volume info</strong></p><pre><code class="hljs yaml"><span class="hljs-attr">Volume Name:</span> <span class="hljs-string">rep3_vol</span><span class="hljs-attr">Type:</span> <span class="hljs-string">Replicate</span><span class="hljs-attr">Volume ID:</span> <span class="hljs-string">73360fc2-e105-4fd4-9b92-b5fa333ba75d</span><span class="hljs-attr">Status:</span> <span class="hljs-string">Started</span><span class="hljs-attr">Snapshot Count:</span> <span class="hljs-number">0</span><span class="hljs-attr">Number of Bricks:</span> <span class="hljs-number">1</span> <span class="hljs-string">x</span> <span class="hljs-number">3</span> <span class="hljs-string">=</span> <span class="hljs-number">3</span><span class="hljs-attr">Transport-type:</span> <span class="hljs-string">tcp</span><span class="hljs-attr">Bricks:</span><span class="hljs-attr">Brick1:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Brick2:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.154</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Brick3:</span> <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.155</span><span class="hljs-string">:/debug/glusterfs/rep3_vol/brick</span><span class="hljs-attr">Options Reconfigured:</span><span class="hljs-attr">diagnostics.brick-log-level:</span> <span class="hljs-string">INFO</span><span class="hljs-attr">performance.client-io-threads:</span> <span class="hljs-string">off</span><span class="hljs-attr">nfs.disable:</span> <span class="hljs-string">on</span><span class="hljs-attr">storage.fips-mode-rchecksum:</span> <span class="hljs-string">on</span><span class="hljs-attr">transport.address-family:</span> <span class="hljs-string">inet</span><span class="hljs-attr">diagnostics.client-log-level:</span> <span class="hljs-string">DEBUG</span></code></pre><h4 id="Mount-命令"><a href="#Mount-命令" class="headerlink" title="Mount 命令"></a>Mount 命令</h4><p><strong>1.通过mount命令挂载</strong></p><pre><code class="hljs angelscript">mount -t glusterfs -o acl <span class="hljs-number">10.193</span><span class="hljs-number">.189</span><span class="hljs-number">.153</span>:/rep3_vol /mnt/rep3_vol2</code></pre><p><strong>2.直接使用glusterfs二进制挂载</strong></p><pre><code class="hljs jboss-cli"><span class="hljs-string">/usr/local/sbin/glusterfs</span> <span class="hljs-params">--acl</span> <span class="hljs-params">--process-name</span> fuse <span class="hljs-params">--volfile-server=10</span>.193.189.153 <span class="hljs-params">--volfile-id=rep3_vol</span> <span class="hljs-string">/mnt/rep3_vol</span></code></pre><h4 id="Mount-Glusterfs-整个流程"><a href="#Mount-Glusterfs-整个流程" class="headerlink" title="Mount Glusterfs 整个流程"></a>Mount Glusterfs 整个流程</h4><h5 id="Glusterfs-交互架构"><a href="#Glusterfs-交互架构" class="headerlink" title="Glusterfs 交互架构"></a>Glusterfs 交互架构</h5><p><img src="/2020/05/26/glusterfs%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8C%82%E8%BD%BDinit%E6%B5%81%E7%A8%8B/glusterfs-init.png" srcset="/img/loading.gif" alt="glusterfs-init"></p><h5 id="Glusterfs-客户端实现分析"><a href="#Glusterfs-客户端实现分析" class="headerlink" title="Glusterfs 客户端实现分析"></a>Glusterfs 客户端实现分析</h5><ul><li><p>1.glusterfsd.c中的main方法入口函数</p><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> main(<span class="hljs-built_in">int</span> argc, <span class="hljs-built_in">char</span> *argv<span class="hljs-literal">[]</span>)&#123;create<span class="hljs-constructor">_fuse_mount(<span class="hljs-params">ctx</span>)</span>;glusterfs<span class="hljs-constructor">_volumes_init(<span class="hljs-params">ctx</span>)</span>;&#125;</code></pre></li><li><p>2.create_fuse_mount初始化mount/fuse的模块，具体是加载/usr/local/lib/glusterfs/2020.05.12/xlator/mount/fuse.so,会去执行fuse.so中的init方法</p><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> create<span class="hljs-constructor">_fuse_mount(<span class="hljs-params">glusterfs_ctx_t</span> <span class="hljs-operator">*</span><span class="hljs-params">ctx</span>)</span>&#123;xlator<span class="hljs-constructor">_set_type(<span class="hljs-params">master</span>, <span class="hljs-string">"mount/fuse"</span>)</span>xlator<span class="hljs-constructor">_init(<span class="hljs-params">master</span>)</span>;&#125;</code></pre></li><li><p>3.加载glusterfs fuse模块以后会去执行 glusterfs_volumes_init，该函数主要是在客户端初始化针对客户端操作的volume需要的xlator.</p><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> glusterfs<span class="hljs-constructor">_volumes_init(<span class="hljs-params">glusterfs_ctx_t</span> <span class="hljs-operator">*</span><span class="hljs-params">ctx</span>)</span>&#123;       glusterfs<span class="hljs-constructor">_mgmt_init(<span class="hljs-params">ctx</span>)</span>;    glusterfs<span class="hljs-constructor">_process_volfp(<span class="hljs-params">ctx</span>, <span class="hljs-params">fp</span>)</span>;&#125;</code></pre></li><li><p>4.针对我们参数传递的volfile_server为某个节点的ip,代码会走到glusterfs_mgmt_init，该函数会根据连接请求去fetch spec</p><pre><code class="hljs cs"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">glusterfs_mgmt_init</span>(<span class="hljs-params">glusterfs_ctx_t *ctx</span>)</span><span class="hljs-function"></span>&#123;rpc_clnt_register_notify(rpc, mgmt_rpc_notify, THIS);rpcclnt_cbk_program_register(rpc, &amp;mgmt_cbk_prog, THIS);    ctx-&gt;notify = glusterfs_mgmt_notify;    ret = rpc_clnt_start(rpc);&#125;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mgmt_rpc_notify</span>(<span class="hljs-params"><span class="hljs-keyword">struct</span> rpc_clnt *rpc, <span class="hljs-keyword">void</span> *mydata, rpc_clnt_event_t <span class="hljs-keyword">event</span>,</span></span><span class="hljs-function"><span class="hljs-params">                <span class="hljs-keyword">void</span> *data</span>)</span><span class="hljs-function"></span>&#123; <span class="hljs-keyword">switch</span> (<span class="hljs-keyword">event</span>) &#123;        <span class="hljs-keyword">case</span> RPC_CLNT_DISCONNECT:        <span class="hljs-comment">//</span>        <span class="hljs-keyword">case</span> RPC_CLNT_CONNECT:            ret = glusterfs_volfile_fetch(ctx);&#125;<span class="hljs-comment">//spec 信息如下参见附件</span></code></pre></li><li><ol start="5"><li>glusterfs_volfile_fetch 会调用glusterfs_volfile_fetch_one 获取spec</li></ol></li></ul><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> glusterfs<span class="hljs-constructor">_volfile_fetch(<span class="hljs-params">glusterfs_ctx_t</span> <span class="hljs-operator">*</span><span class="hljs-params">ctx</span>)</span>&#123;return glusterfs<span class="hljs-constructor">_volfile_fetch_one(<span class="hljs-params">ctx</span>, <span class="hljs-params">ctx</span>-&gt;<span class="hljs-params">cmd_args</span>.<span class="hljs-params">volfile_id</span>)</span>;   &#125;</code></pre><ul><li>6.glusterfs_volfile_fetch_one是实质获取客户端brick元数据和translator的函数、同时通过mgmt_getspec_cbk回调函数处理获取这些信息后的处理函数<pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">glusterfs_volfile_fetch_one</span><span class="hljs-params">(<span class="hljs-keyword">glusterfs_ctx_t</span> *ctx, <span class="hljs-keyword">char</span> *volfile_id)</span></span><span class="hljs-function"></span>&#123; ret = mgmt_submit_request(&amp;req, frame, ctx, &amp;clnt_handshake_prog,                              GF_HNDSK_GETSPEC, mgmt_getspec_cbk,                              (<span class="hljs-keyword">xdrproc_t</span>)xdr_gf_getspec_req);&#125;<span class="hljs-comment">//mgmt_submit_request函数会调用服务端的gluster_handshake_actors[GETSPEC]对应的函数，获取spec信息后会调用mgmt_getspec_cbk回调函数.</span><span class="hljs-comment">//在gdb参数中设置--volfile-server=10.193.189.154 这个节点上gdb attach glusterd进程，然后设置在server_getspec，然后客户端请求，然后10.193.189.154节点的glusterd在server_getspec响应</span><span class="hljs-keyword">rpcsvc_actor_t</span> gluster_handshake_actors[GF_HNDSK_MAXVALUE] = &#123;    [GF_HNDSK_GETSPEC] = &#123;<span class="hljs-string">"GETSPEC"</span>, GF_HNDSK_GETSPEC, server_getspec, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, DRC_NA&#125;&#125;;<span class="hljs-comment">//重新获取spec初始化客户端的translator的，这个函数就是构造xlator的图，同时初始化每个xlator</span><span class="hljs-keyword">int</span>mgmt_getspec_cbk(struct rpc_req *req, struct iovec *iov, <span class="hljs-keyword">int</span> count,                 <span class="hljs-keyword">void</span> *myframe)&#123; glusterfs_volfile_reconfigure(tmpfp, ctx); glusterfs_process_volfp(ctx, tmpfp);&#125;</code></pre><h4 id="Debug方法"><a href="#Debug方法" class="headerlink" title="Debug方法"></a>Debug方法</h4></li></ul><p><strong>1.调试的注意点</strong><br>    glusterfs/glusterd/glusterfsd是同一个二进制进程，仅仅是区别是glusterfsd和glusterfs软链了glusterd的进程。glusterfs使用同一个二进制程序，根据不同的业务功能，fork或者走不同逻辑分别来实现glusterfs/glusterfsd/glusterd的功能。</p><p><strong>2.调试的注意点</strong></p><p><strong>3.具体调试方法</strong></p><ul><li>1.执行命令gdb /usr/local/sbin/glusterfs</li><li>2.进入gdb的交互控制界面，需要设置参数,参数设置如下<pre><code class="hljs routeros">gdb /usr/local/sbin/glusterfs<span class="hljs-builtin-name">set</span> args  --acl --process-name fuse <span class="hljs-attribute">--volfile-server</span>=10.193.189.153 <span class="hljs-attribute">--volfile-id</span>=rep3_vol /mnt/rep3_vol(gdb) <span class="hljs-builtin-name">set</span> <span class="hljs-builtin-name">print</span> pretty on(gdb) br main(gdb) br create_fuse_mount</code></pre></li><li>3.当断点执行到create_fuse_mount，该函数通过xlator_init加载mount/fuse的translor。<pre><code class="hljs angelscript">(gdb) Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">37741.</span>Breakpoint <span class="hljs-number">3</span>, create_fuse_mount (ctx=<span class="hljs-number">0x63e010</span>) at glusterfsd.c:<span class="hljs-number">719</span><span class="hljs-comment">//中间过程</span>(gdb) Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">39472.</span><span class="hljs-number">770</span>         <span class="hljs-keyword">if</span> (ret) &#123;&#125;</code></pre></li><li>4.等create_fuse_mount执行完毕以后，需要设置调试进程的模式,这样不至于进程一致停留在父进程中，子进程是需要和调试参数中设置的ip的节点通信，获取相关的bricks信息和客户端需要加载的translator<pre><code class="hljs angelscript">Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">39472.</span><span class="hljs-number">770</span>         <span class="hljs-keyword">if</span> (ret) &#123;<span class="hljs-comment">//&#125;</span>(gdb) <span class="hljs-keyword">set</span> follow-fork-mode child (gdb)  <span class="hljs-keyword">set</span> detach-on-fork off(gdb) main (argc=<span class="hljs-number">7</span>, argv=<span class="hljs-number">0x7fffffffe368</span>) at glusterfsd.c:<span class="hljs-number">2875</span><span class="hljs-number">2875</span>        <span class="hljs-keyword">if</span> (ret)(gdb) <span class="hljs-number">2878</span>        ret = daemonize(ctx);(gdb) [New process <span class="hljs-number">39570</span>][Thread debugging using libthread_db enabled]Using host libthread_db library <span class="hljs-string">"/lib64/libthread_db.so.1"</span>.[New Thread <span class="hljs-number">0x7fffeee4d700</span> (LWP <span class="hljs-number">39573</span>)][New Thread <span class="hljs-number">0x7fffee64c700</span> (LWP <span class="hljs-number">39574</span>)][Switching to Thread <span class="hljs-number">0x7ffff7fe74c0</span> (LWP <span class="hljs-number">39570</span>)]main (argc=<span class="hljs-number">7</span>, argv=<span class="hljs-number">0x7fffffffe368</span>) at glusterfsd.c:<span class="hljs-number">2879</span><span class="hljs-number">2879</span>        <span class="hljs-keyword">if</span> (ret)Missing separate debuginfos, use: debuginfo-install glibc<span class="hljs-number">-2.17</span><span class="hljs-number">-260.</span>el7_6<span class="hljs-number">.3</span>.x86_64 libuuid<span class="hljs-number">-2.23</span><span class="hljs-number">.2</span><span class="hljs-number">-59.</span>el7.x86_64 openssl-libs<span class="hljs-number">-1.0</span><span class="hljs-number">.2</span>k<span class="hljs-number">-16.</span>el7.x86_64 zlib<span class="hljs-number">-1.2</span><span class="hljs-number">.7</span><span class="hljs-number">-18.</span>el7.x86_64(gdb) <span class="hljs-number">2887</span>        mem_pools_init();(gdb)   (gdb) <span class="hljs-keyword">set</span> print elements <span class="hljs-number">0</span>(gdb) show print elements</code></pre></li><li>5.在子进程设置glusterfs客户端执行逻辑的函数,通过rpc请求，向服务端glusterd拉取bricks元数据和客户端需要加载的translator的信息<pre><code class="hljs lisp">(<span class="hljs-name">gdb</span>) mgmt_getspec_cbk  (<span class="hljs-name">gdb</span>) glusterfs_volfile_fetch_one(<span class="hljs-name">gdb</span>) glusterfs_volfile_fetch (<span class="hljs-name">gdb</span>) glusterfs_mgmt_init(<span class="hljs-name">gdb</span>) glusterfs_volumes_init(<span class="hljs-name">gdb</span>) glusterfs_process_volfp(<span class="hljs-name">gdb</span>) glusterfs_graph_construct</code></pre><h4 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h4></li></ul><pre><code class="hljs routeros">volume rep3_vol-client-0   <span class="hljs-built_in"> type </span>protocol/client    option send-gids <span class="hljs-literal">true</span>    option transport.socket.keepalive-count 9    option transport.socket.keepalive-interval 2    option transport.socket.keepalive-time 20    option transport.tcp-user-timeout 0    option transport.socket.ssl-enabled off    option password 7e9a1877-0837-4563-b73d-aa4cde754c91    option username bdb0a45d-e70d-445d-8fe6-76118dfdb738    option transport.address-family inet    option transport-type tcp    option remote-subvolume /debug/glusterfs/rep3_vol/brick    option remote-host 10.193.189.153    option ping-timeout 42end-volumevolume rep3_vol-client-1   <span class="hljs-built_in"> type </span>protocol/client    option send-gids <span class="hljs-literal">true</span>    option transport.socket.keepalive-count 9    option transport.socket.keepalive-interval 2    option transport.socket.keepalive-time 20    option transport.tcp-user-timeout 0    option transport.socket.ssl-enabled off    option password 7e9a1877-0837-4563-b73d-aa4cde754c91    option username bdb0a45d-e70d-445d-8fe6-76118dfdb738    option transport.address-family inet    option transport-type tcp    option remote-subvolume /debug/glusterfs/rep3_vol/brick    option remote-host 10.193.189.154    option ping-timeout 42end-volumevolume rep3_vol-client-2   <span class="hljs-built_in"> type </span>protocol/client    option send-gids <span class="hljs-literal">true</span>    option transport.socket.keepalive-count 9    option transport.socket.keepalive-interval 2    option transport.socket.keepalive-time 20    option transport.tcp-user-timeout 0    option transport.socket.ssl-enabled off    option password 7e9a1877-0837-4563-b73d-aa4cde754c91    option username bdb0a45d-e70d-445d-8fe6-76118dfdb738    option transport.address-family inet    option transport-type tcp    option remote-subvolume /debug/glusterfs/rep3_vol/brick    option remote-host 10.193.189.155    option ping-timeout 42end-volumevolume rep3_vol-replicate-0   <span class="hljs-built_in"> type </span>cluster/replicate    option use-compound-fops off    option afr-pending-xattr rep3_vol-client-0,rep3_vol-client-1,rep3_vol-client-2    subvolumes rep3_vol-client-0 rep3_vol-client-1 rep3_vol-client-2end-volumevolume rep3_vol-dht   <span class="hljs-built_in"> type </span>cluster/distribute    option force-migration off    option lock-migration off    subvolumes rep3_vol-replicate-0end-volumevolume rep3_vol-utime   <span class="hljs-built_in"> type </span>features/utime    option noatime on    subvolumes rep3_vol-dhtend-volumevolume rep3_vol-write-behind   <span class="hljs-built_in"> type </span>performance/write-behind    subvolumes rep3_vol-utimeend-volumevolume rep3_vol-read-ahead   <span class="hljs-built_in"> type </span>performance/read-ahead    subvolumes rep3_vol-write-behindend-volumevolume rep3_vol-readdir-ahead   <span class="hljs-built_in"> type </span>performance/readdir-ahead    option rda-cache-limit 10MB    option rda-request-size 131072    option parallel-readdir off    subvolumes rep3_vol-read-aheadend-volumevolume rep3_vol-io-cache   <span class="hljs-built_in"> type </span>performance/io-cache    subvolumes rep3_vol-readdir-aheadend-volumevolume rep3_vol-open-behind   <span class="hljs-built_in"> type </span>performance/open-behind    subvolumes rep3_vol-io-cacheend-volumevolume rep3_vol-quick-read   <span class="hljs-built_in"> type </span>performance/quick-read    subvolumes rep3_vol-open-behindend-volumevolume rep3_vol-md-cache   <span class="hljs-built_in"> type </span>performance/md-cache    subvolumes rep3_vol-quick-readend-volumevolume rep3_vol   <span class="hljs-built_in"> type </span>debug/io-stats    option global-threading off    option count-fop-hits off    option latency-measurement off    option threads 16    option log-level DEBUG    subvolumes rep3_vol-md-cacheend-volume</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>OpenCAS 消耗过多内存问题</title>
    <link href="/2020/05/14/OpenCAS-%E6%B6%88%E8%80%97%E8%BF%87%E5%A4%9A%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/"/>
    <url>/2020/05/14/OpenCAS-%E6%B6%88%E8%80%97%E8%BF%87%E5%A4%9A%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="OpenCase-内存耗尽的问题"><a href="#OpenCase-内存耗尽的问题" class="headerlink" title="OpenCase 内存耗尽的问题"></a>OpenCase 内存耗尽的问题</h2><h3 id="1-现象"><a href="#1-现象" class="headerlink" title="1.现象"></a>1.现象</h3><ul><li>使用3.5T  SSD 初始化opencas初始化，宿主机内存为120G，初始化成功后，运行一段时间出现内存全部消耗完。</li></ul><h3 id="2-opencas-版本信息"><a href="#2-opencas-版本信息" class="headerlink" title="2.opencas 版本信息"></a>2.opencas 版本信息</h3><pre><code class="hljs css"><span class="hljs-selector-tag">opencas</span> <span class="hljs-selector-tag">version</span><span class="hljs-selector-pseudo">:19.9</span><span class="hljs-selector-tag">Linux</span> <span class="hljs-selector-tag">kernel</span>: 3<span class="hljs-selector-class">.10</span><span class="hljs-selector-class">.0-957</span><span class="hljs-selector-class">.el7</span><span class="hljs-selector-class">.x86_64</span><span class="hljs-selector-tag">CentOS</span> <span class="hljs-selector-tag">Linux</span> <span class="hljs-selector-tag">release</span> 7<span class="hljs-selector-class">.6</span><span class="hljs-selector-class">.1810</span> (<span class="hljs-selector-tag">Core</span>)</code></pre><h3 id="3-opencas-出问题时候日志"><a href="#3-opencas-出问题时候日志" class="headerlink" title="3.opencas 出问题时候日志"></a>3.opencas 出问题时候日志</h3><pre><code class="hljs angelscript">use command:  grep vmalloc /proc/vmallocinfo |grep cas_cache<span class="hljs-number">0xffffae2a4dffe000</span><span class="hljs-number">-0xffffae2a4e000000</span>    <span class="hljs-number">8192</span> ocf_metadata_hash_ctrl_init+<span class="hljs-number">0x23</span>/<span class="hljs-number">0xe0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebb2000</span><span class="hljs-number">-0xffffae2a4ebb4000</span>    <span class="hljs-number">8192</span> ocf_metadata_hash_ctrl_init+<span class="hljs-number">0x23</span>/<span class="hljs-number">0xe0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebb4000</span><span class="hljs-number">-0xffffae2a4ebb6000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebb6000</span><span class="hljs-number">-0xffffae2a4ebb8000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebb8000</span><span class="hljs-number">-0xffffae2a4ebc5000</span>   <span class="hljs-number">53248</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">12</span> vmalloc N0=<span class="hljs-number">12</span><span class="hljs-number">0xffffae2a4ebc5000</span><span class="hljs-number">-0xffffae2a4ebc7000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebc7000</span><span class="hljs-number">-0xffffae2a4ebd1000</span>   <span class="hljs-number">40960</span> raw_dynamic_init+<span class="hljs-number">0x38</span>/<span class="hljs-number">0x90</span> [cas_cache] pages=<span class="hljs-number">9</span> vmalloc N0=<span class="hljs-number">9</span><span class="hljs-number">0xffffae2a4ebd1000</span><span class="hljs-number">-0xffffae2a4ebd3000</span>    <span class="hljs-number">8192</span> _cache_mngt_cache_priv_init+<span class="hljs-number">0x2e</span>/<span class="hljs-number">0x60</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebf1000</span><span class="hljs-number">-0xffffae2a4ebf3000</span>    <span class="hljs-number">8192</span> _ocf_mngt_attach_cache_device+<span class="hljs-number">0x23</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebf3000</span><span class="hljs-number">-0xffffae2a4ebf5000</span>    <span class="hljs-number">8192</span> ocf_volume_init+<span class="hljs-number">0x99</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebfc000</span><span class="hljs-number">-0xffffae2a4ebfe000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x25</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ebfe000</span><span class="hljs-number">-0xffffae2a4ec00000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x64</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4edda000</span><span class="hljs-number">-0xffffae2a4edfb000</span>  <span class="hljs-number">135168</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">32</span> vmalloc N0=<span class="hljs-number">32</span><span class="hljs-number">0xffffae2a4edfb000</span><span class="hljs-number">-0xffffae2a4edfd000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x74</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4edfe000</span><span class="hljs-number">-0xffffae2a4ee00000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4ef01000</span><span class="hljs-number">-0xffffae2a4ef7b000</span>  <span class="hljs-number">499712</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">121</span> vmalloc N0=<span class="hljs-number">121</span><span class="hljs-number">0xffffae2a4ef7b000</span><span class="hljs-number">-0xffffae2a4ef87000</span>   <span class="hljs-number">49152</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">11</span> vmalloc N1=<span class="hljs-number">11</span><span class="hljs-number">0xffffae2a4ef87000</span><span class="hljs-number">-0xffffae2a4ef8f000</span>   <span class="hljs-number">32768</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">7</span> vmalloc N1=<span class="hljs-number">7</span><span class="hljs-number">0xffffae2a4ef8f000</span><span class="hljs-number">-0xffffae2a4ef9b000</span>   <span class="hljs-number">49152</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">11</span> vmalloc N1=<span class="hljs-number">11</span><span class="hljs-number">0xffffae2a4ef9b000</span><span class="hljs-number">-0xffffae2a4efab000</span>   <span class="hljs-number">65536</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">15</span> vmalloc N1=<span class="hljs-number">15</span><span class="hljs-number">0xffffae2a4efab000</span><span class="hljs-number">-0xffffae2a4efb9000</span>   <span class="hljs-number">57344</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">13</span> vmalloc N1=<span class="hljs-number">13</span><span class="hljs-number">0xffffae2a4efbe000</span><span class="hljs-number">-0xffffae2a4efc0000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4efc0000</span><span class="hljs-number">-0xffffae2a4efe1000</span>  <span class="hljs-number">135168</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">32</span> vmalloc N0=<span class="hljs-number">32</span><span class="hljs-number">0xffffae2a4efe1000</span><span class="hljs-number">-0xffffae2a4efee000</span>   <span class="hljs-number">53248</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">12</span> vmalloc N0=<span class="hljs-number">12</span><span class="hljs-number">0xffffae2a4efee000</span><span class="hljs-number">-0xffffae2a4eff0000</span>    <span class="hljs-number">8192</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4eff0000</span><span class="hljs-number">-0xffffae2a4effa000</span>   <span class="hljs-number">40960</span> raw_dynamic_init+<span class="hljs-number">0x38</span>/<span class="hljs-number">0x90</span> [cas_cache] pages=<span class="hljs-number">9</span> vmalloc N0=<span class="hljs-number">9</span><span class="hljs-number">0xffffae2a4effa000</span><span class="hljs-number">-0xffffae2a4effc000</span>    <span class="hljs-number">8192</span> _cache_mngt_cache_priv_init+<span class="hljs-number">0x2e</span>/<span class="hljs-number">0x60</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f101000</span><span class="hljs-number">-0xffffae2a4f17b000</span>  <span class="hljs-number">499712</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">121</span> vmalloc N0=<span class="hljs-number">121</span><span class="hljs-number">0xffffae2a4f17b000</span><span class="hljs-number">-0xffffae2a4f17d000</span>    <span class="hljs-number">8192</span> _ocf_mngt_attach_cache_device+<span class="hljs-number">0x23</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f17d000</span><span class="hljs-number">-0xffffae2a4f17f000</span>    <span class="hljs-number">8192</span> ocf_volume_init+<span class="hljs-number">0x99</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f17f000</span><span class="hljs-number">-0xffffae2a4f18b000</span>   <span class="hljs-number">49152</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">11</span> vmalloc N0=<span class="hljs-number">11</span><span class="hljs-number">0xffffae2a4f192000</span><span class="hljs-number">-0xffffae2a4f19a000</span>   <span class="hljs-number">32768</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">7</span> vmalloc N0=<span class="hljs-number">7</span><span class="hljs-number">0xffffae2a4f19a000</span><span class="hljs-number">-0xffffae2a4f1a6000</span>   <span class="hljs-number">49152</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">11</span> vmalloc N0=<span class="hljs-number">11</span><span class="hljs-number">0xffffae2a4f1a6000</span><span class="hljs-number">-0xffffae2a4f1b6000</span>   <span class="hljs-number">65536</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">15</span> vmalloc N0=<span class="hljs-number">15</span><span class="hljs-number">0xffffae2a4f1b6000</span><span class="hljs-number">-0xffffae2a4f1c4000</span>   <span class="hljs-number">57344</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">13</span> vmalloc N0=<span class="hljs-number">13</span><span class="hljs-number">0xffffae2a4f1c4000</span><span class="hljs-number">-0xffffae2a4f1c6000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x25</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f1c6000</span><span class="hljs-number">-0xffffae2a4f1c8000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x64</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f1c8000</span><span class="hljs-number">-0xffffae2a4f1ca000</span>    <span class="hljs-number">8192</span> ocf_freelist_init+<span class="hljs-number">0x74</span>/<span class="hljs-number">0x100</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f1ca000</span><span class="hljs-number">-0xffffae2a4f1d4000</span>   <span class="hljs-number">40960</span> ocf_cache_line_concurrency_init+<span class="hljs-number">0x48</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">9</span> vmalloc N0=<span class="hljs-number">9</span><span class="hljs-number">0xffffae2a4f1d4000</span><span class="hljs-number">-0xffffae2a4f1d9000</span>   <span class="hljs-number">20480</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">4</span> vmalloc N0=<span class="hljs-number">4</span><span class="hljs-number">0xffffae2a4f1d9000</span><span class="hljs-number">-0xffffae2a4f1de000</span>   <span class="hljs-number">20480</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">4</span> vmalloc N1=<span class="hljs-number">4</span><span class="hljs-number">0xffffae2a4f1df000</span><span class="hljs-number">-0xffffae2a4f1e1000</span>    <span class="hljs-number">8192</span> ocf_promotion_init+<span class="hljs-number">0x2e</span>/<span class="hljs-number">0xc0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f1e5000</span><span class="hljs-number">-0xffffae2a4f1ef000</span>   <span class="hljs-number">40960</span> ocf_cache_line_concurrency_init+<span class="hljs-number">0x48</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">9</span> vmalloc N1=<span class="hljs-number">9</span><span class="hljs-number">0xffffae2a4f1f5000</span><span class="hljs-number">-0xffffae2a4f1f7000</span>    <span class="hljs-number">8192</span> ocf_promotion_init+<span class="hljs-number">0x2e</span>/<span class="hljs-number">0xc0</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f301000</span><span class="hljs-number">-0xffffae2a4f34b000</span>  <span class="hljs-number">303104</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x57</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">73</span> vmalloc N0=<span class="hljs-number">73</span><span class="hljs-number">0xffffae2a4f34b000</span><span class="hljs-number">-0xffffae2a4f395000</span>  <span class="hljs-number">303104</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x57</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">73</span> vmalloc N1=<span class="hljs-number">73</span><span class="hljs-number">0xffffae2a4f503000</span><span class="hljs-number">-0xffffae2a4f505000</span>    <span class="hljs-number">8192</span> _raw_dynamic_get_item.isra<span class="hljs-number">.10</span>+<span class="hljs-number">0xbc</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N0=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4f5fa000</span><span class="hljs-number">-0xffffae2a4f5fc000</span>    <span class="hljs-number">8192</span> _raw_dynamic_get_item.isra<span class="hljs-number">.10</span>+<span class="hljs-number">0xbc</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">1</span> vmalloc N1=<span class="hljs-number">1</span><span class="hljs-number">0xffffae2a4fe90000</span><span class="hljs-number">-0xffffae2a4ff9a000</span> <span class="hljs-number">1089536</span> ocf_mngt_cache_start+<span class="hljs-number">0x1b0</span>/<span class="hljs-number">0x7a0</span> [cas_cache] pages=<span class="hljs-number">265</span> vmalloc N0=<span class="hljs-number">265</span><span class="hljs-number">0xffffae2a50b02000</span><span class="hljs-number">-0xffffae2a50c28000</span> <span class="hljs-number">1204224</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">293</span> vmalloc N0=<span class="hljs-number">293</span><span class="hljs-number">0xffffae2a50c28000</span><span class="hljs-number">-0xffffae2a50d32000</span> <span class="hljs-number">1089536</span> ocf_mngt_cache_start+<span class="hljs-number">0x1b0</span>/<span class="hljs-number">0x7a0</span> [cas_cache] pages=<span class="hljs-number">265</span> vmalloc N0=<span class="hljs-number">265</span><span class="hljs-number">0xffffae2a50d32000</span><span class="hljs-number">-0xffffae2a50e58000</span> <span class="hljs-number">1204224</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">293</span> vmalloc N0=<span class="hljs-number">293</span><span class="hljs-number">0xffffae2a50e58000</span><span class="hljs-number">-0xffffae2a52313000</span> <span class="hljs-number">21737472</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">5306</span> vmalloc vpages N0=<span class="hljs-number">5306</span><span class="hljs-number">0xffffae2a52313000</span><span class="hljs-number">-0xffffae2a530e2000</span> <span class="hljs-number">14479360</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">3534</span> vmalloc vpages N0=<span class="hljs-number">3534</span><span class="hljs-number">0xffffae2a530e2000</span><span class="hljs-number">-0xffffae2a5459d000</span> <span class="hljs-number">21737472</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">5306</span> vmalloc vpages N0=<span class="hljs-number">5306</span><span class="hljs-number">0xffffae2a5459d000</span><span class="hljs-number">-0xffffae2a56311000</span> <span class="hljs-number">30883840</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">7539</span> vmalloc vpages N0=<span class="hljs-number">7539</span><span class="hljs-number">0xffffae2a56311000</span><span class="hljs-number">-0xffffae2a564cc000</span> <span class="hljs-number">1814528</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">442</span> vmalloc N0=<span class="hljs-number">442</span><span class="hljs-number">0xffffae2a564cc000</span><span class="hljs-number">-0xffffae2a57cf6000</span> <span class="hljs-number">25337856</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">6185</span> vmalloc vpages N0=<span class="hljs-number">6185</span><span class="hljs-number">0xffffae2a57cf6000</span><span class="hljs-number">-0xffffae2a58cf8000</span> <span class="hljs-number">16785408</span> ocf_cache_line_concurrency_init+<span class="hljs-number">0x48</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">4097</span> vmalloc vpages N0=<span class="hljs-number">4097</span><span class="hljs-number">0xffffae2a58cf8000</span><span class="hljs-number">-0xffffae2a593e0000</span> <span class="hljs-number">7241728</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">1767</span> vmalloc vpages N0=<span class="hljs-number">1767</span><span class="hljs-number">0xffffae2a5c278000</span><span class="hljs-number">-0xffffae2a5d733000</span> <span class="hljs-number">21737472</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">5306</span> vmalloc vpages N1=<span class="hljs-number">5306</span><span class="hljs-number">0xffffae2a5d733000</span><span class="hljs-number">-0xffffae2a5e502000</span> <span class="hljs-number">14479360</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">3534</span> vmalloc vpages N1=<span class="hljs-number">3534</span><span class="hljs-number">0xffffae2a5e502000</span><span class="hljs-number">-0xffffae2a5f9bd000</span> <span class="hljs-number">21737472</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">5306</span> vmalloc vpages N1=<span class="hljs-number">5306</span><span class="hljs-number">0xffffae2a5f9bd000</span><span class="hljs-number">-0xffffae2a5fb78000</span> <span class="hljs-number">1814528</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">442</span> vmalloc N1=<span class="hljs-number">442</span><span class="hljs-number">0xffffae2a70001000</span><span class="hljs-number">-0xffffae2d073a0000</span> <span class="hljs-number">11127091200</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">2716574</span> vmalloc vpages N0=<span class="hljs-number">2716574</span><span class="hljs-number">0xffffae2d073a0000</span><span class="hljs-number">-0xffffae2ec0f22000</span> <span class="hljs-number">7410819072</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1809281</span> vmalloc vpages N0=<span class="hljs-number">1809281</span><span class="hljs-number">0xffffae2ec0f22000</span><span class="hljs-number">-0xffffae31582c1000</span> <span class="hljs-number">11127091200</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">2716574</span> vmalloc vpages N0=<span class="hljs-number">2716574</span><span class="hljs-number">0xffffae31582c1000</span><span class="hljs-number">-0xffffae3506818000</span> <span class="hljs-number">15809736704</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">3859798</span> vmalloc vpages N0=<span class="hljs-number">3859798</span><span class="hljs-number">0xffffae3506818000</span><span class="hljs-number">-0xffffae353db8a000</span> <span class="hljs-number">926359552</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">226161</span> vmalloc vpages N0=<span class="hljs-number">226161</span><span class="hljs-number">0xffffae353db8a000</span><span class="hljs-number">-0xffffae3842bac000</span> <span class="hljs-number">12968927232</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">3166241</span> vmalloc vpages N0=<span class="hljs-number">3166241</span><span class="hljs-number">0xffffae3842bac000</span><span class="hljs-number">-0xffffae384bcc2000</span> <span class="hljs-number">152133632</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x57</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">37141</span> vmalloc vpages N0=<span class="hljs-number">37141</span><span class="hljs-number">0xffffae384bcc2000</span><span class="hljs-number">-0xffffae3928a84000</span> <span class="hljs-number">3705413632</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">904641</span> vmalloc vpages N0=<span class="hljs-number">904641</span><span class="hljs-number">0xffffae3928a84000</span><span class="hljs-number">-0xffffae3bbfe23000</span> <span class="hljs-number">11127091200</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">2716574</span> vmalloc vpages N1=<span class="hljs-number">2716574</span><span class="hljs-number">0xffffae3bbfe23000</span><span class="hljs-number">-0xffffae3d799a5000</span> <span class="hljs-number">7410819072</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">1809281</span> vmalloc vpages N1=<span class="hljs-number">1809281</span><span class="hljs-number">0xffffae3d799a5000</span><span class="hljs-number">-0xffffae4010d44000</span> <span class="hljs-number">11127091200</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">2716574</span> vmalloc vpages N1=<span class="hljs-number">2716574</span><span class="hljs-number">0xffffae4010d44000</span><span class="hljs-number">-0xffffae43bf29b000</span> <span class="hljs-number">15809736704</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">3859798</span> vmalloc vpages N1=<span class="hljs-number">3859798</span><span class="hljs-number">0xffffae43bf29b000</span><span class="hljs-number">-0xffffae43c100f000</span> <span class="hljs-number">30883840</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">7539</span> vmalloc vpages N1=<span class="hljs-number">7539</span><span class="hljs-number">0xffffae43c100f000</span><span class="hljs-number">-0xffffae43f8381000</span> <span class="hljs-number">926359552</span> _raw_ram_init+<span class="hljs-number">0x2d</span>/<span class="hljs-number">0x70</span> [cas_cache] pages=<span class="hljs-number">226161</span> vmalloc vpages N1=<span class="hljs-number">226161</span><span class="hljs-number">0xffffae43f8381000</span><span class="hljs-number">-0xffffae46fd3a3000</span> <span class="hljs-number">12968927232</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">3166241</span> vmalloc vpages N1=<span class="hljs-number">3166241</span><span class="hljs-number">0xffffae46fd3a3000</span><span class="hljs-number">-0xffffae46febcd000</span> <span class="hljs-number">25337856</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x3c</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">6185</span> vmalloc vpages N1=<span class="hljs-number">6185</span><span class="hljs-number">0xffffae46febcd000</span><span class="hljs-number">-0xffffae4707ce3000</span> <span class="hljs-number">152133632</span> ocf_metadata_concurrency_attached_init+<span class="hljs-number">0x57</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">37141</span> vmalloc vpages N1=<span class="hljs-number">37141</span><span class="hljs-number">0xffffae4707ce3000</span><span class="hljs-number">-0xffffae4708ce5000</span> <span class="hljs-number">16785408</span> ocf_cache_line_concurrency_init+<span class="hljs-number">0x48</span>/<span class="hljs-number">0x190</span> [cas_cache] pages=<span class="hljs-number">4097</span> vmalloc vpages N1=<span class="hljs-number">4097</span><span class="hljs-number">0xffffae4708ce5000</span><span class="hljs-number">-0xffffae47e5aa7000</span> <span class="hljs-number">3705413632</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">904641</span> vmalloc vpages N1=<span class="hljs-number">904641</span><span class="hljs-number">0xffffae47e5aa7000</span><span class="hljs-number">-0xffffae47e618f000</span> <span class="hljs-number">7241728</span> _ocf_realloc_with_cp+<span class="hljs-number">0x158</span>/<span class="hljs-number">0x1b0</span> [cas_cache] pages=<span class="hljs-number">1767</span> vmalloc vpages N1=<span class="hljs-number">1767</span><span class="hljs-number">0xffffae47e6eb3000</span><span class="hljs-number">-0xffffae47e6eec000</span>  <span class="hljs-number">233472</span> cleaning_policy_acp_initialize+<span class="hljs-number">0x3e</span>/<span class="hljs-number">0x330</span> [cas_cache] pages=<span class="hljs-number">56</span> vmalloc N1=<span class="hljs-number">56</span><span class="hljs-number">0xffffae47e6eec000</span><span class="hljs-number">-0xffffae47e6ef3000</span>   <span class="hljs-number">28672</span> cleaning_policy_acp_add_core+<span class="hljs-number">0x7c</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">6</span> vmalloc N1=<span class="hljs-number">6</span><span class="hljs-number">0xffffae47e712a000</span><span class="hljs-number">-0xffffae47e7163000</span>  <span class="hljs-number">233472</span> cleaning_policy_acp_initialize+<span class="hljs-number">0x3e</span>/<span class="hljs-number">0x330</span> [cas_cache] pages=<span class="hljs-number">56</span> vmalloc N1=<span class="hljs-number">56</span><span class="hljs-number">0xffffae47e7163000</span><span class="hljs-number">-0xffffae47e7169000</span>   <span class="hljs-number">24576</span> cleaning_policy_acp_add_core+<span class="hljs-number">0x7c</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">5</span> vmalloc N1=<span class="hljs-number">5</span><span class="hljs-number">0xffffae47e7692000</span><span class="hljs-number">-0xffffae47e8238000</span> <span class="hljs-number">12214272</span> cleaning_policy_acp_add_core+<span class="hljs-number">0x7c</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">2981</span> vmalloc vpages N1=<span class="hljs-number">2981</span><span class="hljs-number">0xffffae47e8238000</span><span class="hljs-number">-0xffffae47e8af5000</span> <span class="hljs-number">9162752</span> cleaning_policy_acp_add_core+<span class="hljs-number">0x7c</span>/<span class="hljs-number">0x160</span> [cas_cache] pages=<span class="hljs-number">2236</span> vmalloc vpages N1=<span class="hljs-number">2236</span>use command grep vmalloc /proc/vmallocinfo |grep cas_cache | awk <span class="hljs-string">'&#123;total+=$2&#125;; END &#123;print total&#125;'</span><span class="hljs-number">126764556288</span> [<span class="hljs-symbol">root@</span>szdpl1491 ~]# free -h              total        used        free      <span class="hljs-keyword">shared</span>  buff/cache   availableMem:           <span class="hljs-number">125</span>G        <span class="hljs-number">123</span>G        <span class="hljs-number">967</span>M        <span class="hljs-number">5.1</span>M        <span class="hljs-number">864</span>M        <span class="hljs-number">194</span>MSwap:           <span class="hljs-number">31</span>G        <span class="hljs-number">7.9</span>G         <span class="hljs-number">24</span>G the cas_cache use <span class="hljs-number">118</span>G,  I have  another sever with opencas <span class="hljs-keyword">for</span> <span class="hljs-number">1</span> month, the cas_cache use <span class="hljs-number">59</span>G</code></pre><h3 id="3-opencas-相关配置"><a href="#3-opencas-相关配置" class="headerlink" title="3.opencas 相关配置"></a>3.opencas 相关配置</h3><ul><li><p>cache mode: WT</p></li><li><p>cache config</p><pre><code class="hljs angelscript">casadm -Ltype    id   disk       status    write policy   devicecache   <span class="hljs-number">1</span>    /dev/sda   Running   wt             -└core   <span class="hljs-number">1</span>    /dev/sdd   Active    -              /dev/cas1<span class="hljs-number">-1</span>cache   <span class="hljs-number">2</span>    /dev/sdb   Running   wt             -└core   <span class="hljs-number">1</span>    /dev/sde   Active    -              /dev/cas2<span class="hljs-number">-1</span>casadm -P -i <span class="hljs-number">1</span>Cache Id                  <span class="hljs-number">1</span>Cache Size                <span class="hljs-number">926351414</span> [<span class="hljs-number">4</span>KiB Blocks] / <span class="hljs-number">3533.75</span> [GiB]Cache Device              /dev/sdaCore Devices              <span class="hljs-number">1</span>Inactive Core Devices     <span class="hljs-number">0</span>Write Policy              wtEviction Policy           lruCleaning Policy           alruPromotion Policy          alwaysCache line size           <span class="hljs-number">4</span> [KiB]Metadata Memory Footprint <span class="hljs-number">46.7</span> [GiB]Dirty <span class="hljs-keyword">for</span>                 <span class="hljs-number">0</span> [s] / Cache cleanMetadata Mode             normalStatus                    Running╔══════════════════╤═══════════╤══════╤═════════════╗║ Usage statistics │   Count   │  %   │   Units     ║╠══════════════════╪═══════════╪══════╪═════════════╣║ Occupancy        │ <span class="hljs-number">500156640</span> │ <span class="hljs-number">54.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Free             │ <span class="hljs-number">426194774</span> │ <span class="hljs-number">46.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Clean            │ <span class="hljs-number">500156640</span> │ <span class="hljs-number">54.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Dirty            │         <span class="hljs-number">0</span> │  <span class="hljs-number">0.0</span> │ <span class="hljs-number">4</span>KiB blocks ║╚══════════════════╧═══════════╧══════╧═════════════╝╔══════════════════════╤════════════╤═══════╤══════════╗║ Request statistics   │   Count    │   %   │ Units    ║╠══════════════════════╪════════════╪═══════╪══════════╣║ Read hits            │ <span class="hljs-number">2628479218</span> │  <span class="hljs-number">61.6</span> │ Requests ║║ Read partial misses  │          <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ Requests ║║ Read full misses     │         <span class="hljs-number">64</span> │   <span class="hljs-number">0.0</span> │ Requests ║║ Read total           │ <span class="hljs-number">2628479282</span> │  <span class="hljs-number">61.6</span> │ Requests ║╟──────────────────────┼────────────┼───────┼──────────╢║ Write hits           │ <span class="hljs-number">1579075690</span> │  <span class="hljs-number">37.0</span> │ Requests ║║ Write partial misses │    <span class="hljs-number">4237509</span> │   <span class="hljs-number">0.1</span> │ Requests ║║ Write full misses    │   <span class="hljs-number">58309934</span> │   <span class="hljs-number">1.4</span> │ Requests ║║ Write total          │ <span class="hljs-number">1641623133</span> │  <span class="hljs-number">38.4</span> │ Requests ║╟──────────────────────┼────────────┼───────┼──────────╢║ Pass-Through reads   │          <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ Requests ║║ Pass-Through writes  │          <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ Requests ║║ Serviced requests    │ <span class="hljs-number">4270102415</span> │ <span class="hljs-number">100.0</span> │ Requests ║╟──────────────────────┼────────────┼───────┼──────────╢║ Total requests       │ <span class="hljs-number">4270102415</span> │ <span class="hljs-number">100.0</span> │ Requests ║╚══════════════════════╧════════════╧═══════╧══════════╝╔══════════════════════════════════╤═════════════╤═══════╤═════════════╗║ Block statistics                 │    Count    │   %   │   Units     ║╠══════════════════════════════════╪═════════════╪═══════╪═════════════╣║ Reads <span class="hljs-keyword">from</span> core(s)               │         <span class="hljs-number">356</span> │   <span class="hljs-number">0.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Writes to core(s)                │  <span class="hljs-number">2954907028</span> │ <span class="hljs-number">100.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Total to/<span class="hljs-keyword">from</span> core(s)            │  <span class="hljs-number">2954907384</span> │ <span class="hljs-number">100.0</span> │ <span class="hljs-number">4</span>KiB blocks ║╟──────────────────────────────────┼─────────────┼───────┼─────────────╢║ Reads <span class="hljs-keyword">from</span> cache                 │           <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Writes to cache                  │           <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Total to/<span class="hljs-keyword">from</span> cache              │           <span class="hljs-number">0</span> │   <span class="hljs-number">0.0</span> │ <span class="hljs-number">4</span>KiB blocks ║╟──────────────────────────────────┼─────────────┼───────┼─────────────╢║ Reads <span class="hljs-keyword">from</span> exported object(s)    │ <span class="hljs-number">12708231250</span> │  <span class="hljs-number">81.1</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Writes to exported object(s)     │  <span class="hljs-number">2954907028</span> │  <span class="hljs-number">18.9</span> │ <span class="hljs-number">4</span>KiB blocks ║║ Total to/<span class="hljs-keyword">from</span> exported object(s) │ <span class="hljs-number">15663138278</span> │ <span class="hljs-number">100.0</span> │ <span class="hljs-number">4</span>KiB blocks ║╚══════════════════════════════════╧═════════════╧═══════╧═════════════╝╔════════════════════╤═══════╤═════╤══════════╗║ Error statistics   │ Count │  %  │ Units    ║╠════════════════════╪═══════╪═════╪══════════╣║ Cache read errors  │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║║ Cache write errors │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║║ Cache total errors │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║╟────────────────────┼───────┼─────┼──────────╢║ Core read errors   │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║║ Core write errors  │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║║ Core total errors  │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║╟────────────────────┼───────┼─────┼──────────╢║ Total errors       │     <span class="hljs-number">0</span> │ <span class="hljs-number">0.0</span> │ Requests ║╚════════════════════╧═══════╧═════╧══════════╝</code></pre></li><li><p>cache line size</p><pre><code class="hljs yaml"><span class="hljs-comment"># dmesg |grep "Cache line size"</span><span class="hljs-number">2751</span> <span class="hljs-string">[</span> <span class="hljs-number">1505.783016</span><span class="hljs-string">]</span> <span class="hljs-attr">cache1: Hash offset :</span> <span class="hljs-number">44427904</span> <span class="hljs-string">kiB</span><span class="hljs-number">2752</span> <span class="hljs-string">[</span> <span class="hljs-number">1505.783017</span><span class="hljs-string">]</span> <span class="hljs-attr">cache1: Hash size :</span> <span class="hljs-number">904644</span> <span class="hljs-string">kiB</span><span class="hljs-number">2753</span> <span class="hljs-string">[</span> <span class="hljs-number">1505.783018</span><span class="hljs-string">]</span> <span class="hljs-attr">cache1: Cache line size:</span> <span class="hljs-number">4</span> <span class="hljs-string">kiB</span><span class="hljs-number">2754</span> <span class="hljs-string">[</span> <span class="hljs-number">1505.783019</span><span class="hljs-string">]</span> <span class="hljs-attr">cache1: Metadata capacity:</span> <span class="hljs-number">47803</span> <span class="hljs-string">MiB</span><span class="hljs-number">2755</span> <span class="hljs-string">[</span> <span class="hljs-number">1521.649327</span><span class="hljs-string">]</span> <span class="hljs-attr">cache1:</span> <span class="hljs-string">OCF</span> <span class="hljs-string">metadata</span> <span class="hljs-string">self-test</span> <span class="hljs-string">PASSED</span><span class="hljs-number">2756</span> <span class="hljs-string">[</span> <span class="hljs-number">1527.389763</span><span class="hljs-string">]</span> <span class="hljs-string">Thread</span> <span class="hljs-string">cas_clean_cache1</span> <span class="hljs-string">started</span><span class="hljs-number">2893</span> <span class="hljs-string">[</span> <span class="hljs-number">1823.699193</span><span class="hljs-string">]</span> <span class="hljs-attr">cache2: Hash offset :</span> <span class="hljs-number">44427904</span> <span class="hljs-string">kiB</span><span class="hljs-number">2894</span> <span class="hljs-string">[</span> <span class="hljs-number">1823.699194</span><span class="hljs-string">]</span> <span class="hljs-attr">cache2: Hash size :</span> <span class="hljs-number">904644</span> <span class="hljs-string">kiB</span><span class="hljs-number">2895</span> <span class="hljs-string">[</span> <span class="hljs-number">1823.699195</span><span class="hljs-string">]</span> <span class="hljs-attr">cache2: Cache line size:</span> <span class="hljs-number">4</span> <span class="hljs-string">kiB</span><span class="hljs-number">2896</span> <span class="hljs-string">[</span> <span class="hljs-number">1823.699197</span><span class="hljs-string">]</span> <span class="hljs-attr">cache2: Metadata capacity:</span> <span class="hljs-number">47803</span> <span class="hljs-string">MiB</span><span class="hljs-number">2897</span> <span class="hljs-string">[</span> <span class="hljs-number">1839.660385</span><span class="hljs-string">]</span> <span class="hljs-attr">cache2:</span> <span class="hljs-string">OCF</span> <span class="hljs-string">metadata</span> <span class="hljs-string">self-test</span> <span class="hljs-string">PASSED</span><span class="hljs-number">2898</span> <span class="hljs-string">[</span> <span class="hljs-number">1845.359600</span><span class="hljs-string">]</span> <span class="hljs-string">Thread</span> <span class="hljs-string">cas_clean_cache2</span> <span class="hljs-string">started</span></code></pre></li></ul><h3 id="5-解决方法"><a href="#5-解决方法" class="headerlink" title="5.解决方法"></a>5.解决方法</h3><ul><li>opencas在初始化时候casadm 需要添加–cache-line-size  参数，默认是4k，针对宿主机器消耗内存的计算公式为 内存消耗 =  SSD_size / Cache_Line_size  * 70 byte</li><li>官方给的简要说明<pre><code class="hljs sql">It looks quite normal to me. You have two huge <span class="hljs-keyword">cache</span> devices (<span class="hljs-number">2</span> x <span class="hljs-number">3.5</span>TB) <span class="hljs-keyword">and</span> <span class="hljs-keyword">size</span> <span class="hljs-keyword">of</span> CAS metadata <span class="hljs-keyword">is</span> proportional <span class="hljs-keyword">to</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">cache</span> lines. CAS allocates about <span class="hljs-number">70</span> <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">of</span> metadata per <span class="hljs-keyword">cache</span> line, so <span class="hljs-keyword">in</span> your <span class="hljs-keyword">case</span> it <span class="hljs-keyword">is</span> about <span class="hljs-number">60</span>GiB <span class="hljs-keyword">of</span> metadata per single <span class="hljs-keyword">cache</span>, giving ~<span class="hljs-number">120</span>GiB <span class="hljs-keyword">in</span> total. That matches pretty well <span class="hljs-keyword">with</span> your numbers.You can decrease <span class="hljs-keyword">memory</span> consumption <span class="hljs-keyword">by</span> choosing bigger <span class="hljs-keyword">cache</span> line size. You can <span class="hljs-keyword">select</span> <span class="hljs-keyword">cache</span> line <span class="hljs-keyword">size</span> up <span class="hljs-keyword">to</span> <span class="hljs-number">64</span>kiB, which would decrease <span class="hljs-keyword">memory</span> <span class="hljs-keyword">usage</span> <span class="hljs-keyword">by</span> factor <span class="hljs-keyword">of</span> <span class="hljs-number">16.</span>I<span class="hljs-string">'d also recommend you, if it'</span>s possible, <span class="hljs-keyword">to</span> <span class="hljs-keyword">switch</span> <span class="hljs-keyword">to</span> CAS v20<span class="hljs-number">.3</span>.CAS v19<span class="hljs-number">.9</span> was tested <span class="hljs-keyword">only</span> <span class="hljs-keyword">with</span> basic <span class="hljs-keyword">set</span> <span class="hljs-keyword">of</span> tests, <span class="hljs-keyword">while</span> v20<span class="hljs-number">.3</span> was thoroughly validated <span class="hljs-keyword">with</span> extensive <span class="hljs-keyword">set</span> <span class="hljs-keyword">of</span> tests, thus it<span class="hljs-string">'s much more stable than any previous version.</span></code></pre></li></ul><h3 id="6-关于opencas-cache-line官方说明"><a href="#6-关于opencas-cache-line官方说明" class="headerlink" title="6.关于opencas cache line官方说明"></a>6.关于opencas cache line官方说明</h3><p><strong>Why does Open CAS Linux use some DRAM space?</strong></p><p>Open CAS Linux uses a portion of system memory for metadata, which tells us where data resides. The amount of memory needed is proportional to the size of the cache space. This is true for any caching software solution. However with Open CAS Linux this memory footprint can be decreased using a larger cache line size set by the parameter <em>–cache-line-size</em> which may be useful in high density servers with many large HDDs.</p><p><strong>Configuration Tool Details</strong></p><p>The Open CAS Linux product includes a user-level configuration tool that provides complete control of the caching software. The commands and parameters available with this tool are detailed in this chapter.</p><p>To access help from the CLI, type the <em>-H</em> or -<em>-help</em> parameter for details. You can also view the man page for this product by entering the following command:</p><blockquote><p># man casadm</p></blockquote><p><strong>Usage:</strong> casadm –start-cache –cache-device <DEVICE> [option…]</DEVICE></p><p><strong>Example:</strong></p><blockquote><p># casadm –start-cache –cache-device /dev/sdc</p></blockquote><p>or</p><blockquote><p># casadm -S -d /dev/sdc</p></blockquote><p><strong>Description:</strong> Prepares a block device to be used as device for caching other block devices. Typically the cache devices are SSDs or other NVM block devices or RAM disks. The process starts a framework for device mappings pertaining to a specific cache ID. The cache can be loaded with an old state when using the <em>-l</em> or <em>–load</em> parameter (previous cache metadata will not be marked as invalid) or with a new state as the default (previous cache metadata will be marked as invalid).</p><p><strong>Required Parameters:</strong></p><p><strong>[-d, –cache-device ] :</strong> Caching device to be used. This is an SSD or any NVM block device or RAM disk shown in the <em>/dev</em> directory. <device> needs to be the complete path describing the caching device to be used, for example /dev/sdc.</device></p><p><strong>Optional Parameters:</strong></p><p><strong>[-i, –cache-id ]:</strong> Cache ID to create; &lt;1 to 16384&gt;. The ID may be specified or by default the command will use the lowest available number first.</p><p><strong>[-l, –load]:</strong> Load existing cache metadata from caching device. If the cache device has been used previously and then disabled (like in a reboot) and it is determined that the data in the core device has not changed since the cache device was used, this option will allow continuing the use of the data in the cache device without the need to re-warm the cache with data.</p><ul><li><em>Caution:</em> You must ensure that the last shutdown followed the instructions in section <a href="https://open-cas.github.io/guide_running.html#stopping-cache-instances" target="_blank" rel="noopener"><strong>Stopping Cache Instances</strong></a>. If there was any change in the core data prior to enabling the cache, data would be not synced correctly and will be corrupted.</li></ul><p><strong>[-f, –force]:</strong> Forces creation of a cache even if a file system exists on the cache device. This is typically used for devices that have been previously utilized as a cache device.</p><ul><li><em>Caution:</em> This will delete the file system and any existing data on the cache device.</li></ul><p><strong>[-c, –cache-mode ]:</strong> Sets the cache mode for a cache instance the first time it is started or created. The mode can be one of the following:</p><p><em>wt:</em> (default mode) Turns write-through mode on. When using this parameter, the write-through feature is enabled which allows the acceleration of only read intensive operations.</p><p><em>wb:</em> Turns write-back mode on. When using this parameter, the write-back feature is enabled which allows the acceleration of both read and write intensive operations.</p><ul><li><em>Caution:</em> A failure of the cache device may lead to the loss of data that has not yet been flushed to the core device.</li></ul><p><em>wa:</em> Turns write-around mode on. When using this parameter, the write-around feature is enabled which allows the acceleration of reads only. All write locations that do not already exist in the cache (i.e. the locations have not be read yet or have been evicted), are written directly to the core drive bypassing the cache. If the location being written already exists in cache, then both the cache and the core drive will be updated.</p><p><em>pt:</em> Starts cache in pass-through mode. Caching is effectively disabled in this mode. This allows the user to associate all their desired core devices to be cached prior to actually enabling caching. Once the core devices are associated, the user would dynamically switch to their desired caching mode (see ‘-Q | –set-cache-mode’ for details).</p><p><em>wo:</em> Turns write-only mode on. When using this parameter, the write-only feature is enabled which allows the acceleration of write intensive operations primarily.</p><ul><li><em>Caution:</em> A failure of the cache device may lead to the loss of data that has not yet been flushed to the core device.</li></ul><p><strong>[-x, –cache-line-size ]:</strong> Set cache line size {4 (default), 8, 16, 32, 64}. The cache line size can only be set when starting the cache and cannot be changed after cache is started.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>lustre-2.13部署</title>
    <link href="/2020/05/05/lustre-2-13%E9%83%A8%E7%BD%B2/"/>
    <url>/2020/05/05/lustre-2-13%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="chapter-1-lustre部署"><a href="#chapter-1-lustre部署" class="headerlink" title="chapter 1.lustre部署"></a>chapter 1.lustre部署</h2><h3 id="0-节点信息"><a href="#0-节点信息" class="headerlink" title="0.节点信息"></a>0.节点信息</h3><table><thead><tr><th>node</th><th>role</th></tr></thead><tbody><tr><td>centos1(mgs_node/mds_node)</td><td>mgs/mds</td></tr><tr><td>centos2(oss_node)</td><td>oss</td></tr><tr><td>centos3(client_node)</td><td>client</td></tr></tbody></table><h3 id="1-kernel版本信息"><a href="#1-kernel版本信息" class="headerlink" title="1.kernel版本信息"></a>1.kernel版本信息</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>CentOS1 ~]# cat /etc/redhat-release CentOS Linux release <span class="hljs-number">7.7</span><span class="hljs-number">.1908</span> (Core)[<span class="hljs-symbol">root@</span>CentOS1 ~]# uname -r<span class="hljs-number">3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-1062.</span>el7.x86_64</code></pre><h3 id="2-配置离线lustre-安装包安装源"><a href="#2-配置离线lustre-安装包安装源" class="headerlink" title="2.配置离线lustre 安装包安装源"></a>2.配置离线lustre 安装包安装源</h3><pre><code class="hljs cs"><span class="hljs-comment">// lustre-2.13.0 内核刚好匹配 kernel 3.10.0-1062.el7.x86_64</span>[<span class="hljs-meta">root@CentOS1 lustre</span>]<span class="hljs-meta"># pwd</span>/root/lustre[<span class="hljs-meta">root@CentOS1 lustre</span>]<span class="hljs-meta"># ls</span>repo.conf[<span class="hljs-meta">root@CentOS1 lustre</span>]<span class="hljs-meta"># cat repo.conf </span>[<span class="hljs-meta">lustre-server</span>]name=lustre-serverbaseurl=https:<span class="hljs-comment">//downloads.whamcloud.com/public/lustre/lustre-2.13.0/el7.7.1908/server</span>gpgcheck=<span class="hljs-number">0</span>[<span class="hljs-meta">patchless-ldiskfs-server</span>]name=patchless-ldiskfs-serverbaseurl=https:<span class="hljs-comment">//downloads.whamcloud.com/public/lustre/lustre-2.13.0/el7.7.1908/patchless-ldiskfs-server</span>gpgcheck=<span class="hljs-number">0</span>[<span class="hljs-meta">lustre-client</span>]name=lustre-clientbaseurl=https:<span class="hljs-comment">//downloads.whamcloud.com/public/lustre/lustre-2.13.0/el7.7.1908/client</span>gpgcheck=<span class="hljs-number">0</span>[<span class="hljs-meta">e2fsprogs-wc</span>]name=e2fsprogs-wcbaseurl=https:<span class="hljs-comment">//downloads.whamcloud.com/public/e2fsprogs/latest/el7</span>gpgcheck=<span class="hljs-number">0</span></code></pre><h3 id="3-下载lustre安装包到本地"><a href="#3-下载lustre安装包到本地" class="headerlink" title="3.下载lustre安装包到本地"></a>3.下载lustre安装包到本地</h3><pre><code class="hljs livescript">[root@CentOS1 ~]<span class="hljs-comment"># cd ~/lustre</span>[root@CentOS1 ~]<span class="hljs-comment"># yum groupinstall “Development Tools” -y</span>[root@CentOS1 ~]<span class="hljs-comment"># yum install epel-release quilt libselinux-devel python-docutils xmlto asciidoc elfutils-libelf-devel elfutils-devel zlib-devel rng-tools binutils-devel python-devel sg3_utils newt-devel perl-ExtUtils-Embed audit-libs-devel lsof hmaccalc -y</span>[root@CentOS1 ~]<span class="hljs-comment"># systemctl stop firewalld.service</span>[root@CentOS1 ~]<span class="hljs-comment"># systemctl disable firewalld.service</span>[root@CentOS1 ~]<span class="hljs-comment"># yum install  yum-utils dkms-y</span>[root@CentOS1 ~]<span class="hljs-comment"># reposync -c lustre-repo.conf -n \</span>-r lustre-server <span class="hljs-string">\</span>-r lustre-client <span class="hljs-string">\</span>-r patchless-ldiskfs-server <span class="hljs-string">\</span>-r e2fsprogs-wc[root@CentOS1 ~]<span class="hljs-comment"># cp ~/lustre/repo.conf /etc/yum.repos.d/lustre.repo</span></code></pre><h3 id="4-安装lustre版本kernel"><a href="#4-安装lustre版本kernel" class="headerlink" title="4.安装lustre版本kernel"></a>4.安装lustre版本kernel</h3><pre><code class="hljs angelscript"><span class="hljs-comment">//after download all lustre package</span>[<span class="hljs-symbol">root@</span>CentOS1 lustre]# lse2fsprogs-wc  lustre-client  lustre-server  patchless-ldiskfs-server  repo.conf[<span class="hljs-symbol">root@</span>CentOS1 lustre]# cd e2fsprogs-wc/RPMS/x86_64/ &amp;&amp; pwd/root/lustre/e2fsprogs-wc/RPMS/x86_64 &amp;&amp; yum --nogpgcheck --disablerepo=* --enablerepo=e2fsprogs-wc install  e2fsprogs<span class="hljs-number">-1.45</span><span class="hljs-number">.2</span>.wc1<span class="hljs-number">-0.</span>el7.x86_64.rpm [<span class="hljs-symbol">root@</span>CentOS1 lustre]# cd lustre-server/RPMS/x86_64/ &amp;&amp; pwd /root/lustre/lustre-server/RPMS/x86_64yum --nogpgcheck --disablerepo=* --enablerepo=e2fsprogs-wc install  e2fsprogs<span class="hljs-number">-1.45</span><span class="hljs-number">.2</span>.wc1<span class="hljs-number">-0.</span>el7.x86_64.rpmyum --nogpgcheck --disablerepo=* --enablerepo=lustre-server install  kernel-devel<span class="hljs-number">-3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-1062.1</span><span class="hljs-number">.1</span>.el7_lustre.x86_64.rpm  kernel-headers<span class="hljs-number">-3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-1062.1</span><span class="hljs-number">.1</span>.el7_lustre.x86_64.rpm [<span class="hljs-symbol">root@</span>CentOS1 ~] reboot</code></pre><h3 id="5-安装zfs"><a href="#5-安装zfs" class="headerlink" title="5.安装zfs"></a>5.安装zfs</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>CentOS1 lustre]# cd lustre-server/RPMS/x86_64/ &amp;&amp; pwd /root/lustre/lustre-server/RPMS/x86_64[<span class="hljs-symbol">root@</span>CentOS1 x86_64]# yum --nogpgcheck --disablerepo=* --enablerepo=lustre-server install zfs<span class="hljs-number">-0.7</span><span class="hljs-number">.13</span><span class="hljs-number">-1.</span>el7.x86_64.rpm  zfs-dkms<span class="hljs-number">-0.7</span><span class="hljs-number">.13</span><span class="hljs-number">-1.</span>el7.noarch.rpm  zfs-dracut<span class="hljs-number">-0.7</span><span class="hljs-number">.13</span><span class="hljs-number">-1.</span>el7.x86_64.rpm[<span class="hljs-symbol">root@</span>CentOS1 x86_64]# reboot[<span class="hljs-symbol">root@</span>CentOS1 x86_64]# modprobe  zfs[<span class="hljs-symbol">root@</span>CentOS1 x86_64]# lsmod  |grep zfszfs                  <span class="hljs-number">3564425</span>  <span class="hljs-number">3</span> zunicode              <span class="hljs-number">331170</span>  <span class="hljs-number">1</span> zfszavl                   <span class="hljs-number">15236</span>  <span class="hljs-number">1</span> zfsicp                   <span class="hljs-number">270148</span>  <span class="hljs-number">1</span> zfszcommon                <span class="hljs-number">73440</span>  <span class="hljs-number">1</span> zfsznvpair                <span class="hljs-number">89131</span>  <span class="hljs-number">2</span> zfs,zcommonspl                   <span class="hljs-number">102412</span>  <span class="hljs-number">4</span> icp,zfs,zcommon,znvpair</code></pre><h3 id="6-安装lustre-server-核心包"><a href="#6-安装lustre-server-核心包" class="headerlink" title="6.安装lustre server 核心包"></a>6.安装lustre server 核心包</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>CentOS1 ~] yum --nogpgcheck --disablerepo=*  --enablerepo=lustre-server install kmod-lustre<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm kmod-lustre-osd-ldiskfs<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm lustre<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm lustre-osd-ldiskfs-mount<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm lustre-osd-zfs-mount<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm lustre-resource-agents<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm[<span class="hljs-symbol">root@</span>CentOS1 ~]# reboot[<span class="hljs-symbol">root@</span>CentOS1 ~]# modprobe  lustre[<span class="hljs-symbol">root@</span>CentOS1 ~]# lsmod  |grep lustrelustre                <span class="hljs-number">875887</span>  <span class="hljs-number">0</span> lmv                   <span class="hljs-number">191957</span>  <span class="hljs-number">1</span> lustremdc                   <span class="hljs-number">247683</span>  <span class="hljs-number">1</span> lustrelov                   <span class="hljs-number">320485</span>  <span class="hljs-number">1</span> lustreptlrpc               <span class="hljs-number">2287996</span>  <span class="hljs-number">7</span> fid,fld,lmv,mdc,lov,osc,lustreobdclass             <span class="hljs-number">2649116</span>  <span class="hljs-number">8</span> fid,fld,lmv,mdc,lov,osc,lustre,ptlrpclnet                  <span class="hljs-number">595547</span>  <span class="hljs-number">6</span> lmv,osc,lustre,obdclass,ptlrpc,ksocklndlibcfs                <span class="hljs-number">388506</span>  <span class="hljs-number">11</span> fid,fld,lmv,mdc,lov,osc,lnet,lustre,obdclass,ptlrpc,ksocklnd[<span class="hljs-symbol">root@</span>CentOS1 ~]# modprobe  lnet[<span class="hljs-symbol">root@</span>CentOS1 ~]# lsmod  |grep lnetlnet                  <span class="hljs-number">595547</span>  <span class="hljs-number">6</span> lmv,osc,lustre,obdclass,ptlrpc,ksocklndlibcfs                <span class="hljs-number">388506</span>  <span class="hljs-number">11</span> fid,fld,lmv,mdc,lov,osc,lnet,lustre,obdclass,ptlrpc,ksocklnd</code></pre><h3 id="7-安装lustre-client核心包-客户端节点"><a href="#7-安装lustre-client核心包-客户端节点" class="headerlink" title="7.安装lustre client核心包(客户端节点)"></a>7.安装lustre client核心包(客户端节点)</h3><pre><code class="hljs angelscript"><span class="hljs-comment">//lustre server和lustre client版本版本冲突，客户端必须在其他节点安装</span>[<span class="hljs-symbol">root@</span>CentOS3 ~]# yum install epel-release -y[<span class="hljs-symbol">root@</span>CentOS3 ~]# yum install dkms -y[<span class="hljs-symbol">root@</span>CentOS3 ~]# cd lustre/[<span class="hljs-symbol">root@</span>CentOS3 lustre]# cd lustre-client/RPMS/x86_64/[<span class="hljs-symbol">root@</span>CentOS3 x86_64]# lskmod-lustre-client<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm        lustre-client-debuginfo<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm  lustre-iokit<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpmkmod-lustre-client-tests<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm  lustre-client-dkms<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.noarch.rpmlustre-client<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm             lustre-client-tests<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm[<span class="hljs-symbol">root@</span>CentOS3 x86_64]# yum --nogpgcheck --disablerepo=*  --enablerepo=lustre-client install  kmod-lustre-client<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm  lustre-client<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.x86_64.rpm  lustre-client-dkms<span class="hljs-number">-2.13</span><span class="hljs-number">.0</span><span class="hljs-number">-1.</span>el7.noarch.rpm</code></pre><h3 id="8-deploy-msg-mst"><a href="#8-deploy-msg-mst" class="headerlink" title="8.deploy msg/mst"></a>8.deploy msg/mst</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>CentOS1 ~]# fdisk -l|grep sdDisk /dev/sda: <span class="hljs-number">68.7</span> GB, <span class="hljs-number">68719476736</span> bytes, <span class="hljs-number">134217728</span> sectors/dev/sda1   *        <span class="hljs-number">2048</span>     <span class="hljs-number">2099199</span>     <span class="hljs-number">1048576</span>   <span class="hljs-number">83</span>  Linux/dev/sda2         <span class="hljs-number">2099200</span>   <span class="hljs-number">134217727</span>    <span class="hljs-number">66059264</span>   <span class="hljs-number">8</span>e  Linux LVMDisk /dev/sdc: <span class="hljs-number">25.8</span> GB, <span class="hljs-number">25769803776</span> bytes, <span class="hljs-number">50331648</span> sectorsDisk /dev/sdb: <span class="hljs-number">25.8</span> GB, <span class="hljs-number">25769803776</span> bytes, <span class="hljs-number">50331648</span> sectors[<span class="hljs-symbol">root@</span>CentOS1 ~]# mkfs.lustre --mgs  /dev/sdb[<span class="hljs-symbol">root@</span>CentOS1 ~]# mkdir /mgt[<span class="hljs-symbol">root@</span>CentOS1 ~]# mount.lustre  /dev/sdb /mgt/[<span class="hljs-symbol">root@</span>CentOS1 ~]# df -hFilesystem               Size  Used Avail Use% Mounted ondevtmpfs                 <span class="hljs-number">905</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">905</span>M   <span class="hljs-number">0</span>% /devtmpfs                    <span class="hljs-number">917</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">917</span>M   <span class="hljs-number">0</span>% /dev/shmtmpfs                    <span class="hljs-number">917</span>M  <span class="hljs-number">9.0</span>M  <span class="hljs-number">908</span>M   <span class="hljs-number">1</span>% /runtmpfs                    <span class="hljs-number">917</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">917</span>M   <span class="hljs-number">0</span>% /sys/fs/cgroup/dev/mapper/centos-root   <span class="hljs-number">41</span>G  <span class="hljs-number">2.9</span>G   <span class="hljs-number">39</span>G   <span class="hljs-number">7</span>% //dev/sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">193</span>M  <span class="hljs-number">822</span>M  <span class="hljs-number">20</span>% /boot/dev/mapper/centos-home   <span class="hljs-number">20</span>G   <span class="hljs-number">33</span>M   <span class="hljs-number">20</span>G   <span class="hljs-number">1</span>% /hometmpfs                    <span class="hljs-number">184</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">184</span>M   <span class="hljs-number">0</span>% /run/user/<span class="hljs-number">0</span>/dev/sdb                  <span class="hljs-number">24</span>G   <span class="hljs-number">46</span>M   <span class="hljs-number">23</span>G   <span class="hljs-number">1</span>% /mgt</code></pre><h3 id="9-deploy-mds-mdt"><a href="#9-deploy-mds-mdt" class="headerlink" title="9.deploy mds/mdt"></a>9.deploy mds/mdt</h3><pre><code class="hljs angelscript"><span class="hljs-comment">//mkfs.lustre --fsname=lustrefs --mgsnode=msg_node@tcp0  --mdt --index=0 /dev/sdc</span>[<span class="hljs-symbol">root@</span>CentOS1 ~]# mkfs.lustre --fsname=lustrefs --mgsnode=<span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcp0  --mdt --index=<span class="hljs-number">0</span> /dev/sdc   Permanent disk data:Target:     lustrefs:MDT0000Index:      <span class="hljs-number">0</span>Lustre FS:  lustrefsMount type: ldiskfsFlags:      <span class="hljs-number">0x61</span>              (MDT first_time update )Persistent mount opts: user_xattr,errors=remount-roParameters: mgsnode=<span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcpchecking <span class="hljs-keyword">for</span> existing Lustre data: <span class="hljs-keyword">not</span> founddevice size = <span class="hljs-number">24576</span>MBformatting backing filesystem ldiskfs on /dev/sdc        target name   lustrefs:MDT0000        kilobytes     <span class="hljs-number">25165824</span>        options        -J size=<span class="hljs-number">983</span> -I <span class="hljs-number">1024</span> -i <span class="hljs-number">2560</span> -q -O dirdata,uninit_bg,^extents,dir_nlink,quota,huge_file,ea_inode,flex_bg -E lazy_journal_init -Fmkfs_cmd = mke2fs -j -b <span class="hljs-number">4096</span> -L lustrefs:MDT0000  -J size=<span class="hljs-number">983</span> -I <span class="hljs-number">1024</span> -i <span class="hljs-number">2560</span> -q -O dirdata,uninit_bg,^extents,dir_nlink,quota,huge_file,ea_inode,flex_bg -E lazy_journal_init -F /dev/sdc <span class="hljs-number">25165824</span>kWriting CONFIGS/mountdata[<span class="hljs-symbol">root@</span>CentOS1 ~]# mkdir /mdt[<span class="hljs-symbol">root@</span>CentOS1 ~]# mount.lustre /dev/sdc  /mdt</code></pre><h3 id="10-deploy-oss-ost"><a href="#10-deploy-oss-ost" class="headerlink" title="10.deploy oss/ost"></a>10.deploy oss/ost</h3><pre><code class="hljs angelscript"><span class="hljs-comment">//mkfs.lustre --ost --fsname=lustrefs --mgsnode=mgs_node@tcp0 --index=1 /dev/sdb</span>[<span class="hljs-symbol">root@</span>CentOS2 ~]# mkfs.lustre --ost --fsname=lustrefs --mgsnode=<span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcp0 --index=<span class="hljs-number">1</span> /dev/sdb   Permanent disk data:Target:     lustrefs:OST0001Index:      <span class="hljs-number">1</span>Lustre FS:  lustrefsMount type: ldiskfsFlags:      <span class="hljs-number">0x62</span>              (OST first_time update )Persistent mount opts: ,errors=remount-roParameters: mgsnode=<span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcpchecking <span class="hljs-keyword">for</span> existing Lustre data: <span class="hljs-keyword">not</span> founddevice size = <span class="hljs-number">24576</span>MBformatting backing filesystem ldiskfs on /dev/sdb        target name   lustrefs:OST0001        kilobytes     <span class="hljs-number">25165824</span>        options        -J size=<span class="hljs-number">983</span> -I <span class="hljs-number">512</span> -i <span class="hljs-number">69905</span> -q -O extents,uninit_bg,dir_nlink,quota,huge_file,flex_bg -G <span class="hljs-number">256</span> -E resize=<span class="hljs-string">"4290772992"</span>,lazy_journal_init -Fmkfs_cmd = mke2fs -j -b <span class="hljs-number">4096</span> -L lustrefs:OST0001  -J size=<span class="hljs-number">983</span> -I <span class="hljs-number">512</span> -i <span class="hljs-number">69905</span> -q -O extents,uninit_bg,dir_nlink,quota,huge_file,flex_bg -G <span class="hljs-number">256</span> -E resize=<span class="hljs-string">"4290772992"</span>,lazy_journal_init -F /dev/sdb <span class="hljs-number">25165824</span>kWriting CONFIGS/mountdata[<span class="hljs-symbol">root@</span>CentOS2 ~]# mkdir /ost[<span class="hljs-symbol">root@</span>CentOS2 ~]# mount.lustre  /dev/sdb /ost/</code></pre><h3 id="11-mount-on-client-node"><a href="#11-mount-on-client-node" class="headerlink" title="11.mount on client node"></a>11.mount on client node</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>CentOS3 ~]# mkdir /mnt/lustrefs[<span class="hljs-symbol">root@</span>CentOS3 ~]# mount -t lustre <span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcp0:/lustrefs /mnt/lustrefs[<span class="hljs-symbol">root@</span>CentOS3 ~]# df -hFilesystem                 Size  Used Avail Use% Mounted ondevtmpfs                   <span class="hljs-number">906</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">906</span>M   <span class="hljs-number">0</span>% /devtmpfs                      <span class="hljs-number">917</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">917</span>M   <span class="hljs-number">0</span>% /dev/shmtmpfs                      <span class="hljs-number">917</span>M  <span class="hljs-number">9.0</span>M  <span class="hljs-number">908</span>M   <span class="hljs-number">1</span>% /runtmpfs                      <span class="hljs-number">917</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">917</span>M   <span class="hljs-number">0</span>% /sys/fs/cgroup/dev/mapper/centos-root     <span class="hljs-number">41</span>G  <span class="hljs-number">2.8</span>G   <span class="hljs-number">39</span>G   <span class="hljs-number">7</span>% //dev/sda1                 <span class="hljs-number">1014</span>M  <span class="hljs-number">149</span>M  <span class="hljs-number">866</span>M  <span class="hljs-number">15</span>% /boot/dev/mapper/centos-home     <span class="hljs-number">20</span>G   <span class="hljs-number">33</span>M   <span class="hljs-number">20</span>G   <span class="hljs-number">1</span>% /hometmpfs                      <span class="hljs-number">184</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">184</span>M   <span class="hljs-number">0</span>% /run/user/<span class="hljs-number">0</span><span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcp:/lustrefs   <span class="hljs-number">23</span>G   <span class="hljs-number">46</span>M   <span class="hljs-number">22</span>G   <span class="hljs-number">1</span>% /mnt/lustrefs</code></pre><h2 id="chapter-2-lustre-process"><a href="#chapter-2-lustre-process" class="headerlink" title="chapter 2. lustre process"></a>chapter 2. lustre process</h2><pre><code class="hljs angelscript"><span class="hljs-comment">//show luste mgs info</span>[<span class="hljs-symbol">root@</span>CentOS1 ~]# ps -ef|grep mgsroot      <span class="hljs-number">2275</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">29</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mgs_params_noti]root      <span class="hljs-number">2276</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">29</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_mgs_0000]root      <span class="hljs-number">2277</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">29</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_mgs_0001]root      <span class="hljs-number">2278</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">29</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_mgs_0002]root      <span class="hljs-number">2375</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mgs_lustrefs_no]root      <span class="hljs-number">2548</span>  <span class="hljs-number">2105</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">49</span> pts/<span class="hljs-number">0</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> grep --color=<span class="hljs-built_in">auto</span> mgs<span class="hljs-comment">//show lustre mdt process</span>[<span class="hljs-symbol">root@</span>CentOS1 ~]# ps -ef|grep mdtroot      <span class="hljs-number">2357</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt00_000]root      <span class="hljs-number">2358</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt00_001]root      <span class="hljs-number">2359</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span> [mdt00_002]root      <span class="hljs-number">2360</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_rdpg00_000]root      <span class="hljs-number">2361</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_rdpg00_001]root      <span class="hljs-number">2362</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_attr00_000]root      <span class="hljs-number">2363</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_attr00_001]root      <span class="hljs-number">2364</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_out00_000]root      <span class="hljs-number">2365</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_out00_001]root      <span class="hljs-number">2366</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_seqs_0000]root      <span class="hljs-number">2367</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_seqs_0001]root      <span class="hljs-number">2368</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_seqm_0000]root      <span class="hljs-number">2369</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_seqm_0001]root      <span class="hljs-number">2370</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_fld_0000]root      <span class="hljs-number">2371</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_fld_0001]root      <span class="hljs-number">2372</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_io00_000]root      <span class="hljs-number">2373</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_io00_001]root      <span class="hljs-number">2374</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">31</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt_io00_002]root      <span class="hljs-number">2540</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">48</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [mdt00_003]root      <span class="hljs-number">2552</span>  <span class="hljs-number">2105</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">49</span> pts/<span class="hljs-number">0</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> grep --color=<span class="hljs-built_in">auto</span> mdt<span class="hljs-comment">//show ost process</span>[<span class="hljs-symbol">root@</span>CentOS2 ~]# ps -ef|grep ostroot      <span class="hljs-number">1854</span>     <span class="hljs-number">1</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">09</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> /usr/libexec/postfix/master -wpostfix   <span class="hljs-number">1859</span>  <span class="hljs-number">1854</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">09</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> pickup -l -t unix -upostfix   <span class="hljs-number">1860</span>  <span class="hljs-number">1854</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">09</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> qmgr -l -t unix -uroot      <span class="hljs-number">2431</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost00_000]root      <span class="hljs-number">2432</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost00_001]root      <span class="hljs-number">2433</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost00_002]root      <span class="hljs-number">2434</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_create00]root      <span class="hljs-number">2435</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_create00]root      <span class="hljs-number">2436</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_io00_000]root      <span class="hljs-number">2437</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_io00_001]root      <span class="hljs-number">2438</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_io00_002]root      <span class="hljs-number">2439</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_seq00_00]root      <span class="hljs-number">2440</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_seq00_00]root      <span class="hljs-number">2441</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_out00_00]root      <span class="hljs-number">2442</span>     <span class="hljs-number">2</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">47</span> ?        <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> [ll_ost_out00_00]root      <span class="hljs-number">2473</span>  <span class="hljs-number">2111</span>  <span class="hljs-number">0</span> <span class="hljs-number">13</span>:<span class="hljs-number">49</span> pts/<span class="hljs-number">0</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> grep --color=<span class="hljs-built_in">auto</span> ost</code></pre><h2 id="chapter-3-script"><a href="#chapter-3-script" class="headerlink" title="chapter 3.script"></a>chapter 3.script</h2><ul><li>start mgs/mdt</li></ul><pre><code class="hljs jboss-cli">modprobe  zfsmodprobe  lustremodprobe  lnet<span class="hljs-string">//execute</span> on mgs/mdt nodemount.lustre <span class="hljs-string">/dev/sdc</span>  <span class="hljs-string">/mdt</span>mount.lustre  <span class="hljs-string">/dev/sdb</span> <span class="hljs-string">/mgt/</span></code></pre><ul><li>start ost</li></ul><pre><code class="hljs properties"><span class="hljs-attr">modprobe</span>  <span class="hljs-string">zfs</span><span class="hljs-attr">modprobe</span>  <span class="hljs-string">lustre</span><span class="hljs-attr">modprobe</span>  <span class="hljs-string">lnet</span><span class="hljs-meta">mount.lustre</span>  <span class="hljs-string">/dev/sdb /ost/</span></code></pre><ul><li>mount </li></ul><pre><code class="hljs angelscript">mount -t lustre <span class="hljs-number">10.211</span><span class="hljs-number">.55</span><span class="hljs-number">.3</span>@tcp0:/lustrefs /mnt/lustrefs</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs集群glusterd显示Disconnect状态导致集群IO请求变慢</title>
    <link href="/2020/04/21/glusterfs%E9%9B%86%E7%BE%A4glusterd%E6%98%BE%E7%A4%BADisconnect%E7%8A%B6%E6%80%81%E5%AF%BC%E8%87%B4%E9%9B%86%E7%BE%A4IO%E8%AF%B7%E6%B1%82%E5%8F%98%E6%85%A2/"/>
    <url>/2020/04/21/glusterfs%E9%9B%86%E7%BE%A4glusterd%E6%98%BE%E7%A4%BADisconnect%E7%8A%B6%E6%80%81%E5%AF%BC%E8%87%B4%E9%9B%86%E7%BE%A4IO%E8%AF%B7%E6%B1%82%E5%8F%98%E6%85%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="glusterfs集群glusterd显示Disconnect状态导致集群IO请求变慢"><a href="#glusterfs集群glusterd显示Disconnect状态导致集群IO请求变慢" class="headerlink" title="glusterfs集群glusterd显示Disconnect状态导致集群IO请求变慢"></a>glusterfs集群glusterd显示Disconnect状态导致集群IO请求变慢</h3><h4 id="172-25-78-16节点的集群状态"><a href="#172-25-78-16节点的集群状态" class="headerlink" title="172.25.78.16节点的集群状态"></a>172.25.78.16节点的集群状态</h4><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>szdpl1491 ~]# gluster pool listUUID                                    Hostname        Statebde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span>   Disconnected <span class="hljs-number">54f</span>a8ec0<span class="hljs-number">-3617</span><span class="hljs-number">-4</span>c8e<span class="hljs-number">-968</span>a<span class="hljs-number">-7402</span>a80a9017    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.240</span>   Connected <span class="hljs-number">588</span>bb497<span class="hljs-number">-5</span>d9f<span class="hljs-number">-4</span>bcf-b0b1-c9d364afb084    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.241</span>   Connected a8522deb-ee16<span class="hljs-number">-44</span>a3-a800<span class="hljs-number">-9525</span>cb8d64fa    localhost       Connected</code></pre><ul><li>172.25.78.242节点在172.25.78.16的状态明显不对，查看其它的节点242的认证信息</li></ul><h4 id="172-25-78-240节点的集群状态"><a href="#172-25-78-240节点的集群状态" class="headerlink" title="172.25.78.240节点的集群状态"></a>172.25.78.240节点的集群状态</h4>  <pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>szdpl1543 ~]# gluster pool listUUID                                    Hostname        State<span class="hljs-number">588</span>bb497<span class="hljs-number">-5</span>d9f<span class="hljs-number">-4</span>bcf-b0b1-c9d364afb084    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.241</span>   Connected bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span>   Connected a8522deb-ee16<span class="hljs-number">-44</span>a3-a800<span class="hljs-number">-9525</span>cb8d64fa    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.16</span>    Connected <span class="hljs-number">54f</span>a8ec0<span class="hljs-number">-3617</span><span class="hljs-number">-4</span>c8e<span class="hljs-number">-968</span>a<span class="hljs-number">-7402</span>a80a9017    localhost       Connected [<span class="hljs-symbol">root@</span>szdpl1543 ~]# cd /var/lib/glusterd/peers/[<span class="hljs-symbol">root@</span>szdpl1543 peers]# ls<span class="hljs-number">588</span>bb497<span class="hljs-number">-5</span>d9f<span class="hljs-number">-4</span>bcf-b0b1-c9d364afb084  a8522deb-ee16<span class="hljs-number">-44</span>a3-a800<span class="hljs-number">-9525</span>cb8d64fa  bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a[<span class="hljs-symbol">root@</span>szdpl1543 peers]# cat bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a uuid=bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8astate=<span class="hljs-number">3</span>hostname1=<span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span>hostname2=bogon[<span class="hljs-symbol">root@</span>szdpl1543 peers]# vi bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a uuid=bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8astate=<span class="hljs-number">3</span>hostname1=<span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span></code></pre><h4 id="172-25-78-16节点的集群状态-1"><a href="#172-25-78-16节点的集群状态-1" class="headerlink" title="172.25.78.16节点的集群状态"></a>172.25.78.16节点的集群状态</h4>  <pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>szdpl1491 ~]# gluster pool list UUID                                    Hostname        State  bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span>   Disconnected   <span class="hljs-number">54f</span>a8ec0<span class="hljs-number">-3617</span><span class="hljs-number">-4</span>c8e<span class="hljs-number">-968</span>a<span class="hljs-number">-7402</span>a80a9017    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.240</span>   Connected   <span class="hljs-number">588</span>bb497<span class="hljs-number">-5</span>d9f<span class="hljs-number">-4</span>bcf-b0b1-c9d364afb084    <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.241</span>   Connected   a8522deb-ee16<span class="hljs-number">-44</span>a3-a800<span class="hljs-number">-9525</span>cb8d64fa    localhost       Connected[<span class="hljs-symbol">root@</span>szdpl1491 ~]# cd /var/lib/glusterd/peers/[<span class="hljs-symbol">root@</span>szdpl1491 peers]# ls<span class="hljs-number">54f</span>a8ec0<span class="hljs-number">-3617</span><span class="hljs-number">-4</span>c8e<span class="hljs-number">-968</span>a<span class="hljs-number">-7402</span>a80a9017  <span class="hljs-number">588</span>bb497<span class="hljs-number">-5</span>d9f<span class="hljs-number">-4</span>bcf-b0b1-c9d364afb084  bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8a[<span class="hljs-symbol">root@</span>szdpl1491 peers]# cat bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8auuid=bde7b9e2-af2a<span class="hljs-number">-419e-8242</span><span class="hljs-number">-6</span>a8f8e18bb8astate=<span class="hljs-number">3</span>hostname1=bogonhostname2=<span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span></code></pre><ul><li>修改每个节点的var/lib/glusterd/peers/bde7b9e2-af2a-419e-8242-6a8f8e18bb8a 中的hostname1修改为真实的IP，然后重启每个节点的glusterd的服务(systemctl restart glusterd)</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装glusterfs指定版本</title>
    <link href="/2020/04/21/%E5%AE%89%E8%A3%85glusterfs%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC/"/>
    <url>/2020/04/21/%E5%AE%89%E8%A3%85glusterfs%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h4 id="1-glusterfs7-repo源"><a href="#1-glusterfs7-repo源" class="headerlink" title="1.glusterfs7 repo源"></a>1.glusterfs7 repo源</h4><ul><li>添加此源到/etc/yum.repo.d/glusterfs.repo中<pre><code class="hljs ini"><span class="hljs-section">[centos-gluster7]</span><span class="hljs-attr">gpgcheck</span> = <span class="hljs-number">0</span><span class="hljs-attr">mirrorlist</span> = http://mirrorlist.centos.org?arch=<span class="hljs-variable">$basearch</span>&amp;release=<span class="hljs-variable">$releasever</span>&amp;repo=storage-gluster-<span class="hljs-number">7</span><span class="hljs-attr">name</span> = CentOS-<span class="hljs-variable">$releasever</span> - Gluster <span class="hljs-number">7</span><span class="hljs-section">[centos-gluster6]</span><span class="hljs-attr">gpgcheck</span> = <span class="hljs-number">0</span><span class="hljs-attr">mirrorlist</span> = http://mirrorlist.centos.org?arch=<span class="hljs-variable">$basearch</span>&amp;release=<span class="hljs-variable">$releasever</span>&amp;repo=storage-gluster-<span class="hljs-number">6</span><span class="hljs-attr">name</span> = CentOS-<span class="hljs-variable">$releasever</span> - Gluster <span class="hljs-number">6</span></code></pre><h4 id="2-更新系统yum-源"><a href="#2-更新系统yum-源" class="headerlink" title="2.更新系统yum 源"></a>2.更新系统yum 源</h4><pre><code class="hljs pgsql">yum <span class="hljs-keyword">check</span>-<span class="hljs-keyword">update</span></code></pre><h4 id="3-安装脚本-glusterfs-install-sh"><a href="#3-安装脚本-glusterfs-install-sh" class="headerlink" title="3.安装脚本(glusterfs_install.sh)"></a>3.安装脚本(glusterfs_install.sh)</h4></li><li>脚本内容<pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span>version=<span class="hljs-string">"<span class="hljs-variable">$1</span>"</span>[[ <span class="hljs-string">"<span class="hljs-variable">$version</span>"</span> == <span class="hljs-string">""</span> ]] &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">"version not provided"</span> &amp;&amp; <span class="hljs-built_in">exit</span> 1rpm_packages=(glusterfs-serverglusterfs-eventsglusterfs-extra-xlatorsglusterfs-geo-replicationglusterfs-libsglusterfs-rdmaglusterfsglusterfs-apiglusterfs-api-develglusterfs-cliglusterfs-client-xlatorsglusterfs-fusepython2-gluster)<span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;!rpm_packages[@]&#125;</span>; <span class="hljs-keyword">do</span>  rpm_version_packages[<span class="hljs-variable">$index</span>]=<span class="hljs-variable">$&#123;rpm_packages[$index]&#125;</span><span class="hljs-string">"-"</span><span class="hljs-variable">$version</span><span class="hljs-keyword">done</span>yum install -y <span class="hljs-variable">$&#123;rpm_version_packages[*]&#125;</span></code></pre></li><li>脚本执行<pre><code class="hljs angelscript"><span class="hljs-comment">// 7.2是版本号</span>./glusterfs_install.sh <span class="hljs-number">7.2</span></code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Go语言调用C函数例子</title>
    <link href="/2020/04/16/Go%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8C%E5%87%BD%E6%95%B0%E4%BE%8B%E5%AD%90/"/>
    <url>/2020/04/16/Go%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8C%E5%87%BD%E6%95%B0%E4%BE%8B%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<ul><li>go access c struct</li></ul><pre><code class="hljs x86asm">  // go run cgo<span class="hljs-number">.</span>go  package main/*#include &lt;stdlib<span class="hljs-number">.</span>h&gt;#include &lt;string<span class="hljs-number">.</span>h&gt;#include &lt;stdio<span class="hljs-number">.</span>h&gt;#include &lt;assert<span class="hljs-number">.</span>h&gt;typedef struct student &#123;        <span class="hljs-keyword">int</span> age<span class="hljs-comment">;</span>        char *name<span class="hljs-comment">;</span>&#125;student<span class="hljs-comment">;</span>void student_init(void **<span class="hljs-built_in">ptr</span>,char *name,<span class="hljs-keyword">int</span> age) &#123;        size_t len = strlen(name)<span class="hljs-comment">;</span>        student *<span class="hljs-built_in">st</span> = (student *)calloc(<span class="hljs-number">1</span>,sizeof(student))<span class="hljs-comment">;</span>        assert(<span class="hljs-built_in">st</span>!=NULL)<span class="hljs-comment">;</span>        <span class="hljs-built_in">st</span>-&gt;age = age<span class="hljs-comment">;</span>        <span class="hljs-built_in">st</span>-&gt;name = (char *)calloc(<span class="hljs-number">1</span>,len+<span class="hljs-number">1</span>)<span class="hljs-comment">;</span>        memcpy(<span class="hljs-built_in">st</span>-&gt;name,name,len)<span class="hljs-comment">;</span>        *<span class="hljs-built_in">ptr</span> = <span class="hljs-built_in">st</span><span class="hljs-comment">;</span>        fprintf(stdout,<span class="hljs-string">"...call student_init...\n"</span>)<span class="hljs-comment">;</span>&#125;student *student_new(char *name,<span class="hljs-keyword">int</span> age) &#123;        size_t len = strlen(name)<span class="hljs-comment">;</span>        student *<span class="hljs-built_in">st</span> = (student *)calloc(<span class="hljs-number">1</span>,sizeof(student))<span class="hljs-comment">;</span>        assert(<span class="hljs-built_in">st</span>!=NULL)<span class="hljs-comment">;</span>        <span class="hljs-built_in">st</span>-&gt;age = age<span class="hljs-comment">;</span>        <span class="hljs-built_in">st</span>-&gt;name = (char *)calloc(<span class="hljs-number">1</span>,len+<span class="hljs-number">1</span>)<span class="hljs-comment">;</span>        memcpy(<span class="hljs-built_in">st</span>-&gt;name,name,len)<span class="hljs-comment">;</span>        fprintf(stdout,<span class="hljs-string">"...call student_new...\n"</span>)<span class="hljs-comment">;</span>        return <span class="hljs-built_in">st</span><span class="hljs-comment">;</span>&#125;void student_destroy(void *<span class="hljs-built_in">ptr</span>) &#123;        student *<span class="hljs-built_in">st</span> = (student *)<span class="hljs-built_in">ptr</span><span class="hljs-comment">;</span>        if(<span class="hljs-built_in">st</span> !=NULL)        &#123;                free(<span class="hljs-built_in">st</span>-&gt;name)<span class="hljs-comment">;</span>                free(<span class="hljs-built_in">st</span>)<span class="hljs-comment">;</span>                <span class="hljs-built_in">st</span>=NULL<span class="hljs-comment">;</span>                fprintf(stdout,<span class="hljs-string">"...call student_destroy...\n"</span>)<span class="hljs-comment">;</span>        &#125;&#125;void student_print(void  *<span class="hljs-built_in">ptr</span>) &#123;        student *<span class="hljs-built_in">st</span> = (student *)<span class="hljs-built_in">ptr</span><span class="hljs-comment">;</span>        fprintf(stdout,<span class="hljs-string">"student addr=%p,name=%p,age=%p\n"</span>,<span class="hljs-built_in">st</span>,<span class="hljs-built_in">st</span>-&gt;name,&amp;<span class="hljs-built_in">st</span>-&gt;age)<span class="hljs-comment">;</span>        fprintf(stdout,<span class="hljs-string">" student &#123;name=%s,age=%d&#125;\n"</span>,<span class="hljs-built_in">st</span>-&gt;name,<span class="hljs-built_in">st</span>-&gt;age)<span class="hljs-comment">;</span>&#125;*/import <span class="hljs-string">"C"</span>import (        <span class="hljs-string">"fmt"</span>        <span class="hljs-string">"unsafe"</span>)func main() &#123;        var <span class="hljs-built_in">st1</span> unsafe<span class="hljs-number">.</span>Pointer        name := C<span class="hljs-number">.</span>CString(<span class="hljs-string">"perrynzhou"</span>)        C<span class="hljs-number">.</span>student_init(&amp;<span class="hljs-built_in">st1</span>, name, <span class="hljs-number">30</span>)        C<span class="hljs-number">.</span>student_print(<span class="hljs-built_in">st1</span>)        C<span class="hljs-number">.</span>student_destroy(<span class="hljs-built_in">st1</span>)        C<span class="hljs-number">.</span>free(unsafe<span class="hljs-number">.</span>Pointer(name))        var <span class="hljs-built_in">st2</span> *C<span class="hljs-number">.</span>student        name2 := C<span class="hljs-number">.</span>CString(<span class="hljs-string">"hello"</span>)        <span class="hljs-built_in">st2</span> = C<span class="hljs-number">.</span>student_new(name2, <span class="hljs-number">100</span>)        fmt<span class="hljs-number">.</span>Printf(<span class="hljs-string">"init student st2 &#123;age:%d,name:%s&#125;\n"</span>, <span class="hljs-built_in">st2</span><span class="hljs-number">.</span>age, C<span class="hljs-number">.</span>GoString(<span class="hljs-built_in">st2</span><span class="hljs-number">.</span>name))        C<span class="hljs-number">.</span>student_print(unsafe<span class="hljs-number">.</span>Pointer(<span class="hljs-built_in">st2</span>))        C<span class="hljs-number">.</span>free(unsafe<span class="hljs-number">.</span>Pointer(<span class="hljs-built_in">st2</span><span class="hljs-number">.</span>name))        name3 := C<span class="hljs-number">.</span>CString(<span class="hljs-string">"join"</span>)        <span class="hljs-built_in">st2</span><span class="hljs-number">.</span>name = name3        <span class="hljs-built_in">st2</span><span class="hljs-number">.</span>age = <span class="hljs-number">67</span>        fmt<span class="hljs-number">.</span>Printf(<span class="hljs-string">"after change student st2 &#123;age:%d,name:%s&#125;\n"</span>, <span class="hljs-built_in">st2</span><span class="hljs-number">.</span>age, C<span class="hljs-number">.</span>GoString(<span class="hljs-built_in">st2</span><span class="hljs-number">.</span>name))        C<span class="hljs-number">.</span>student_print(unsafe<span class="hljs-number">.</span>Pointer(<span class="hljs-built_in">st2</span>))        C<span class="hljs-number">.</span>student_destroy(unsafe<span class="hljs-number">.</span>Pointer(<span class="hljs-built_in">st2</span>))&#125;</code></pre><p><img src="/2020/04/16/Go%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8C%E5%87%BD%E6%95%B0%E4%BE%8B%E5%AD%90/2582954-7ff22e6700b629e6.png" srcset="/img/loading.gif" alt></p><ul><li>go access c memory<pre><code class="hljs go"><span class="hljs-comment">//    go build  -o cgo_test cgo.go </span><span class="hljs-keyword">package</span> main<span class="hljs-comment">/*</span><span class="hljs-comment"></span><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><span class="hljs-comment"></span><span class="hljs-comment">void *alloc() &#123;</span><span class="hljs-comment">        static int count = 0;</span><span class="hljs-comment">        void *d = malloc(sizeof(int));</span><span class="hljs-comment">        *((int *)d) = count++;</span><span class="hljs-comment">        return d;</span><span class="hljs-comment">&#125;</span><span class="hljs-comment">*/</span><span class="hljs-keyword">import</span> <span class="hljs-string">"C"</span><span class="hljs-keyword">import</span> (        <span class="hljs-string">"fmt"</span>        <span class="hljs-string">"runtime"</span>        <span class="hljs-string">"sync"</span>        <span class="hljs-string">"time"</span>        <span class="hljs-string">"unsafe"</span>)<span class="hljs-keyword">type</span> CStruct <span class="hljs-keyword">struct</span> &#123;        sync.Mutex        name     <span class="hljs-keyword">string</span>        allocCnt <span class="hljs-keyword">int</span>        memory   unsafe.Pointer&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(cs *CStruct)</span> <span class="hljs-title">alloc</span><span class="hljs-params">(name <span class="hljs-keyword">string</span>, id <span class="hljs-keyword">int</span>)</span></span> &#123;        cs.name = fmt.Sprintf(<span class="hljs-string">"CStruct-%s-%d"</span>, name, id)        cs.Lock()        <span class="hljs-keyword">defer</span> cs.Unlock()        cs.allocCnt++        fmt.Printf(<span class="hljs-string">"%s begin with alloc,count=%d\n"</span>, cs.name, cs.allocCnt)        cs.memory = C.alloc()        runtime.SetFinalizer(cs, free)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">free</span><span class="hljs-params">(cs *CStruct)</span></span> &#123;        C.free(unsafe.Pointer(cs.memory))        cs.Lock()        <span class="hljs-keyword">defer</span> cs.Unlock()        cs.allocCnt--        fmt.Printf(<span class="hljs-string">"%s end with free count=%d\n"</span>, cs.name, cs.allocCnt)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">CStructTest</span><span class="hljs-params">(i <span class="hljs-keyword">int</span>)</span></span> &#123;        <span class="hljs-keyword">var</span> c1, c2 CStruct        c1.alloc(<span class="hljs-string">"c1"</span>, i)        c2.alloc(<span class="hljs-string">"c2"</span>, i)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;        <span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++ &#123;                CStructTest(i)                time.Sleep(time.Second)        &#125;        runtime.GC()        time.Sleep(time.Second)        fmt.Println(<span class="hljs-string">"done.."</span>)&#125;</code></pre><img src="/2020/04/16/Go%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8C%E5%87%BD%E6%95%B0%E4%BE%8B%E5%AD%90/2582954-4171fe1cc79448ad.png" srcset="/img/loading.gif" alt></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实现简单的shell</title>
    <link href="/2020/04/16/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84shell/"/>
    <url>/2020/04/16/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84shell/</url>
    
    <content type="html"><![CDATA[<ul><li>shell实现代码<pre><code class="hljs arduino"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: shell.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Thu 20 Jun 2019 09:15:59 PM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;glob.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/types.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *delimiter = <span class="hljs-string">" \t\n"</span>;<span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><span class="hljs-class">&#123;</span>  <span class="hljs-keyword">glob_t</span> gt;  <span class="hljs-keyword">int</span> (*cmd_cd_fn)(<span class="hljs-keyword">char</span> **argv);  <span class="hljs-keyword">int</span> (*cmd_exit_fn)(<span class="hljs-keyword">char</span> **argv);  <span class="hljs-keyword">int</span> (*cmd_help_fn)(<span class="hljs-keyword">char</span> **argv);&#125; <span class="hljs-keyword">cmd_t</span>;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">prompt</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"zsh-0.1$ "</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">parsed_cmd</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *<span class="hljs-built_in">line</span>, <span class="hljs-keyword">cmd_t</span> *cmd)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">char</span> *token;  <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)  &#123;    token = strsep(&amp;<span class="hljs-built_in">line</span>, delimiter);    <span class="hljs-keyword">if</span> (token == <span class="hljs-literal">NULL</span>)    &#123;      <span class="hljs-keyword">break</span>;    &#125;    <span class="hljs-keyword">if</span> (*token == <span class="hljs-string">'\0'</span>)    &#123;      <span class="hljs-keyword">continue</span>;    &#125;    glob(token, GLOB_NOCHECK | GLOB_APPEND * flag, <span class="hljs-literal">NULL</span>, &amp;cmd-&gt;gt);    flag = <span class="hljs-number">1</span>;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> *argv[])</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">char</span> *<span class="hljs-built_in">line</span> = <span class="hljs-literal">NULL</span>;  <span class="hljs-keyword">size_t</span> line_size = <span class="hljs-number">0</span>;  <span class="hljs-keyword">cmd_t</span> cmd;  <span class="hljs-keyword">pid_t</span> pid;  <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)  &#123;    prompt();    <span class="hljs-keyword">if</span> (getline(&amp;<span class="hljs-built_in">line</span>, &amp;line_size, <span class="hljs-built_in">stdin</span>) &lt; <span class="hljs-number">0</span>)    &#123;      <span class="hljs-keyword">break</span>;    &#125;    parsed_cmd(<span class="hljs-built_in">line</span>, &amp;cmd);    pid = fork();    <span class="hljs-keyword">switch</span> (pid)    &#123;    <span class="hljs-keyword">case</span> <span class="hljs-number">-1</span>:      perror(<span class="hljs-string">"fork()"</span>);      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);    <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:      execvp(cmd.gt.gl_pathv[<span class="hljs-number">0</span>], cmd.gt.gl_pathv);      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);    <span class="hljs-keyword">default</span>:      wait(<span class="hljs-literal">NULL</span>);    &#125;  &#125;&#125;</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于CPU字节序的理解</title>
    <link href="/2020/04/16/%E5%85%B3%E4%BA%8ECPU%E5%AD%97%E8%8A%82%E5%BA%8F%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <url>/2020/04/16/%E5%85%B3%E4%BA%8ECPU%E5%AD%97%E8%8A%82%E5%BA%8F%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么会有字节序这一说法"><a href="#为什么会有字节序这一说法" class="headerlink" title="为什么会有字节序这一说法"></a>为什么会有字节序这一说法</h2><ul><li>对于单字节处理器不存在字节序，对于大于1个字节的位数的CPU，其寄存器的宽度也大于1个字节，所以存储字节排序的问题</li></ul><h2 id="大端字节序排序"><a href="#大端字节序排序" class="headerlink" title="大端字节序排序"></a>大端字节序排序</h2><ul><li>大端：高字节位在低地址存储，低字节位在高地址存储</li><li>小端: 高字节位存储在高地址，低字节位存储在低地址<pre><code class="hljs angelscript"> 例如 <span class="hljs-built_in">int</span>  x = <span class="hljs-number">0x0001</span>,假设是在<span class="hljs-number">64</span>位的CPU上，它的地址空间为：<span class="hljs-number">0xff13</span>,其字节排序可能有两种可能：  oxff13: <span class="hljs-number">0</span>  <span class="hljs-number">0</span>  <span class="hljs-number">0</span>  <span class="hljs-number">1</span>   ---&gt;第一种情况 大端  <span class="hljs-number">0xff13</span>: <span class="hljs-number">1</span>  <span class="hljs-number">0</span>  <span class="hljs-number">0</span>  <span class="hljs-number">0</span>   ---&gt;第二种情况 小端在x这个值中<span class="hljs-number">0001</span>从左往右是高字节位到低字节位，也就是 <span class="hljs-number">0</span>,<span class="hljs-number">0</span> 是高字节，<span class="hljs-number">0</span> <span class="hljs-number">1</span> 是低字节位。</code></pre><h2 id="如何验证CPU的字节序呢？"><a href="#如何验证CPU的字节序呢？" class="headerlink" title="如何验证CPU的字节序呢？"></a>如何验证CPU的字节序呢？</h2></li><li>C语言中有union结构，这个结构的数据存储是从低地址向高地址依次存储值，可以通过这个特性来验证CPU的字节序<pre><code class="hljs dart"><span class="hljs-comment"><span class="markdown">/<span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-emphasis">***</span></span></span><span class="hljs-comment"><span class="markdown">  &gt; File Name: byte_order.c</span></span><span class="hljs-comment"><span class="markdown">  &gt; Author:perrynzhou </span></span><span class="hljs-comment"><span class="markdown">  &gt; Mail:perrynzhou@gmail.com </span></span><span class="hljs-comment"><span class="markdown">  &gt; Created Time: Fri 15 Nov 2019 03:42:37 PM CST</span></span><span class="hljs-comment"><span class="markdown"> <span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span>**/</span></span>#include &lt;stdio.h&gt;<span class="hljs-keyword">typedef</span> union object_t &#123;    <span class="hljs-built_in">int</span> a;    char b;&#125; object;<span class="hljs-keyword">enum</span>&#123;    big_endian_type = <span class="hljs-number">0</span>,    small_endian_type,&#125;;<span class="hljs-built_in">int</span> checkCpu(object *obj)&#123;    <span class="hljs-keyword">return</span> obj-&gt;b == <span class="hljs-number">1</span> ? small_endian_type : big_endian_type;&#125;<span class="hljs-built_in">int</span> main()&#123;    <span class="hljs-built_in">int</span> v = <span class="hljs-number">0x0001</span>;    object obj;    obj.a = v;    fprintf(stdout, <span class="hljs-string">"value:%d,value_string:%s,object address:%p\n"</span>, v, <span class="hljs-string">"0x0001"</span>, &amp;obj);    <span class="hljs-keyword">if</span> (checkCpu(&amp;obj) == big_endian_type)    &#123;        fprintf(stdout, <span class="hljs-string">"store plan: |%d|%d|%d|%d|,big endian\n"</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);    &#125;    <span class="hljs-keyword">else</span>    &#123;        fprintf(stdout, <span class="hljs-string">"store plan: |%d|%d|%d|%d|,small endian\n"</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><pre><code class="hljs groovy">[perrynzhou<span class="hljs-meta">@localhost</span> <span class="hljs-regexp">~/Source/</span>vivo<span class="hljs-regexp">/linux_kernel_study/</span>chapter_01]$ ./test <span class="hljs-string">value:</span><span class="hljs-number">1</span>,<span class="hljs-string">value_string:</span><span class="hljs-number">0x0001</span>,object <span class="hljs-string">address:</span><span class="hljs-number">0x7ffcaf058a08</span>store <span class="hljs-string">plan:</span> |<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">1</span>|,big endian[perrynzhou<span class="hljs-meta">@localhost</span> <span class="hljs-regexp">~/Source/</span>vivo<span class="hljs-regexp">/linux_kernel_study/</span>chapter_01]$</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs参数说明</title>
    <link href="/2020/04/16/glusterfs%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/"/>
    <url>/2020/04/16/glusterfs%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="选项说明"><a href="#选项说明" class="headerlink" title="选项说明"></a>选项说明</h2><pre><code class="hljs dockerfile">$ gluster <span class="hljs-keyword">volume</span><span class="bash"> <span class="hljs-built_in">set</span> <span class="hljs-built_in">help</span></span></code></pre><table><thead><tr><th align="left">选项</th><th align="center">默认值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">changelog.changelog-barrier-timeout</td><td align="center">120</td><td align="left">After ‘timeout’ seconds since the time ‘barrier’ option was set to “on”, unlink/rmdir/rename operations are no longer blocked and previously blocked fops are allowed to go through</td></tr><tr><td align="left">cluster.enable-shared-storage</td><td align="center">disable</td><td align="left">Create and mount the shared storage volume(gluster_shared_storage) at /var/run/gluster/shared_storage on enabling this option. Unmount and delete the shared storage volume on disabling this option.</td></tr><tr><td align="left">cluster.write-freq-threshold</td><td align="center">0</td><td align="left">Defines the number of writes, in a promotion/demotion cycle, that would mark a file HOT for promotion. Any file that has write hits less than this value will be considered as COLD and will be demoted.</td></tr><tr><td align="left">cluster.read-freq-threshold</td><td align="center">0</td><td align="left">Defines the number of reads, in a promotion/demotion cycle, that would mark a file HOT for promotion. Any file that has read hits less than this value will be considered as COLD and will be demoted.</td></tr><tr><td align="left">cluster.tier-pause</td><td align="center">off</td><td align="left">(null)</td></tr><tr><td align="left">cluster.tier-promote-frequency</td><td align="center">120</td><td align="left">Frequency to promote files to fast tier</td></tr><tr><td align="left">cluster.tier-demote-frequency</td><td align="center">120</td><td align="left">Frequency to demote files to slow tier</td></tr><tr><td align="left">cluster.watermark-hi</td><td align="center">90</td><td align="left">Upper % watermark for promotion. If hot tier fills above this percentage, no promotion will happen and demotion will happen with high probability.</td></tr><tr><td align="left">cluster.watermark-low</td><td align="center">75</td><td align="left">Lower % watermark. If hot tier is less full than this, promotion will happen and demotion will not happen. If greater than this, promotion/demotion will happen at a probability relative to how full the hot tier is.</td></tr><tr><td align="left">cluster.tier-mode</td><td align="center">cache</td><td align="left">Either ‘test’ or ‘cache’. Test mode periodically demotes or promotes files automatically based on access. Cache mode does so based on whether the cache is full or not, as specified with watermarks.</td></tr><tr><td align="left">cluster.tier-max-mb</td><td align="center">10000</td><td align="left">The maximum number of MB that may be migrated in any direction in a given cycle by a single node.</td></tr><tr><td align="left">cluster.tier-max-files</td><td align="center">50000</td><td align="left">The maximum number of files that may be migrated in any direction in a given cycle by a single node.</td></tr><tr><td align="left">cluster.lookup-unhashed</td><td align="center">on</td><td align="left">This option if set to ON, does a lookup through all the sub-volumes, in case a lookup didn’t return any result from the hash subvolume. If set to OFF, it does not do a lookup on the remaining subvolumes.</td></tr><tr><td align="left">cluster.lookup-optimize</td><td align="center">off</td><td align="left">This option if set to ON enables the optimization of -ve lookups, by not doing a lookup on non-hashed subvolumes for files, in case the hashed subvolume does not return any result. This option disregards the lookup-unhashed setting, when enabled.</td></tr><tr><td align="left">cluster.min-free-disk</td><td align="center">10%</td><td align="left">Percentage/Size of disk space, after which the process starts balancing out the cluster, and logs will appear in log files</td></tr><tr><td align="left">cluster.min-free-inodes</td><td align="center">5%</td><td align="left">after system has only N% of inodes, warnings starts to appear in log files</td></tr><tr><td align="left">cluster.rebalance-stats</td><td align="center">off</td><td align="left">This option if set to ON displays and logs the time taken for migration of each file, during the rebalance process. If set to OFF, the rebalance logs will only display the time spent in each directory.</td></tr><tr><td align="left">cluster.subvols-per-directory</td><td align="center">null</td><td align="left">Specifies the directory layout spread. Takes number of subvolumes as default value.</td></tr><tr><td align="left">cluster.readdir-optimize</td><td align="center">off</td><td align="left">This option if set to ON enables the optimization that allows DHT to requests non-first subvolumes to filter out directory entries.</td></tr><tr><td align="left">cluster.rebal-throttle</td><td align="center">normal</td><td align="left">Sets the maximum number of parallel file migrations allowed on a node during the rebalance operation. The default value is normal and allows a max of [($(processing units) - 4) / 2), 2] files to be migrated at a time. Lazy will allow only one file to be migrated at a time and aggressive will allow max of [($(processing units) - 4) / 2), 4]</td></tr><tr><td align="left">cluster.weighted-rebalance</td><td align="center">on</td><td align="left">When enabled, files will be allocated to bricks with a probability proportional to their size. Otherwise, all bricks will have the same probability (legacy behavior).</td></tr><tr><td align="left">cluster.entry-change-log</td><td align="center">on</td><td align="left">Entry fops like create/unlink will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.read-subvolume</td><td align="center">null</td><td align="left">inode-read fops happen only on one of the bricks in replicate. Afr will prefer the one specified using this option if it is not stale. Option value must be one of the xlator names of the children. Ex: -client-0 till -client-&lt;number-of-bricks - 1&gt;</td></tr><tr><td align="left">cluster.read-subvolume-index</td><td align="center">-1</td><td align="left">inode-read fops happen only on one of the bricks in replicate. AFR will prefer the one specified using this option if it is not stale. allowed options include -1 till replica-count - 1</td></tr><tr><td align="left">cluster.read-hash-mode</td><td align="center">1</td><td align="left">inode-read fops happen only on one of the bricks in replicate. AFR will prefer the one computed using the method specified using this option0 = first up server, 1 = hash by GFID of file (all clients use same subvolume), 2 = hash by GFID of file and client PID</td></tr><tr><td align="left">cluster.background-self-heal-count</td><td align="center">16</td><td align="left">This specifies the number of self-heals that can be performed in background without blocking the fop</td></tr><tr><td align="left">cluster.metadata-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable metadata i.e. Permissions, ownerships, xattrs self-heal on the file/directory.</td></tr><tr><td align="left">cluster.data-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable data self-heal on the file. “open” means data self-heal action will only be triggered by file open operations.</td></tr><tr><td align="left">cluster.entry-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable entry self-heal on the directory.</td></tr><tr><td align="left">cluster.self-heal-daemon</td><td align="center">on</td><td align="left">This option applies to only self-heal-daemon. Index directory crawl and automatic healing of files will not be performed if this option is turned off.</td></tr><tr><td align="left">cluster.heal-timeout</td><td align="center">600</td><td align="left">time interval for checking the need to self-heal in self-heal-daemon</td></tr><tr><td align="left">cluster.self-heal-window-size</td><td align="center">1</td><td align="left">Maximum number blocks per file for which self-heal process would be applied simultaneously.</td></tr><tr><td align="left">cluster.data-change-log</td><td align="center">on</td><td align="left">Data fops like write/truncate will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.metadata-change-log</td><td align="center">on</td><td align="left">Metadata fops like setattr/setxattr will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.data-self-heal-algorithm</td><td align="center">null</td><td align="left">Select between “full”, “diff”. The “full” algorithm copies the entire file from source to sink. The “diff” algorithm copies to sink only those blocks whose checksums don’t match with those of source. If no option is configured the option is chosen dynamically as follows: If the file does not exist on one of the sinks or empty file exists or if the source file size is about the same as page size the entire file will be read and written i.e “full” algo, otherwise “diff” algo is chosen.</td></tr><tr><td align="left">cluster.eager-lock</td><td align="center">on</td><td align="left">Lock phase of a transaction has two sub-phases. First is an attempt to acquire locks in parallel by broadcasting non-blocking lock requests. If lock acquisition fails on any server, then the held locks are unlocked and revert to a blocking locked mode sequentially on one server after another. If this option is enabled the initial broadcasting lock request attempt to acquire lock on the entire file. If this fails, we revert back to the sequential “regional” blocking lock as before. In the case where such an “eager” lock is granted in the non-blocking phase, it gives rise to an opportunity for optimization. i.e, if the next write transaction on the same FD arrives before the unlock phase of the first transaction, it “takes over” the full file lock. Similarly if yet another data transaction arrives before the unlock phase of the “optimized” transaction, that in turn “takes over” the lock as well. The actual unlock now happens at the end of the last “optimized” transaction.</td></tr><tr><td align="left">cluster.quorum-type</td><td align="center">none</td><td align="left">If value is “fixed” only allow writes if quorum-count bricks are present. If value is “auto” only allow writes if more than half of bricks, or exactly half including the first, are present.</td></tr><tr><td align="left">cluster.quorum-count</td><td align="center">null</td><td align="left">If quorum-type is “fixed” only allow writes if this many bricks or present. Other quorum types will OVERWRITE this value.</td></tr><tr><td align="left">cluster.choose-local</td><td align="center">true</td><td align="left">Choose a local subvolume (i.e. Brick) to read from if read-subvolume is not explicitly set.</td></tr><tr><td align="left">cluster.self-heal-readdir-size</td><td align="center">1KB</td><td align="left">readdirp size for performing entry self-heal</td></tr><tr><td align="left">cluster.ensure-durability</td><td align="center">on</td><td align="left">Afr performs fsyncs for transactions if this option is on to make sure the changelogs/data is written to the disk</td></tr><tr><td align="left">cluster.consistent-metadata</td><td align="center">no</td><td align="left">If this option is enabled, readdirp will force lookups on those entries read whose read child is not the same as that of the parent. This will guarantee that all read operations on a file serve attributes from the same subvol as long as it holds a good copy of the file/dir.</td></tr><tr><td align="left">cluster.stripe-block-size</td><td align="center">128KB</td><td align="left">Size of the stripe unit that would be read from or written to the striped servers.</td></tr><tr><td align="left">cluster.stripe-coalesce</td><td align="center">true</td><td align="left">Enable/Disable coalesce mode to flatten striped files as stored on the server (i.e., eliminate holes caused by the traditional format).</td></tr><tr><td align="left">cluster.server-quorum-type</td><td align="center">(null)</td><td align="left">This feature is on the server-side i.e. in glusterd. Whenever the glusterd on a machine observes that the quorum is not met, it brings down the bricks to prevent data split-brains. When the network connections are brought back up and the quorum is restored the bricks in the volume are brought back up.</td></tr><tr><td align="left">cluster.server-quorum-ratio</td><td align="center">(null)</td><td align="left">Sets the quorum percentage for the trusted storage pool.</td></tr><tr><td align="left">cluster.quorum-reads</td><td align="center">no</td><td align="left">If quorum-reads is “true” only allow reads if quorum is met when quorum is enabled.</td></tr><tr><td align="left">diagnostics.latency-measurement</td><td align="center">off</td><td align="left">If on stats related to the latency of each operation would be tracked inside GlusterFS data-structures.</td></tr><tr><td align="left">diagnostics.dump-fd-stats</td><td align="center">off</td><td align="left">If on stats related to file-operations would be tracked inside GlusterFS data-structures.</td></tr><tr><td align="left">diagnostics.brick-log-level</td><td align="center">INFO</td><td align="left">Changes the log-level of the bricks</td></tr><tr><td align="left">diagnostics.client-log-level</td><td align="center">INFO</td><td align="left">Changes the log-level of the clients</td></tr><tr><td align="left">diagnostics.brick-sys-log-level</td><td align="center">CRITICAL</td><td align="left">Gluster’s syslog log-level</td></tr><tr><td align="left">diagnostics.client-sys-log-level</td><td align="center">CRITICAL</td><td align="left">Gluster’s syslog log-level</td></tr><tr><td align="left">diagnostics.brick-logger</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-logger</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-format</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-format</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-buf-size</td><td align="center">5</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-buf-size</td><td align="center">5</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-flush-timeout</td><td align="center">20</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-flush-timeout</td><td align="center">20</td><td align="left">null</td></tr><tr><td align="left">disperse.background-heals</td><td align="center">8</td><td align="left">This option can be used to control number of parallel heals</td></tr><tr><td align="left">disperse.heal-wait-qlength</td><td align="center">128</td><td align="left">This option can be used to control number of heals that can wait</td></tr><tr><td align="left">disperse.read-policy</td><td align="center">round-robin</td><td align="left">inode-read fops happen only on ‘k’ number of bricks in n=k+m disperse subvolume. ‘round-robin’ selects the read subvolume using round-robin algo. ‘gfid-hash’ selects read subvolume based on hash of the gfid of that file/directory.</td></tr><tr><td align="left">dht.force-readdirp</td><td align="center">on</td><td align="left">This option if set to ON, forces the use of readdirp, and hence also displays the stats of the files.</td></tr><tr><td align="left">performance.cache-max-file-size</td><td align="center">0</td><td align="left">Maximum file size which would be cached by the io-cache translator.</td></tr><tr><td align="left">performance.cache-min-file-size</td><td align="center">0</td><td align="left">Minimum file size which would be cached by the io-cache translator.</td></tr><tr><td align="left">performance.cache-refresh-timeout</td><td align="center">1</td><td align="left">The cached data for a file will be retained till ‘cache-refresh-timeout’ seconds, after which data re-validation is performed.</td></tr><tr><td align="left">performance.cache-priority</td><td align="center"></td><td align="left">Assigns priority to filenames with specific patterns so that when a page needs to be ejected out of the cache, the page of a file whose priority is the lowest will be ejected earlier</td></tr><tr><td align="left">performance.cache-size</td><td align="center">32MB</td><td align="left">Size of the read cache.</td></tr><tr><td align="left">performance.io-thread-count</td><td align="center">16</td><td align="left">Number of threads in IO threads translator which perform concurrent IO operations</td></tr><tr><td align="left">performance.high-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform high priority IO operations at a given time</td></tr><tr><td align="left">performance.normal-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform normal priority IO operations at a given time</td></tr><tr><td align="left">performance.low-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform low priority IO operations at a given time</td></tr><tr><td align="left">performance.least-prio-threads</td><td align="center">1</td><td align="left">Max number of threads in IO threads translator which perform least priority IO operations at a given time</td></tr><tr><td align="left">performance.enable-least-priority</td><td align="center">on</td><td align="left">Enable/Disable least priority</td></tr><tr><td align="left">performance.least-rate-limit</td><td align="center">0</td><td align="left">Max number of least priority operations to handle per-second</td></tr><tr><td align="left">performance.flush-behind</td><td align="center">on</td><td align="left">If this option is set ON, instructs write-behind translator to perform flush in background, by returning success (or any errors, if any of previous writes were failed) to application even before flush FOP is sent to backend filesystem.</td></tr><tr><td align="left">performance.nfs.flush-behind</td><td align="center">on</td><td align="left">If this option is set ON, instructs write-behind translator to perform flush in background, by returning success (or any errors, if any of previous writes were failed) to application even before flush FOP is sent to backend filesystem.</td></tr><tr><td align="left">performance.write-behind-window-size</td><td align="center">1MB</td><td align="left">Size of the write-behind buffer for a single file (inode).</td></tr><tr><td align="left">performance.nfs.write-behind-window-size</td><td align="center">1MB</td><td align="left">Size of the write-behind buffer for a single file (inode).</td></tr><tr><td align="left">performance.strict-o-direct</td><td align="center">off</td><td align="left">This option when set to off, ignores the O_DIRECT flag.</td></tr><tr><td align="left">performance.nfs.strict-o-direct</td><td align="center">off</td><td align="left">This option when set to off, ignores the O_DIRECT flag.</td></tr><tr><td align="left">performance.strict-write-ordering</td><td align="center">off</td><td align="left">Do not let later writes overtake earlier writes even if they do not overlap</td></tr><tr><td align="left">performance.nfs.strict-write-ordering</td><td align="center">off</td><td align="left">Do not let later writes overtake earlier writes even if they do not overlap</td></tr><tr><td align="left">performance.lazy-open</td><td align="center">yes</td><td align="left">Perform open in the backend only when a necessary FOP arrives (e.g writev on the FD, unlink of the file). When option is disabled, perform backend open right after unwinding open().</td></tr><tr><td align="left">performance.read-after-open</td><td align="center">no</td><td align="left">read is sent only after actual open happens and real fd is obtained, instead of doing on anonymous fd (similar to write)</td></tr><tr><td align="left">performance.read-ahead-page-count</td><td align="center">4</td><td align="left">Number of pages that will be pre-fetched</td></tr><tr><td align="left">performance.md-cache-timeout</td><td align="center">1</td><td align="left">Time period after which cache has to be refreshed</td></tr><tr><td align="left">performance.write-behind</td><td align="center">on</td><td align="left">enable/disable write-behind translator in the volume.</td></tr><tr><td align="left">performance.read-ahead</td><td align="center">on</td><td align="left">enable/disable read-ahead translator in the volume.</td></tr><tr><td align="left">performance.readdir-ahead</td><td align="center">off</td><td align="left">enable/disable readdir-ahead translator in the volume.</td></tr><tr><td align="left">performance.io-cache</td><td align="center">on</td><td align="left">enable/disable io-cache translator in the volume.</td></tr><tr><td align="left">performance.quick-read</td><td align="center">on</td><td align="left">enable/disable quick-read translator in the volume.</td></tr><tr><td align="left">performance.open-behind</td><td align="center">on</td><td align="left">enable/disable open-behind translator in the volume.</td></tr><tr><td align="left">performance.stat-prefetch</td><td align="center">on</td><td align="left">enable/disable meta-data caching translator in the volume.</td></tr><tr><td align="left">performance.client-io-threads</td><td align="center">off</td><td align="left">enable/disable io-threads translator in the client graph of volume.</td></tr><tr><td align="left">performance.nfs.write-behind</td><td align="center">on</td><td align="left">enable/disable write-behind translator in the volume</td></tr><tr><td align="left">performance.force-readdirp</td><td align="center">true</td><td align="left">Convert all readdir requests to readdirplus to collect stat info on each entry.</td></tr><tr><td align="left">features.encryption</td><td align="center">off</td><td align="left">enable/disable client-side encryption for the volume.</td></tr><tr><td align="left">encryption.master-key</td><td align="center">null</td><td align="left">Pathname of regular file which contains master volume key</td></tr><tr><td align="left">encryption.data-key-size</td><td align="center">256</td><td align="left">Data key size (bits)</td></tr><tr><td align="left">encryption.block-size</td><td align="center">4096</td><td align="left">Atom size (bits)</td></tr><tr><td align="left">nfs.enable-ino32</td><td align="center">no</td><td align="left">For nfs clients or apps that do not support 64-bit inode numbers, use this option to make NFS return 32-bit inode numbers instead. Disabled by default, so NFS returns 64-bit inode numbers.</td></tr><tr><td align="left">nfs.mem-factor</td><td align="center">15</td><td align="left">Use this option to make NFS be faster on systems by using more memory. This option specifies a multiple that determines the total amount of memory used. Default value is 15. Increase to use more memory in order to improve performance for certain use cases.Please consult gluster-users list before using this option.</td></tr><tr><td align="left">nfs.export-dirs</td><td align="center">on</td><td align="left">By default, all subvolumes of nfs are exported as individual exports. There are cases where a subdirectory or subdirectories in the volume need to be exported separately. Enabling this option allows any directory on a volumes to be exported separately.Directory exports are enabled by default.</td></tr><tr><td align="left">nfs.export-volumes</td><td align="center">on</td><td align="left">Enable or disable exporting whole volumes, instead if used in conjunction with nfs3.export-dir, can allow setting up only subdirectories as exports. On by default.</td></tr><tr><td align="left">nfs.addr-namelookup</td><td align="center">off</td><td align="left">Users have the option of turning on name lookup for incoming client connections using this option. Use this option to turn on name lookups during address-based authentication. Turning this on will enable you to use hostnames in nfs.rpc-auth-* filters. In some setups, the name server can take too long to reply to DNS queries resulting in timeouts of mount requests. By default, name lookup is off</td></tr><tr><td align="left">nfs.dynamic-volumes</td><td align="center">off</td><td align="left">Internal option set to tell gnfs to use a different scheme for encoding file handles when DVM is being used.</td></tr><tr><td align="left">nfs.register-with-portmap</td><td align="center">on</td><td align="left">For systems that need to run multiple nfs servers, only one registration is possible with portmap service. Use this option to turn off portmap registration for Gluster NFS. On by default</td></tr><tr><td align="left">nfs.outstanding-rpc-limit</td><td align="center">16</td><td align="left">Parameter to throttle the number of incoming RPC requests from a client. 0 means no limit (can potentially run out of memory)</td></tr><tr><td align="left">nfs.port</td><td align="center">2049</td><td align="left">Use this option on systems that need Gluster NFS to be associated with a non-default port number.</td></tr><tr><td align="left">nfs.rpc-auth-unix</td><td align="center">on</td><td align="left">Disable or enable the AUTH_UNIX authentication type for a particular exported volume overriding defaults and general setting for AUTH_UNIX scheme. Must always be enabled for better interoperability. However, can be disabled if needed. Enabled by default.</td></tr><tr><td align="left">nfs.rpc-auth-null</td><td align="center">on</td><td align="left">Disable or enable the AUTH_NULL authentication type for a particular exported volume overriding defaults and general setting for AUTH_NULL. Must always be enabled. This option is here only to avoid unrecognized option warnings.</td></tr><tr><td align="left">nfs.rpc-auth-allow</td><td align="center">all</td><td align="left">Allow a comma separated list of addresses and/or hostnames to connect to the server. By default, all connections are allowed. This allows users to define a rule for a specific exported volume.</td></tr><tr><td align="left">nfs.rpc-auth-reject</td><td align="center">none</td><td align="left">Reject a comma separated list of addresses and/or hostnames from connecting to the server. By default, all connections are allowed. This allows users to define a rule for a specific exported volume.</td></tr><tr><td align="left">nfs.ports-insecure</td><td align="center">off</td><td align="left">Allow client connections from unprivileged ports. By default only privileged ports are allowed. Use this option to enable or disable insecure ports for a specific subvolume and to override the global setting set by the previous option.</td></tr><tr><td align="left">nfs.transport-type</td><td align="center">(null)</td><td align="left">Specifies the nfs transport type. Valid transport types are ‘tcp’ and ‘rdma’.</td></tr><tr><td align="left">nfs.trusted-sync</td><td align="center">off</td><td align="left">All writes and COMMIT requests are treated as async. This implies that no write requests are guaranteed to be on server disks when the write reply is received at the NFS client. Trusted sync includes trusted-write behaviour. Off by default.</td></tr><tr><td align="left">nfs.trusted-write</td><td align="center">off</td><td align="left">On an UNSTABLE write from client, return STABLE flag to force client to not send a COMMIT request. In some environments, combined with a replicated GlusterFS setup, this option can improve write performance. This flag allows user to trust Gluster replication logic to sync data to the disks and recover when required. COMMIT requests if received will be handled in a default manner by fsyncing. STABLE writes are still handled in a sync manner. Off by default.</td></tr><tr><td align="left">nfs.volume-access</td><td align="center">read-write</td><td align="left">Type of access desired for this subvolume: read-only, read-write(default)</td></tr><tr><td align="left">nfs.export-dir</td><td align="center"></td><td align="left">By default, all subvolumes of nfs are exported as individual exports. There are cases where a subdirectory or subdirectories in the volume need to be exported separately. This option can also be used in conjunction with nfs3.export-volumes option to restrict exports only to the subdirectories specified through this option. Must be an absolute path. Along with path allowed list of IPs/hostname can be associated with each subdirectory. If provided connection will allowed only from these IPs. By default connections from all IPs are allowed. Format:[(hostspec[|hostspec|…])][,…]. Where hostspec can be an IP address, hostname or an IP range in CIDR notation. e.g. /foo(192.168.1.0/24|host1|10.1.1.8),/host2. NOTE: Care must be taken while configuring this option as invalid entries and/or unreachable DNS servers can introduce unwanted delay in all the mount calls.</td></tr><tr><td align="left">nfs.disable</td><td align="center">false</td><td align="left">This option is used to start or stop the NFS server for individual volumes.</td></tr><tr><td align="left">nfs.nlm</td><td align="center">on</td><td align="left">This option, if set to ‘off’, disables NLM server by not registering the service with the portmapper. Set it to ‘on’ to re-enable it. Default value: ‘on’</td></tr><tr><td align="left">nfs.acl</td><td align="center">on</td><td align="left">This option is used to control ACL support for NFS.</td></tr><tr><td align="left">nfs.mount-udp</td><td align="center">off</td><td align="left">set the option to ‘on’ to enable mountd on UDP. Required for some Solaris and AIX NFS clients. The need for enabling this option often depends on the usage of NLM.</td></tr><tr><td align="left">nfs.mount-rmtab</td><td align="center">/var/lib/glusterd/nfs/rmtab</td><td align="left">Set the location of the cache file that is used to list all the NFS-clients that have connected through the MOUNT protocol. If this is on shared storage, all GlusterFS servers will update and output (with ‘showmount’) the same list. Set to “/-“ to disable.</td></tr><tr><td align="left">nfs.drc</td><td align="center">off</td><td align="left">Enable Duplicate Request Cache in gNFS server to improve correctness of non-idempotent operations like write, delete, link, et al</td></tr><tr><td align="left">nfs.drc-size</td><td align="center">0x20000</td><td align="left">Sets the number of non-idempotent requests to cache in drc</td></tr><tr><td align="left">nfs.read-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue read requests to the Gluster NFSv3 server. Must be a multiple of 4KB (4096). Min and Max supported values are 4KB (4096) and 1MB (1048576) respectively. If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.write-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue write requests to the Gluster NFSv3 server. Must be a multiple of 1KB (1024). Min and Max supported values are 4KB (4096) and 1MB(1048576) respectively. If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.readdir-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue directory reading requests to the Gluster NFSv3 server. Must be a multiple of 1KB (1024). Min and Max supported values are 4KB (4096) and 1MB (1048576) respectively.If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.exports-auth-enable</td><td align="center">(null)</td><td align="left">Set the option to ‘on’ to enable exports/netgroup authentication in the NFS server and mount daemon.</td></tr><tr><td align="left">nfs.auth-refresh-interval-sec</td><td align="center">(null)</td><td align="left">Frequency in seconds that the daemon should check for changes in the exports/netgroups file.</td></tr><tr><td align="left">nfs.auth-cache-ttl-sec</td><td align="center">(null)</td><td align="left">Sets the TTL of an entry in the auth cache. Value is in seconds.</td></tr><tr><td align="left">ganesha.enable</td><td align="center">off</td><td align="left">export volume via NFS-Ganesha</td></tr><tr><td align="left">network.frame-timeout</td><td align="center">1800</td><td align="left">Time frame after which the (file) operation would be declared as dead, if the server does not respond for a particular (file) operation.</td></tr><tr><td align="left">network.ping-timeout</td><td align="center">42</td><td align="left">Time duration for which the client waits to check if the server is responsive.</td></tr><tr><td align="left">network.tcp-window-size</td><td align="center">null</td><td align="left">Specifies the window size for tcp socket.</td></tr><tr><td align="left">network.remote-dio</td><td align="center">disable</td><td align="left">If enabled, in open() and creat() calls, O_DIRECT flag will be filtered at the client protocol level so server will still continue to cache the file. This works similar to NFS’s behavior of O_DIRECT</td></tr><tr><td align="left">network.inode-lru-limit</td><td align="center">16384</td><td align="left">Specifies the maximum megabytes of memory to be used in the inode cache.</td></tr><tr><td align="left">network.compression</td><td align="center">off</td><td align="left">enable/disable network compression translator</td></tr><tr><td align="left">network.compression.window-size</td><td align="center">-15</td><td align="left">Size of the zlib history buffer.</td></tr><tr><td align="left">network.compression.mem-level</td><td align="center">8</td><td align="left">Memory allocated for internal compression state. 1 uses minimum memory but is slow and reduces compression ratio; memLevel=9 uses maximum memory for optimal speed. The default value is 8.</td></tr><tr><td align="left">network.compression.min-size</td><td align="center">0</td><td align="left">Data is compressed only when its size exceeds this.</td></tr><tr><td align="left">network.compression.compression-level</td><td align="center">-1</td><td align="left">Compression levels 0 : no compression, 1 : best speed, 9 : best compression, -1 : default compression</td></tr><tr><td align="left">features.lock-heal</td><td align="center">off</td><td align="left">When the connection to client is lost, server cleans up all the locks held by the client. After the connection is restored, the client reacquires (heals) the fcntl locks released by the server.</td></tr><tr><td align="left">features.grace-timeout</td><td align="center">10</td><td align="left">Specifies the duration for the lock state to be maintained on the client after a network disconnection. Range 10-1800 seconds.</td></tr><tr><td align="left">features.file-snapshot</td><td align="center">off</td><td align="left">enable/disable file-snapshot feature in the volume.</td></tr><tr><td align="left">features.uss</td><td align="center">off</td><td align="left">enable/disable User Serviceable Snapshots on the volume.</td></tr><tr><td align="left">features.snapshot-directory</td><td align="center">.snaps</td><td align="left">Entry point directory for entering snapshot world</td></tr><tr><td align="left">features.show-snapshot-directory</td><td align="center">off</td><td align="left">show entry point in readdir output of snapdir-entry-path which is set by samba</td></tr><tr><td align="left">features.quota-deem-statfs</td><td align="center">off</td><td align="left">If set to on, it takes quota limits intoconsideration while estimating fs size. (df command) (Default is off).</td></tr><tr><td align="left">features.read-only</td><td align="center">off</td><td align="left">When “on”, makes a volume read-only. It is turned “off” by default.</td></tr><tr><td align="left">features.worm</td><td align="center">off</td><td align="left">When “on”, makes a volume get write once read many feature. It is turned “off” by default.</td></tr><tr><td align="left">features.barrier-timeout</td><td align="center">120</td><td align="left">After ‘timeout’ seconds since the time ‘barrier’ option was set to “on”, acknowledgements to file operations are no longer blocked and previously blocked acknowledgements are sent to the application</td></tr><tr><td align="left">features.trash</td><td align="center">off</td><td align="left">Enable/disable trash translator</td></tr><tr><td align="left">features.trash-dir</td><td align="center">.trashcan</td><td align="left">Directory for trash files</td></tr><tr><td align="left">features.trash-eliminate-path</td><td align="center">(null)</td><td align="left">Eliminate paths to be excluded from trashing</td></tr><tr><td align="left">features.trash-max-filesize</td><td align="center">5MB</td><td align="left">Maximum size of file that can be moved to trash</td></tr><tr><td align="left">features.trash-internal-op</td><td align="center">off</td><td align="left">Enable/disable trash translator for internal operations</td></tr><tr><td align="left">features.ctr-enabled</td><td align="center">off</td><td align="left">Enable CTR xlator</td></tr><tr><td align="left">features.record-counters</td><td align="center">off</td><td align="left">Its a Change Time Recorder Xlator option to enable recording write and read heat counters. The default is disabled. If enabled, “cluster.write-freq-threshold” and “cluster.read-freq-threshold” defined the number of writes (or reads) to a given file are needed before triggering migration.</td></tr><tr><td align="left">features.ctr-sql-db-cachesize</td><td align="center">1000</td><td align="left">Defines the cache size of the sqlite database of changetimerecorder xlator.The input to this option is in pages.Each page is 4096 bytes. Default value is 1000 pages i.e ~ 4 MB. The max value is 262144 pages i.e 1 GB and the min value is 1000 pages i.e ~ 4 MB.</td></tr><tr><td align="left">features.ctr-sql-db-wal-autocheckpoint</td><td align="center">1000</td><td align="left">Defines the autocheckpoint of the sqlite database of changetimerecorder. The input to this option is in pages. Each page is 4096 bytes. Default value is 1000 pages i.e ~ 4 MB.The max value is 262144 pages i.e 1 GB and the min value is 1000 pages i.e ~4 MB.</td></tr><tr><td align="left">features.shard-block-size</td><td align="center">4MB</td><td align="left">The size unit used to break a file into multiple chunks</td></tr><tr><td align="left">features.cache-invalidation</td><td align="center">off</td><td align="left">When “on”, sends cache-invalidation notifications.</td></tr><tr><td align="left">features.cache-invalidation-timeout</td><td align="center">60</td><td align="left">After ‘timeout’ seconds since the time client accessed any file, cache-invalidation notifications are no longer sent to that client.</td></tr><tr><td align="left">client.event-threads</td><td align="center">2</td><td align="left">Specifies the number of event threads to execute in parallel. Larger values would help process responses faster, depending on available processing power. Range 1-32 threads.</td></tr><tr><td align="left">auth.allow</td><td align="center">null</td><td align="left">Allow a comma separated list of addresses and/or hostnames to connect to the server. Option auth.reject overrides this option. By default, all connections are allowed.</td></tr><tr><td align="left">auth.reject</td><td align="center">null</td><td align="left">Reject a comma separated list of addresses and/or hostnames to connect to the server. This option overrides the auth.allow option. By default, all connections are allowed.</td></tr><tr><td align="left">server.root-squash</td><td align="center">off</td><td align="left">Map requests from uid/gid 0 to the anonymous uid/gid. Note that this does not apply to any other uids or gids that might be equally sensitive, such as user bin or group staff.</td></tr><tr><td align="left">server.anonuid</td><td align="center">65534</td><td align="left">value of the uid used for the anonymous user/nfsnobody when root-squash is enabled.</td></tr><tr><td align="left">server.anongid</td><td align="center">65534</td><td align="left">value of the gid used for the anonymous user/nfsnobody when root-squash is enabled.</td></tr><tr><td align="left">server.statedump-path</td><td align="center">/var/run/gluster</td><td align="left">Specifies directory in which gluster should save its statedumps.</td></tr><tr><td align="left">server.outstanding-rpc-limit</td><td align="center">64</td><td align="left">Parameter to throttle the number of incoming RPC requests from a client. 0 means no limit (can potentially run out of memory)</td></tr><tr><td align="left">server.manage-gids</td><td align="center">off</td><td align="left">Resolve groups on the server-side.</td></tr><tr><td align="left">server.dynamic-auth</td><td align="center">on</td><td align="left">When ‘on’ perform dynamic authentication of volume options in order to allow/terminate client transport connection immediately in response to *.allow | *.reject volume set options.</td></tr><tr><td align="left">server.gid-timeout</td><td align="center">300</td><td align="left">Timeout in seconds for the cached groups to expire.</td></tr><tr><td align="left">server.event-threads</td><td align="center">2</td><td align="left">Specifies the number of event threads to execute in parallel. Larger values would help process responses faster, depending on available processing power. Range 1-32 threads.</td></tr><tr><td align="left">ssl.own-cert</td><td align="center">null</td><td align="left">SSL certificate. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.private-key</td><td align="center">null</td><td align="left">SSL private key. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.ca-list</td><td align="center">null</td><td align="left">SSL CA list. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.crl-path</td><td align="center">null</td><td align="left">Path to directory containing CRL. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.certificate-depth</td><td align="center">null</td><td align="left">Maximum certificate-chain depth. If zero, the peer’s certificate itself must be in the local certificate list. Otherwise, there may be up to N signing certificates between the peer’s and the local list. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.cipher-list</td><td align="center">null</td><td align="left">Allowed SSL ciphers. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.dh-param</td><td align="center">null</td><td align="left">DH parameters file. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.ec-curve</td><td align="center">null</td><td align="left">ECDH curve name. Ignored if SSL is not enabled.</td></tr><tr><td align="left">storage.linux-aio</td><td align="center">off</td><td align="left">Support for native Linux AIO</td></tr><tr><td align="left">storage.batch-fsync-mode</td><td align="center">reverse-fsync</td><td align="left">Possible values: syncfs: Perform one syncfs() on behalf oa batchof fsyncs. syncfs-single-fsync: Perform one syncfs() on behalf of a batch of fsyncs and one fsync() per batch. syncfs-reverse-fsync: Preform one syncfs() on behalf of a batch of fsyncs and fsync() each file in the batch in reverse order. reverse-fsync: Perform fsync() of each file in the batch in reverse order.</td></tr><tr><td align="left">storage.batch-fsync-delay-usec</td><td align="center">0</td><td align="left">Num of usecs to wait for aggregating fsync requests</td></tr><tr><td align="left">storage.owner-uid</td><td align="center">-1</td><td align="left">Support for setting uid of brick’s owner</td></tr><tr><td align="left">storage.owner-gid</td><td align="center">-1</td><td align="left">Support for setting gid of brick’s owner</td></tr><tr><td align="left">storage.node-uuid-pathinfo</td><td align="center">off</td><td align="left">return glusterd’s node-uuid in pathinfo xattr string instead of hostname</td></tr><tr><td align="left">storage.health-check-interval</td><td align="center">30</td><td align="left">Interval in seconds for a filesystem health check, set to 0 to disable</td></tr><tr><td align="left">storage.build-pgfid</td><td align="center">off</td><td align="left">Enable placeholders for gfid to path conversion</td></tr><tr><td align="left">storage.bd-aio</td><td align="center">off</td><td align="left">Support for native Linux AIO</td></tr></tbody></table><h2 id="基本GlusterFS的优化样例"><a href="#基本GlusterFS的优化样例" class="headerlink" title="基本GlusterFS的优化样例"></a>基本GlusterFS的优化样例</h2><table><thead><tr><th align="left">选项</th><th align="center">配置</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">cluster.server-quorum-type</td><td align="center">server</td><td align="left"></td></tr><tr><td align="left">cluster.quorum-type</td><td align="center">auto</td><td align="left"></td></tr><tr><td align="left">network.remote-dio</td><td align="center">enable</td><td align="left"></td></tr><tr><td align="left">cluster.eager-lock</td><td align="center">enable</td><td align="left"></td></tr><tr><td align="left">performance.stat-prefetch</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.io-cache</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.read-ahead</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.quick-read</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.readdir-ahead</td><td align="center"></td><td align="left"></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Redis复制过程</title>
    <link href="/2020/04/16/Redis%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/"/>
    <url>/2020/04/16/Redis%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="how-redis-do-replication"><a href="#how-redis-do-replication" class="headerlink" title="how redis do replication"></a>how redis do replication</h3><p><img src="/2020/04/16/Redis%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/2582954-c87cc2da4707fecf.jpg" srcset="/img/loading.gif" alt></p><ul><li>step 1:add callback for server cron job</li></ul><pre><code class="hljs awk"><span class="hljs-regexp">//</span>location:server.c<span class="hljs-regexp">//</span>fucntion:setting callback <span class="hljs-keyword">for</span> timeout<span class="hljs-keyword">if</span> (aeCreateTimeEvent(server.el, <span class="hljs-number">1</span>, serverCron, NULL, NULL) == AE_ERR) &#123;      serverPanic(<span class="hljs-string">"Can't create event loop timers."</span>);      <span class="hljs-keyword">exit</span>(<span class="hljs-number">1</span>);  &#125;</code></pre><ul><li>step 2:call replication for each 1000 seconds</li></ul><pre><code class="hljs less"><span class="hljs-comment">//location:server.c</span><span class="hljs-comment">//function:serverCron,crontab for redis-server</span><span class="hljs-selector-tag">run_with_period</span>(<span class="hljs-number">1000</span>) <span class="hljs-selector-tag">replicationCron</span>();</code></pre><ul><li><p>step 3:core replication cron job</p><pre><code class="hljs pgsql">//<span class="hljs-keyword">location</span>:<span class="hljs-keyword">replication</span>.c//<span class="hljs-keyword">function</span>: response <span class="hljs-keyword">for</span> redis <span class="hljs-keyword">replication</span> <span class="hljs-comment">/* Replication cron function, called 1 time per second. */</span><span class="hljs-type">void</span> replicationCron(<span class="hljs-type">void</span>) &#123;        <span class="hljs-comment">/* Check if we should connect to a MASTER */</span>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">server</span>.repl_state == REPL_STATE_CONNECT) &#123;        <span class="hljs-keyword">if</span> (connectWithMaster() == C_OK) &#123;            serverLog(LL_NOTICE,"MASTER &lt;-&gt; REPLICA sync started");        &#125;    &#125;；  &#125;<span class="hljs-type">int</span> connectWithMaster(<span class="hljs-type">void</span>) &#123;    <span class="hljs-type">int</span> fd;    fd = anetTcpNonBlockBestEffortBindConnect(<span class="hljs-keyword">NULL</span>,        <span class="hljs-keyword">server</span>.masterhost,<span class="hljs-keyword">server</span>.masterport,NET_FIRST_BIND_ADDR);    // fd <span class="hljs-keyword">of</span> master socket     aeCreateFileEvent(<span class="hljs-keyword">server</span>.el,fd,AE_READABLE|AE_WRITABLE,syncWithMaster,<span class="hljs-keyword">NULL</span>)；&#125;<span class="hljs-type">void</span> syncWithMaster(aeEventLoop *el, <span class="hljs-type">int</span> fd, <span class="hljs-type">void</span> *privdata, <span class="hljs-type">int</span> mask) &#123;    <span class="hljs-comment">/* Send a PING to check the master is able to reply without errors. */</span>    sendSynchronousCommand(SYNC_CMD_WRITE,fd,"PING",<span class="hljs-keyword">NULL</span>);        <span class="hljs-comment">/* Receive the PONG command. */</span>    sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>);    <span class="hljs-comment">/* AUTH with the master if required. */</span>    sendSynchronousCommand(SYNC_CMD_WRITE,fd,"AUTH",<span class="hljs-keyword">server</span>.masterauth,<span class="hljs-keyword">NULL</span>);              <span class="hljs-comment">/* Receive AUTH reply. */</span>    sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>);        <span class="hljs-comment">/* Set the slave port, so that Master's INFO command can list the</span><span class="hljs-comment">     * slave listening port correctly. */</span>     sendSynchronousCommand(SYNC_CMD_WRITE,fd,"REPLCONF",                "listening-port",port, <span class="hljs-keyword">NULL</span>);      <span class="hljs-comment">/* Receive REPLCONF listening-port reply. */</span>    sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>);    <span class="hljs-comment">/* Set the slave ip, so that Master's INFO command can list the</span><span class="hljs-comment">     * slave IP address port correctly in case of port forwarding or NAT. */</span>     sendSynchronousCommand(SYNC_CMD_WRITE,fd,"REPLCONF",                "ip-address",<span class="hljs-keyword">server</span>.slave_announce_ip, <span class="hljs-keyword">NULL</span>);    <span class="hljs-comment">/* Receive REPLCONF ip-address reply. */</span>    sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>);          <span class="hljs-comment">/* Inform the master of our (slave) capabilities.</span><span class="hljs-comment">     *</span><span class="hljs-comment">     * EOF: supports EOF-style RDB transfer for diskless replication.</span><span class="hljs-comment">     * PSYNC2: supports PSYNC v2, so understands +CONTINUE &lt;new repl ID&gt;.</span><span class="hljs-comment">     *</span><span class="hljs-comment">     * The master will ignore capabilities it does not understand. */</span>     sendSynchronousCommand(SYNC_CMD_WRITE,fd,"REPLCONF",                "capa","eof","capa","psync2",<span class="hljs-keyword">NULL</span>);                  <span class="hljs-comment">/* Receive CAPA reply. */</span>    sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>)；          <span class="hljs-comment">/* Try a partial resynchonization. If we don't have a cached master</span><span class="hljs-comment">     * slaveTryPartialResynchronization() will at least try to use PSYNC</span><span class="hljs-comment">     * to start a full resynchronization so that we get the master run id</span><span class="hljs-comment">     * and the global offset, to try a partial resync at the next</span><span class="hljs-comment">     * reconnection attempt. */</span>    slaveTryPartialResynchronization(fd,<span class="hljs-number">0</span>) &#123;     <span class="hljs-comment">/* If we reached this point, we are able to perform a partial resync:</span><span class="hljs-comment">     </span><span class="hljs-comment">          /* Issue the PSYNC command */</span>        reply = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"PSYNC",psync_replid,psync_offset,<span class="hljs-keyword">NULL</span>)        &#123;         <span class="hljs-comment">/* command of up,will call syncCommand of master node</span><span class="hljs-comment">          /* SYNC and PSYNC command implemenation. */</span>                    // PSYNC command will <span class="hljs-keyword">call</span> syncCommand <span class="hljs-keyword">function</span>          <span class="hljs-type">void</span> syncCommand(client *c) &#123;            masterTryPartialResynchronization(c) &#123;                // <span class="hljs-keyword">write</span> master replid <span class="hljs-keyword">to</span> slave                                <span class="hljs-keyword">if</span> (c-&gt;slave_capa &amp; SLAVE_CAPA_PSYNC2) &#123;                    buflen = snprintf(buf,sizeof(buf),"+CONTINUE %s\r\n", <span class="hljs-keyword">server</span>.replid);                 &#125; <span class="hljs-keyword">else</span> &#123;                    buflen = snprintf(buf,sizeof(buf),"+CONTINUE\r\n");                &#125;                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">write</span>(c-&gt;fd,buf,buflen) != buflen) &#123;                freeClientAsync(c);            &#125;                     * <span class="hljs-number">1</span>) <span class="hljs-keyword">Set</span> client state <span class="hljs-keyword">to</span> make it a slave.           * <span class="hljs-number">2</span>) Inform the client we can <span class="hljs-keyword">continue</span> <span class="hljs-keyword">with</span> +<span class="hljs-keyword">CONTINUE</span>          * <span class="hljs-number">3</span>) Send the backlog data (<span class="hljs-keyword">from</span> the <span class="hljs-keyword">offset</span> <span class="hljs-keyword">to</span> the <span class="hljs-keyword">end</span>) <span class="hljs-keyword">to</span> the slave. */          c-&gt;flags |= CLIENT_SLAVE;          c-&gt;replstate = SLAVE_STATE_ONLINE;          c-&gt;repl_ack_time = <span class="hljs-keyword">server</span>.unixtime;          c-&gt;repl_put_online_on_ack = <span class="hljs-number">0</span>;          listAddNodeTail(<span class="hljs-keyword">server</span>.slaves,c);          startBgsaveForReplication(c-&gt;slave_capa) &#123;               // proto               //<span class="hljs-type">int</span> startBgsaveForReplication(<span class="hljs-type">int</span> mincapa)                 <span class="hljs-type">int</span> retval;                                //socket_target init according slave_capa_eof                <span class="hljs-type">int</span> socket_target = <span class="hljs-keyword">server</span>.repl_diskless_sync &amp;&amp; (mincapa &amp; SLAVE_CAPA_EOF);                rdbSaveInfo rsi, *rsiptr;                rsiptr = rdbPopulateSaveInfo(&amp;rsi);                                <span class="hljs-keyword">if</span> (rsiptr) &#123;                  <span class="hljs-keyword">if</span> (socket_target)                      // mark rio <span class="hljs-keyword">with</span> <span class="hljs-keyword">end</span> flag,<span class="hljs-keyword">and</span> send <span class="hljs-keyword">to</span> slave                      rdbSaveToSlavesSockets(rsiptr)&#123;                         <span class="hljs-keyword">if</span>(fork()==<span class="hljs-number">0</span>)&#123;                              CHILD_INFO_TYPE_RDB                         &#125;                      &#125;                  <span class="hljs-keyword">else</span>                      // <span class="hljs-number">1.</span> bgsave <span class="hljs-keyword">current</span> rdb.dump <span class="hljs-keyword">with</span> background                      rdbSaveBackground(<span class="hljs-keyword">server</span>.rdb_filename,rsiptr)&#123;                         <span class="hljs-keyword">if</span>((childpid=fork())==<span class="hljs-number">0</span>)&#123;                            // redis <span class="hljs-keyword">server</span> main process will wait util save <span class="hljs-keyword">all</span> <span class="hljs-keyword">database</span> <span class="hljs-keyword">in</span> disk <span class="hljs-keyword">for</span> finish                            rdbSave(rdb_filename);                            // <span class="hljs-keyword">write</span> CHILD_INFO_TYPE_RDB <span class="hljs-keyword">to</span> parent process <span class="hljs-keyword">by</span> pipe                            sendChildInfo(CHILD_INFO_TYPE_RDB）                         &#125;<span class="hljs-keyword">else</span>&#123;                            <span class="hljs-keyword">server</span>.rdb_child_pid = childpid;                            <span class="hljs-keyword">server</span>.rdb_child_type = RDB_CHILD_TYPE_DISK;                         &#125;                      &#125;                 &#125;                 copyClientOutputBuffer(c,slave);                 <span class="hljs-keyword">if</span>(!socket_target) &#123;                     // <span class="hljs-number">2.</span><span class="hljs-keyword">write</span> replid <span class="hljs-keyword">and</span> <span class="hljs-keyword">offset</span> <span class="hljs-keyword">to</span> slave                     replicationSetupSlaveForFullResync(c,slave-&gt;psync_initial_offset)                 &#125;            &#125;          &#125;        &#125;        reply = sendSynchronousCommand(SYNC_CMD_READ,fd,<span class="hljs-keyword">NULL</span>);         <span class="hljs-comment">/* We are going to full resync, discard the cached master structure. */</span>        replicationDiscardCachedMaster();    &#125;    psync_result = slaveTryPartialResynchronization(fd,<span class="hljs-number">1</span>);        <span class="hljs-comment">/* PSYNC failed or is not supported: we want our slaves to resync with us</span><span class="hljs-comment">     * as well, if we have any sub-slaves. The master may transfer us an</span><span class="hljs-comment">     * entirely different data set and we have no way to incrementally feed</span><span class="hljs-comment">     * our slaves after that. */</span>    disconnectSlaves(); <span class="hljs-comment">/* Force our slaves to resync with us as well. */</span>    freeReplicationBacklog(); <span class="hljs-comment">/* Don't allow our chained slaves to PSYNC. */</span>    <span class="hljs-comment">/* Fall back to SYNC if needed. Otherwise psync_result == PSYNC_FULLRESYNC</span><span class="hljs-comment">     * and the server.master_replid and master_initial_offset are</span><span class="hljs-comment">     * already populated.  sync state,waited*/</span>     syncWrite(fd,"SYNC\r\n",<span class="hljs-number">6</span>,<span class="hljs-keyword">server</span>.repl_syncio_timeout*<span class="hljs-number">1000</span>) == <span class="hljs-number">-1</span>);    <span class="hljs-comment">/* Prepare a suitable temp file for bulk transfer */</span>    <span class="hljs-keyword">while</span>(maxtries<span class="hljs-comment">--) &#123;</span>        snprintf(tmpfile,<span class="hljs-number">256</span>,            "temp-%d.%ld.rdb",(<span class="hljs-type">int</span>)<span class="hljs-keyword">server</span>.unixtime,(long <span class="hljs-type">int</span>)getpid());        dfd = <span class="hljs-keyword">open</span>(tmpfile,O_CREAT|O_WRONLY|O_EXCL,<span class="hljs-number">0644</span>);    &#125;       <span class="hljs-comment">/* Setup the non blocking download of the bulk file. */</span>    aeCreateFileEvent(<span class="hljs-keyword">server</span>.el,fd, AE_READABLE,readSyncBulkPayload,<span class="hljs-keyword">NULL</span>);    <span class="hljs-keyword">server</span>.repl_state = REPL_STATE_TRANSFER;    <span class="hljs-keyword">server</span>.repl_transfer_size = <span class="hljs-number">-1</span>;    <span class="hljs-keyword">server</span>.repl_transfer_read = <span class="hljs-number">0</span>;    <span class="hljs-keyword">server</span>.repl_transfer_last_fsync_off = <span class="hljs-number">0</span>;        // <span class="hljs-keyword">current</span> node <span class="hljs-keyword">as</span> slave,<span class="hljs-keyword">open</span> <span class="hljs-keyword">temp</span>-rdb.dump file <span class="hljs-keyword">and</span> <span class="hljs-keyword">get</span> fd <span class="hljs-keyword">for</span> this file    <span class="hljs-keyword">server</span>.repl_transfer_fd = dfd;    <span class="hljs-keyword">server</span>.repl_transfer_lastio = <span class="hljs-keyword">server</span>.unixtime;    <span class="hljs-keyword">server</span>.repl_transfer_tmpfile = zstrdup(tmpfile);    <span class="hljs-keyword">return</span>;&#125;<span class="hljs-type">void</span> readSyncBulkPayload(aeEventLoop *el, <span class="hljs-type">int</span> fd, <span class="hljs-type">void</span> *privdata, <span class="hljs-type">int</span> mask) &#123;    <span class="hljs-type">char</span> buf[<span class="hljs-number">4096</span>];    ssize_t nread, readlen, nwritten;    <span class="hljs-comment">/* If repl_transfer_size == -1 we still have to read the bulk length</span><span class="hljs-comment">     * from the master reply. */</span>      syncReadLine(fd,buf,<span class="hljs-number">1024</span>,<span class="hljs-keyword">server</span>.repl_syncio_timeout*<span class="hljs-number">1000</span>) == <span class="hljs-number">-1</span>) &#123;       <span class="hljs-comment">/* Read bulk data */</span>    <span class="hljs-keyword">if</span> (usemark) &#123;        readlen = sizeof(buf);    &#125; <span class="hljs-keyword">else</span> &#123;        left = <span class="hljs-keyword">server</span>.repl_transfer_size - <span class="hljs-keyword">server</span>.repl_transfer_read;        readlen = (left &lt; (signed)sizeof(buf)) ? left : (signed)sizeof(buf);    &#125;   // <span class="hljs-keyword">read</span>  rdb.dump <span class="hljs-keyword">from</span> master    nread = <span class="hljs-keyword">read</span>(fd,buf,readlen);    <span class="hljs-keyword">if</span> (nread &lt;= <span class="hljs-number">0</span>) &#123;        cancelReplicationHandshake();    &#125;          // <span class="hljs-keyword">write</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">current</span> <span class="hljs-keyword">temp</span>-rdb.dump file       nwritten = <span class="hljs-keyword">write</span>(<span class="hljs-keyword">server</span>.repl_transfer_fd,buf,nread))           <span class="hljs-keyword">rename</span>(<span class="hljs-keyword">server</span>.repl_transfer_tmpfile,<span class="hljs-keyword">server</span>.rdb_filename) ;             <span class="hljs-comment">/* We need to stop any AOFRW fork before flusing and parsing</span><span class="hljs-comment">         * RDB, otherwise we'll create a copy-on-write disaster. */</span>        <span class="hljs-keyword">if</span>(aof_is_enabled) stopAppendOnly();                //mark client <span class="hljs-keyword">as</span> dirty,that will be remove        signalFlushedDb(<span class="hljs-number">-1</span>);                // clean <span class="hljs-keyword">all</span>  data <span class="hljs-keyword">for</span> <span class="hljs-keyword">current</span> node        emptyDb(<span class="hljs-number">-1</span>,<span class="hljs-keyword">server</span>.repl_slave_lazy_flush ? EMPTYDB_ASYNC : EMPTYDB_NO_FLAGS,replicationEmptyDbCallback)        &#123;            // proto long long emptyDb(<span class="hljs-type">int</span> dbnum, <span class="hljs-type">int</span> flags, <span class="hljs-type">void</span>(callback)(<span class="hljs-type">void</span>*))             <span class="hljs-type">int</span> async = (flags &amp; EMPTYDB_ASYNC);            long long removed = <span class="hljs-number">0</span>;            <span class="hljs-type">int</span> startdb = <span class="hljs-number">0</span>;            <span class="hljs-type">int</span> enddb = <span class="hljs-keyword">server</span>.dbnum<span class="hljs-number">-1</span>;           <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = startdb; j &lt;= enddb; j++) &#123;              removed += dictSize(<span class="hljs-keyword">server</span>.db[j].dict);              //async instand <span class="hljs-keyword">for</span> <span class="hljs-keyword">as</span> backgroup job <span class="hljs-keyword">to</span> flush data <span class="hljs-keyword">in</span> <span class="hljs-keyword">database</span>              <span class="hljs-keyword">if</span> (async) &#123;                // that will <span class="hljs-keyword">create</span> <span class="hljs-built_in">new</span> dict <span class="hljs-keyword">after</span> async,<span class="hljs-built_in">old</span> dict mark <span class="hljs-keyword">to</span> clean                emptyDbAsync(&amp;<span class="hljs-keyword">server</span>.db[j]);              &#125; <span class="hljs-keyword">else</span> &#123;                //blocking <span class="hljs-keyword">for</span> flush <span class="hljs-keyword">all</span> data <span class="hljs-keyword">in</span> <span class="hljs-keyword">database</span>                dictEmpty(<span class="hljs-keyword">server</span>.db[j].dict,callback);                dictEmpty(<span class="hljs-keyword">server</span>.db[j].expires,callback);             &#125;        &#125;                  <span class="hljs-comment">/* Before loading the DB into memory we need to delete the readable</span><span class="hljs-comment">         * handler, otherwise it will get called recursively since</span><span class="hljs-comment">         * rdbLoad() will call the event loop to process events from time to</span><span class="hljs-comment">         * time for non blocking loading. */</span>        aeDeleteFileEvent(<span class="hljs-keyword">server</span>.el,<span class="hljs-keyword">server</span>.repl_transfer_s,AE_READABLE);                //init slave <span class="hljs-keyword">info</span>        rdbSaveInfo rsi = RDB_SAVE_INFO_INIT;                //<span class="hljs-keyword">load</span> data <span class="hljs-keyword">from</span> rdb_file         rdbLoad(<span class="hljs-keyword">server</span>.rdb_filename,&amp;rsi);                    // <span class="hljs-keyword">create</span> master client <span class="hljs-keyword">for</span> slave,that will got master socket <span class="hljs-keyword">and</span> other <span class="hljs-keyword">info</span>       //   incude replid <span class="hljs-keyword">of</span> master,<span class="hljs-keyword">server</span>.replid        replicationCreateMasterClient(<span class="hljs-keyword">server</span>.repl_transfer_s,rsi.repl_stream_db);        <span class="hljs-keyword">server</span>.repl_state = REPL_STATE_CONNECTED;              // clean <span class="hljs-built_in">old</span> replid,that included <span class="hljs-keyword">in</span> <span class="hljs-keyword">server</span>.replid2        clearReplicationId2();                <span class="hljs-comment">/* Let's create the replication backlog if needed. Slaves need to</span><span class="hljs-comment">         * accumulate the backlog regardless of the fact they have sub-slaves</span><span class="hljs-comment">         * or not, in order to behave correctly if they are promoted to</span><span class="hljs-comment">         * masters after a failover. */</span>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">server</span>.repl_backlog == <span class="hljs-keyword">NULL</span>) createReplicationBacklog();             <span class="hljs-comment">/* Restart the AOF subsystem now that we finished the sync. This</span><span class="hljs-comment">         * will trigger an AOF rewrite, and when done will start appending</span><span class="hljs-comment">         * to the new file. */</span>        <span class="hljs-keyword">if</span> (aof_is_enabled) restartAOF();    &#125;    <span class="hljs-keyword">return</span>;&#125; * <span class="hljs-keyword">On</span> success the fuction <span class="hljs-keyword">returns</span> the number <span class="hljs-keyword">of</span> keys removed <span class="hljs-keyword">from</span> the * <span class="hljs-keyword">database</span>(s). Otherwise <span class="hljs-number">-1</span> <span class="hljs-keyword">is</span> returned <span class="hljs-keyword">in</span> the specific <span class="hljs-keyword">case</span> the * DB number <span class="hljs-keyword">is</span> <span class="hljs-keyword">out</span> <span class="hljs-keyword">of</span> range, <span class="hljs-keyword">and</span> errno <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span> EINVAL. */long long emptyDb(<span class="hljs-type">int</span> dbnum, <span class="hljs-type">int</span> flags, <span class="hljs-type">void</span>(callback)(<span class="hljs-type">void</span>*)) &#123;    <span class="hljs-type">int</span> async = (flags &amp; EMPTYDB_ASYNC);    long long removed = <span class="hljs-number">0</span>;    <span class="hljs-keyword">if</span> (dbnum &lt; <span class="hljs-number">-1</span> || dbnum &gt;= <span class="hljs-keyword">server</span>.dbnum) &#123;        errno = EINVAL;        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    &#125;    <span class="hljs-type">int</span> startdb, enddb;    <span class="hljs-keyword">if</span> (dbnum == <span class="hljs-number">-1</span>) &#123;        startdb = <span class="hljs-number">0</span>;        enddb = <span class="hljs-keyword">server</span>.dbnum<span class="hljs-number">-1</span>;    &#125; <span class="hljs-keyword">else</span> &#123;        startdb = enddb = dbnum;    &#125;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = startdb; j &lt;= enddb; j++) &#123;        removed += dictSize(<span class="hljs-keyword">server</span>.db[j].dict);        <span class="hljs-keyword">if</span> (async) &#123;            emptyDbAsync(&amp;<span class="hljs-keyword">server</span>.db[j]);        &#125; <span class="hljs-keyword">else</span> &#123;            dictEmpty(<span class="hljs-keyword">server</span>.db[j].dict,callback);            dictEmpty(<span class="hljs-keyword">server</span>.db[j].expires,callback);        &#125;    &#125;    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">server</span>.cluster_enabled) &#123;        <span class="hljs-keyword">if</span> (async) &#123;            slotToKeyFlushAsync();        &#125; <span class="hljs-keyword">else</span> &#123;            slotToKeyFlush();        &#125;    &#125;    <span class="hljs-keyword">if</span> (dbnum == <span class="hljs-number">-1</span>) flushSlaveKeysWithExpireList();    <span class="hljs-keyword">return</span> removed;&#125;</code></pre></li><li><p>step4 wait for child process</p></li></ul><pre><code class="hljs reasonml"><span class="hljs-comment">//</span><span class="hljs-built_in">int</span> server<span class="hljs-constructor">Cron(<span class="hljs-params">struct</span> <span class="hljs-params">aeEventLoop</span> <span class="hljs-operator">*</span><span class="hljs-params">eventLoop</span>, <span class="hljs-params">long</span> <span class="hljs-params">long</span> <span class="hljs-params">id</span>, <span class="hljs-params">void</span> <span class="hljs-operator">*</span><span class="hljs-params">clientData</span>)</span> &#123;    <span class="hljs-built_in">int</span> statloc  <span class="hljs-keyword">if</span> ((pid = wait3(&amp;statloc,WNOHANG,NULL)) != <span class="hljs-number">0</span>) &#123;            <span class="hljs-built_in">int</span> exitcode = <span class="hljs-constructor">WEXITSTATUS(<span class="hljs-params">statloc</span>)</span>;            <span class="hljs-built_in">int</span> bysignal = <span class="hljs-number">0</span>;            <span class="hljs-keyword">if</span> (<span class="hljs-constructor">WIFSIGNALED(<span class="hljs-params">statloc</span>)</span>) bysignal = <span class="hljs-constructor">WTERMSIG(<span class="hljs-params">statloc</span>)</span>;            <span class="hljs-keyword">if</span> (pid<span class="hljs-operator"> == </span>-<span class="hljs-number">1</span>) &#123;                <span class="hljs-comment">// error output</span>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (pid<span class="hljs-operator"> == </span>server.rdb_child_pid) &#123;                <span class="hljs-comment">//each do bgsave ,server will store child pid </span>                background<span class="hljs-constructor">SaveDoneHandler(<span class="hljs-params">exitcode</span>,<span class="hljs-params">bysignal</span>)</span>                &#123;                     switch(server.rdb_child_type) &#123;                        case RDB_CHILD_TYPE_DISK:                            background<span class="hljs-constructor">SaveDoneHandlerDisk(<span class="hljs-params">exitcode</span>,<span class="hljs-params">bysignal</span>)</span>                            &#123;                                update<span class="hljs-constructor">SlavesWaitingBgsave((!<span class="hljs-params">bysignal</span> <span class="hljs-operator">&amp;&amp;</span> <span class="hljs-params">exitcode</span> <span class="hljs-operator">==</span> 0)</span> ? C_OK : C_ERR, RDB_CHILD_TYPE_DISK)&#123;                                   <span class="hljs-keyword">if</span> (slave-&gt;replstate<span class="hljs-operator"> == </span>SLAVE_STATE_WAIT_BGSAVE_START) &#123;                                      <span class="hljs-comment">//</span>                                   &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (slave-&gt;replstate<span class="hljs-operator"> == </span>SLAVE_STATE_WAIT_BGSAVE_END) &#123;                                      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">type</span><span class="hljs-operator"> == </span>RDB_CHILD_TYPE_SOCKET) &#123;                                      <span class="hljs-comment">// update slave info</span>                                         slave-&gt;replstate = SLAVE_STATE_ONLINE;                                          slave-&gt;repl_put_online_on_ack = <span class="hljs-number">1</span>;                                          slave-&gt;repl_ack_time = server.unixtime; <span class="hljs-comment">/* Timeout otherwise. *</span><span class="hljs-comment">                                      &#125;else&#123;</span><span class="hljs-comment">                                           listRewind(server.slaves,&amp;li);</span><span class="hljs-comment">                                           while((ln = listNext(&amp;li))) &#123;</span><span class="hljs-comment">                                              client *slave = ln-&gt;value;</span><span class="hljs-comment">                                             //sendBulkToSlave:send maser rdb.dump to every slave</span><span class="hljs-comment">                                             aeCreateFileEvent(server.el, slave-&gt;fd, AE_WRITABLE, sendBulkToSlave, slave);</span><span class="hljs-comment">                                      &#125;</span><span class="hljs-comment">                                  &#125;</span><span class="hljs-comment">                            break;</span><span class="hljs-comment">                        case RDB_CHILD_TYPE_SOCKET:</span><span class="hljs-comment">                            backgroundSaveDoneHandlerSocket(exitcode,bysignal)</span><span class="hljs-comment">                            &#123;</span><span class="hljs-comment">                               server.rdb_child_type = RDB_CHILD_TYPE_NONE;</span><span class="hljs-comment">                               updateSlavesWaitingBgsave((!bysignal &amp;&amp; exitcode == 0) ? C_OK : C_ERR, RDB_CHILD_TYPE_SOCKET);</span><span class="hljs-comment">                            &#125;</span><span class="hljs-comment">                            break;</span><span class="hljs-comment">                      &#125;</span><span class="hljs-comment">                  &#125;</span><span class="hljs-comment">                //read child data from parent,and check data</span><span class="hljs-comment">                if (!bysignal &amp;&amp; exitcode == 0) receiveChildInfo();</span><span class="hljs-comment">            &#125; else if (pid == server.aof_child_pid) &#123;</span><span class="hljs-comment">                backgroundRewriteDoneHandler(exitcode,bysignal);</span><span class="hljs-comment">                </span><span class="hljs-comment">                //read child data from parent,and check data</span><span class="hljs-comment">                if (!bysignal &amp;&amp; exitcode == 0) receiveChildInfo();</span><span class="hljs-comment">            &#125; else &#123;</span><span class="hljs-comment">                if (!ldbRemoveChild(pid)) &#123;</span><span class="hljs-comment">                    serverLog(LL_WARNING,</span><span class="hljs-comment">                        "Warning, detected child with unmatched pid: %ld",</span><span class="hljs-comment">                        (long)pid);</span><span class="hljs-comment">                &#125;</span><span class="hljs-comment">            &#125;</span><span class="hljs-comment">&#125;</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统调用dup和dup2区别</title>
    <link href="/2020/04/16/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8dup%E5%92%8Cdup2%E5%8C%BA%E5%88%AB/"/>
    <url>/2020/04/16/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8dup%E5%92%8Cdup2%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="dup"><a href="#dup" class="headerlink" title="dup"></a>dup</h2><ul><li>函数原型是 int dup(old_fd),把old_fd下标中的内容拷贝到当前进程文件描述符表中最小的可用位置下标空间中，open系统调用会默认返回当前进程描述符表中最小的下标作为文件描述符.dup系统调用不是原子的<h2 id="dup2"><a href="#dup2" class="headerlink" title="dup2"></a>dup2</h2></li><li>函数原型是 int dup2(new_fd,old_fd),这个操作是原子的。如果old_fd已经存在就close(old_fd),然后调用dup(new_fd),把new_fd中内容拷贝到当前进程文件描述符表中最小的下标空间中。<pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;fcntl.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FILE_NAME <span class="hljs-meta-string">"/tmp/out"</span></span><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">redirect_stdout_without_dup</span><span class="hljs-params">()</span> </span>&#123;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"pid=%d\n"</span>, getpid());  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str = <span class="hljs-string">"my dup\n"</span>;  <span class="hljs-comment">//关闭 stdout</span>  <span class="hljs-built_in">close</span>(<span class="hljs-number">1</span>);  <span class="hljs-comment">//当前process中描述符表中最小可用的下标是1，因为刚刚关闭</span>  <span class="hljs-keyword">int</span> fd = <span class="hljs-built_in">open</span>(FILE_NAME, O_RDWR | O_CREAT | O_TRUNC, <span class="hljs-number">0666</span>);  <span class="hljs-keyword">if</span> (fd &gt; <span class="hljs-number">0</span>) &#123;    <span class="hljs-comment">// stdout 在每个进程描述表中的下标为1</span>    <span class="hljs-comment">//此时，数据是写到了刚刚打开的fd中，新打开的fd返回的是1</span>    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">" open fd=%d\n"</span>, fd);    <span class="hljs-comment">// write 操作也是写到fd=1中，当前进程中文件描述符为1的并不是标准输出</span>    <span class="hljs-built_in">write</span>(fd, str, <span class="hljs-built_in">strlen</span>(str));    <span class="hljs-built_in">close</span>(<span class="hljs-number">1</span>);  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">redirect_stdout_with_dup</span><span class="hljs-params">()</span> </span>&#123;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"pid=%d\n"</span>, getpid());  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str = <span class="hljs-string">"my dup"</span>;  <span class="hljs-comment">//默认打开fd，在当前进程描述表中fd并不是&#123;0，1，2&#125;</span>  <span class="hljs-keyword">int</span> fd = <span class="hljs-built_in">open</span>(FILE_NAME, O_RDWR | O_CREAT | O_TRUNC, <span class="hljs-number">0666</span>);  <span class="hljs-keyword">if</span> (fd &gt; <span class="hljs-number">0</span>) &#123;    <span class="hljs-comment">//关闭标准的输出的文件描述符</span>    <span class="hljs-built_in">close</span>(<span class="hljs-number">1</span>);    <span class="hljs-comment">//拷贝fd到当前进程描述符中最小的下标位置，当前最小的下标应该是刚刚关闭的1</span>    dup(fd);    <span class="hljs-comment">// fprintf的内容写入到了fd中，并没有写入到标准输出中</span>    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">" open fd=%d\n"</span>, fd);    <span class="hljs-built_in">write</span>(fd, str, <span class="hljs-built_in">strlen</span>(str));    <span class="hljs-comment">//关闭当前文件描述符</span>    <span class="hljs-built_in">close</span>(fd);  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">redirect_stdout_with_dup2</span><span class="hljs-params">()</span> </span>&#123;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"pid=%d\n"</span>, getpid());  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str = <span class="hljs-string">"i'm dup2\n"</span>;  <span class="hljs-comment">//打开一个新的文件描述符</span>  <span class="hljs-keyword">int</span> fd = <span class="hljs-built_in">open</span>(FILE_NAME, O_RDWR | O_CREAT | O_TRUNC, <span class="hljs-number">0666</span>);  <span class="hljs-keyword">if</span> (fd &gt; <span class="hljs-number">0</span>) &#123;    <span class="hljs-comment">//如果1号文件描述符是打开状态，就关闭1号文件描述符</span>    <span class="hljs-comment">//把当前进程中文件描述符表中下标为fd的指针拷贝下标为1的空间</span>    <span class="hljs-comment">//如果fd==1就直接返回fd</span>    dup2(fd, <span class="hljs-number">1</span>); <span class="hljs-comment">// equals: close(1) and dup(fd)</span>    <span class="hljs-comment">// fd和1号文件描述符指向相同的文件结构体指针</span>    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"%d already redirect to stdout\n"</span>, fd);    <span class="hljs-built_in">write</span>(fd, str, <span class="hljs-built_in">strlen</span>(str));    <span class="hljs-comment">//刷盘操作</span>    <span class="hljs-keyword">if</span> (fd != <span class="hljs-number">1</span>) &#123;      <span class="hljs-built_in">close</span>(fd);    &#125;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;  <span class="hljs-comment">/*</span><span class="hljs-comment">redirect_stdout_without_dup();</span><span class="hljs-comment">redirect_stdout_with_dup();</span><span class="hljs-comment">*/</span>  redirect_stdout_with_dup2();  <span class="hljs-keyword">for</span> (;;) &#123;    sleep(<span class="hljs-number">1</span>);  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><img src="/2020/04/16/Linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8dup%E5%92%8Cdup2%E5%8C%BA%E5%88%AB/2582954-114c3951ba781a8b.png" srcset="/img/loading.gif" alt></li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li>从上图的信息来看，标准输出1 被重定向到/tmp/out.lsof可以看出当前进程文件描述符表中打开的文件描述符。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>fork之前的缓冲区问题</title>
    <link href="/2020/04/16/fork%E4%B9%8B%E5%89%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E9%97%AE%E9%A2%98/"/>
    <url>/2020/04/16/fork%E4%B9%8B%E5%89%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="fork-系统调用"><a href="#fork-系统调用" class="headerlink" title="fork 系统调用"></a>fork 系统调用</h3><h4 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h4><ul><li>fork()  creates  a  new process by duplicating the calling process.  The new process, referred to as the child, is an exact duplicate of the calling process<h4 id="代码例子"><a href="#代码例子" class="headerlink" title="代码例子"></a>代码例子</h4><pre><code class="hljs cpp"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: fork0.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Tue 11 Jun 2019 10:27:20 AM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdbool.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;getopt.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">usage</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *s)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%s -f &#123;0 | 1&#125;\n"</span>, s);  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"   1  -- force flush all opened stream before fork\n"</span>);  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"   0  -- not flush all opened stream before fork\n"</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">is_number</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">NULL</span>)  &#123;    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;  &#125;  <span class="hljs-keyword">while</span> (*s != <span class="hljs-string">'\0'</span>)  &#123;    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isdigit</span>(*s++) == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> *argv[])</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">if</span> (argc != <span class="hljs-number">3</span>)  &#123;    usage(argv[<span class="hljs-number">0</span>]);    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  &#125;  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *cmd_parse_fmt = <span class="hljs-string">"f:"</span>;  <span class="hljs-keyword">char</span> ch;  <span class="hljs-keyword">int</span> force_flush_flag = <span class="hljs-number">0</span>;  <span class="hljs-keyword">while</span> ((ch = getopt(argc, argv, cmd_parse_fmt)) != <span class="hljs-number">-1</span>)  &#123;    <span class="hljs-keyword">switch</span> (ch)    &#123;    <span class="hljs-keyword">case</span> <span class="hljs-string">'f'</span>:      <span class="hljs-keyword">if</span> (!is_number(optarg))      &#123;        force_flush_flag = <span class="hljs-number">-1</span>;      &#125;      <span class="hljs-keyword">else</span>      &#123;        force_flush_flag = atoi(optarg);      &#125;      <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">default</span>:      <span class="hljs-keyword">break</span>;    &#125;  &#125;  <span class="hljs-keyword">if</span> (force_flush_flag &gt; <span class="hljs-number">1</span> || force_flush_flag &lt; <span class="hljs-number">0</span>)  &#123;    usage(argv[<span class="hljs-number">0</span>]);    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  &#125;  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"flush opened stream :%d\n"</span>, force_flush_flag);  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"[%ld]begin\n"</span>, getpid());  <span class="hljs-keyword">pid_t</span> pid;  <span class="hljs-keyword">if</span> (force_flush_flag == <span class="hljs-number">1</span>)  &#123;    fflush(<span class="hljs-literal">NULL</span>);  &#125;  <span class="hljs-keyword">if</span> ((pid = fork()) &lt; <span class="hljs-number">0</span>)  &#123;    perror(<span class="hljs-string">"fork"</span>);    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  &#125;  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">0</span>)  &#123;    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"[%ld] child process working\n"</span>, getpid());    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  &#125;  <span class="hljs-keyword">else</span>  &#123;    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"[%ld] parent process working\n"</span>, getpid());  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></li></ul><h4 id="标准输出"><a href="#标准输出" class="headerlink" title="标准输出"></a>标准输出</h4><p><img src="/2020/04/16/fork%E4%B9%8B%E5%89%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E9%97%AE%E9%A2%98/2582954-efab53de7a749c60.png" srcset="/img/loading.gif" alt></p><ul><li>标准输出 红色标记的都是输出一个。</li></ul><h4 id="文件输出"><a href="#文件输出" class="headerlink" title="文件输出"></a>文件输出</h4><p><img src="/2020/04/16/fork%E4%B9%8B%E5%89%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E9%97%AE%E9%A2%98/2582954-cfdbfc9753b23360.png" srcset="/img/loading.gif" alt></p><ul><li>文件输出 f=1和f=0 结果完全不同，这是为什么？</li></ul><h4 id="标准输出和文件输出"><a href="#标准输出和文件输出" class="headerlink" title="标准输出和文件输出"></a>标准输出和文件输出</h4><ul><li>标准输入输出是行缓冲模式(\n,强制输出)，在终端执行fork之前的printf，都是执行一次。</li><li>文件输入输出是全缓冲模式(buffer到了指定的size，才会输出)</li><li>当执行 test_fork -f 0重定向文件 时候，父进程执行fork之后，父子进程的地址空间是cow,没有任何改动的前提下，都是执行同一个地址空间。此时，父子进程执行的缓冲区都是一模一样，所以可以看到父子进程都会执行fork之前的printf.所以文件看到的是2个”flush opened stream :0”和”[92741]begin”.</li><li>当f=1，重定向文件时候可以看到，父子进程仅仅执行一次 “flush opened stream :1”和”[92741]begin”.原因在于f=1的时候会在父进程fork之前执行fflush(NULL),此时执行这个函数目的在于强制flush所有的已经打开的stream.</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfsd启动过程</title>
    <link href="/2020/04/16/glusterfsd%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/"/>
    <url>/2020/04/16/glusterfsd%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h6 id="0-存在的疑惑"><a href="#0-存在的疑惑" class="headerlink" title="0.存在的疑惑"></a>0.存在的疑惑</h6><ul><li>glusterd启动后怎么把glusterfsd的brick进程拉起来？</li><li>glusterfsd启动的参数从哪里获取？</li><li>glusterfsd如何加载的呢？</li><li>glusterfsd和glusterd启动后各自都是什么角色？(后续再讨论)<h6 id="1-glusterfs的入口函数解释"><a href="#1-glusterfs的入口函数解释" class="headerlink" title="1. glusterfs的入口函数解释"></a>1. glusterfs的入口函数解释</h6></li><li>glusterfsd中main方法加载xlator {name = 0x687dd0 “management”, type = 0x687f50 “mgmt/glusterd”}，然后fork一个子进程加载mgmt/glusterd中的init方法<h6 id="2-glusterd启动过程"><a href="#2-glusterd启动过程" class="headerlink" title="2.glusterd启动过程"></a>2.glusterd启动过程</h6></li><li>子进程中调用mgmt/glusterd对应源文件中glusterd.c中的init,针对glusterd进行初始化，依次会调用如下方法:<ul><li>glusterfs_volumes_init   </li><li>glusterd.c:init</li><li>glusterd_spawn_daemons</li><li>glusterd_restart_bricks</li><li>glusterd_brick_start</li><li>glusterd_volume_start_glusterfs</li><li>runner_run</li><li>runner_start:fork子进程，调用execvp加载/usr/local/sbin/glusterfsd二进制文件<pre><code class="hljs reasonml"> <span class="hljs-built_in">int</span> runner<span class="hljs-constructor">_start(<span class="hljs-params">runner_t</span> <span class="hljs-operator">*</span><span class="hljs-params">runner</span>)</span> &#123;        <span class="hljs-comment">//-----忽略----------------</span>execvp(runner-&gt;argv<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>, runner-&gt;argv);        <span class="hljs-comment">//-----忽略----------------</span> &#125;</code></pre><h6 id="3-glusterfsd如何加载xlator"><a href="#3-glusterfsd如何加载xlator" class="headerlink" title="3.glusterfsd如何加载xlator"></a>3.glusterfsd如何加载xlator</h6></li></ul></li><li>glusterfsd是通过读取配置文件/var/lib/glusterd/vols/dht_vol/dht_vol.172.17.0.2.data-brick.vol来加载glusterfsd运行期间需要的xlator，这些配置信息是用户创建volume时候系统生成的<br><img src="/2020/04/16/glusterfsd%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/2582954-d6d03fa2881d4dfe.png" srcset="/img/loading.gif" alt></li></ul><h6 id="4-glusterd启动后进程列表"><a href="#4-glusterd启动后进程列表" class="headerlink" title="4. glusterd启动后进程列表"></a>4. glusterd启动后进程列表</h6><ul><li>runner_start后继续glusterfsd.c中的main方法，启动对应的服务，glusterfsd正式启动了，就如systemctl start glusterd后出现如下的结果:<br><img src="/2020/04/16/glusterfsd%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/2582954-bb00ca85ed37cff0.png" srcset="/img/loading.gif" alt></li></ul><h6 id="5-glusterfsd启动流程"><a href="#5-glusterfsd启动流程" class="headerlink" title="5.glusterfsd启动流程"></a>5.glusterfsd启动流程</h6><ul><li>上个步骤通过runner_start加载glusterfsd的二进制进程，glusterfsd进入初始化节点，首先 glusterfs_listener_init 初始化tcp连接</li><li>glusterfsd通过tcp连接到glusterd获取volume xlator信息，准备构建xlator的graph.</li></ul><pre><code class="hljs taggerscript">volume xlator信息如下:(gdb) p rsp.spec       $6 = 0x7fffe4002fc0 "volume dht_vol-posix<span class="hljs-symbol">\n</span>    type storage/posix<span class="hljs-symbol">\n</span>    option shared-brick-count 1<span class="hljs-symbol">\n</span>    option volume-id 25305c2d-317f-45e9-8e60-be322ed69ee1<span class="hljs-symbol">\n</span>    option directory /data/brick<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-trash<span class="hljs-symbol">\n</span>    type features/trash<span class="hljs-symbol">\n</span>    option trash-internal-op off<span class="hljs-symbol">\n</span>    option brick-path /data/brick<span class="hljs-symbol">\n</span>    option trash-dir .trashcan<span class="hljs-symbol">\n</span>    subvolumes dht_vol-posix<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-changelog<span class="hljs-symbol">\n</span>    type features/changelog<span class="hljs-symbol">\n</span>    option changelog-barrier-timeout 120<span class="hljs-symbol">\n</span>    option changelog-dir /data/brick/.glusterfs/changelogs<span class="hljs-symbol">\n</span>    option changelog-brick /data/brick<span class="hljs-symbol">\n</span>    subvolumes dht_vol-trash<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-bitrot-stub<span class="hljs-symbol">\n</span>    type features/bitrot-stub<span class="hljs-symbol">\n</span>    option bitrot disable<span class="hljs-symbol">\n</span>    option export /data/brick<span class="hljs-symbol">\n</span>    subvolumes dht_vol-changelog<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-access-control<span class="hljs-symbol">\n</span>    type features/access-control<span class="hljs-symbol">\n</span>    subvolumes dht_vol-bitrot-stub<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-locks<span class="hljs-symbol">\n</span>    type features/locks<span class="hljs-symbol">\n</span>    option enforce-mandatory-lock off<span class="hljs-symbol">\n</span>    subvolumes dht_vol-access-control<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-worm<span class="hljs-symbol">\n</span>    type features/worm<span class="hljs-symbol">\n</span>    option worm-files-deletable on<span class="hljs-symbol">\n</span>    option worm-file-level off<span class="hljs-symbol">\n</span>    option worm off<span class="hljs-symbol">\n</span>    subvolumes dht_vol-locks<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-read-only<span class="hljs-symbol">\n</span>    type features/read-only<span class="hljs-symbol">\n</span>    option read-only off<span class="hljs-symbol">\n</span>    subvolumes dht_vol-worm<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-leases<span class="hljs-symbol">\n</span>    type features/leases<span class="hljs-symbol">\n</span>    option leases off<span class="hljs-symbol">\n</span>    subvolumes dht_vol-read-only<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-upcall<span class="hljs-symbol">\n</span>    type features/upcall<span class="hljs-symbol">\n</span>    option cache-invalidation off<span class="hljs-symbol">\n</span>    subvolumes dht_vol-leases<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-io-threads<span class="hljs-symbol">\n</span>    type performance/io-threads<span class="hljs-symbol">\n</span>    subvolumes dht_vol-upcall<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-selinux<span class="hljs-symbol">\n</span>    type features/selinux<span class="hljs-symbol">\n</span>    option selinux on<span class="hljs-symbol">\n</span>    subvolumes dht_vol-io-threads<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-marker<span class="hljs-symbol">\n</span>    type features/marker<span class="hljs-symbol">\n</span>    option inode-quota off<span class="hljs-symbol">\n</span>    option quota off<span class="hljs-symbol">\n</span>    option gsync-force-xtime off<span class="hljs-symbol">\n</span>    option xtime off<span class="hljs-symbol">\n</span>    option quota-version 0<span class="hljs-symbol">\n</span>    option timestamp-file /var/lib/glusterd/vols/dht_vol/marker.tstamp<span class="hljs-symbol">\n</span>    option volume-uuid 25305c2d-317f-45e9-8e60-be322ed69ee1<span class="hljs-symbol">\n</span>    subvolumes dht_vol-selinux<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-barrier<span class="hljs-symbol">\n</span>    type features/barrier<span class="hljs-symbol">\n</span>    option barrier-timeout 120<span class="hljs-symbol">\n</span>    option barrier disable<span class="hljs-symbol">\n</span>    subvolumes dht_vol-marker<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-index<span class="hljs-symbol">\n</span>    type features/index<span class="hljs-symbol">\n</span>    option xattrop-pending-watchlist trusted.afr.dht_vol-<span class="hljs-symbol">\n</span>    option xattrop-dirty-watchlist trusted.afr.dirty<span class="hljs-symbol">\n</span>    option index-base /data/brick/.glusterfs/indices<span class="hljs-symbol">\n</span>    subvolumes dht_vol-barrier<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-quota<span class="hljs-symbol">\n</span>    type features/quota<span class="hljs-symbol">\n</span>    option deem-statfs off<span class="hljs-symbol">\n</span>    option server-quota off<span class="hljs-symbol">\n</span>    option volume-uuid dht_vol<span class="hljs-symbol">\n</span>    subvolumes dht_vol-index<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-io-stats<span class="hljs-symbol">\n</span>    type debug/io-stats<span class="hljs-symbol">\n</span>    option count-fop-hits off<span class="hljs-symbol">\n</span>    option latency-measurement off<span class="hljs-symbol">\n</span>    option log-level INFO<span class="hljs-symbol">\n</span>    option unique-id /data/brick<span class="hljs-symbol">\n</span>    subvolumes dht_vol-quota<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume /data/brick<span class="hljs-symbol">\n</span>    type performance/decompounder<span class="hljs-symbol">\n</span>    subvolumes dht_vol-io-stats<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span><span class="hljs-symbol">\n</span>volume dht_vol-server<span class="hljs-symbol">\n</span>    type protocol/server<span class="hljs-symbol">\n</span>    option transport.listen-backlog 1024<span class="hljs-symbol">\n</span>    option transport.socket.keepalive-count 9<span class="hljs-symbol">\n</span>    option transport.socket.keepalive-interval 2<span class="hljs-symbol">\n</span>    option transport.socket.keepalive-time 20<span class="hljs-symbol">\n</span>    option transport.socket.ssl-enabled off<span class="hljs-symbol">\n</span>    option transport.socket.keepalive 1<span class="hljs-symbol">\n</span>    option auth.addr./data/brick.allow *<span class="hljs-symbol">\n</span>    option auth-path /data/brick<span class="hljs-symbol">\n</span>    option auth.login.b26ac1fd-40a4-4c6e-b211-a9f2b58beedc.password 4eda9afe-9466-4283-b175-6020d5981994<span class="hljs-symbol">\n</span>    option auth.login./data/brick.allow b26ac1fd-40a4-4c6e-b211-a9f2b58beedc<span class="hljs-symbol">\n</span>    option transport.address-family inet<span class="hljs-symbol">\n</span>    option transport-type tcp<span class="hljs-symbol">\n</span>    subvolumes /data/brick<span class="hljs-symbol">\n</span>end-volume<span class="hljs-symbol">\n</span>"</code></pre><ul><li>根据xlator获取初构建graph信息，初始化每个xlator的init方法，这个时候glusterfsd初始化成功<h6 id="6-gdb-调试方法"><a href="#6-gdb-调试方法" class="headerlink" title="6. gdb 调试方法"></a>6. gdb 调试方法</h6></li><li>gdb break 信息<pre><code class="hljs vim"><span class="hljs-keyword">set</span> <span class="hljs-keyword">print</span> pretty <span class="hljs-keyword">on</span>//调试子进程,子进程会加载执行mgmt/glusterd/src/glusterd.<span class="hljs-keyword">c</span>:init<span class="hljs-keyword">set</span> follow-fork-<span class="hljs-keyword">mode</span> child  <span class="hljs-keyword">set</span> detach-<span class="hljs-keyword">on</span>-fork off<span class="hljs-keyword">br</span> glusterfsd.<span class="hljs-keyword">c</span>:main<span class="hljs-keyword">br</span>  <span class="hljs-keyword">br</span> glusterfs_volumes_init   //glusterd和glusterfsd都会调用该方法<span class="hljs-keyword">br</span> glusterd.<span class="hljs-keyword">c</span>:init//------ 进入init函数后执行如下------/* 进入这个函数后设置调试父进程     <span class="hljs-keyword">set</span> follow-fork-<span class="hljs-keyword">mode</span> parent  <span class="hljs-keyword">set</span> detach-<span class="hljs-keyword">on</span>-fork <span class="hljs-keyword">on</span> */<span class="hljs-keyword">br</span> glusterd_spawn_daemons<span class="hljs-keyword">br</span> glusterd_restart_bricks<span class="hljs-keyword">br</span> glusterd_brick_start<span class="hljs-keyword">br</span> glusterd_volume_start_glusterfs/* 进入这个函数后设置调试父进程     <span class="hljs-keyword">set</span> follow-fork-<span class="hljs-keyword">mode</span> child  <span class="hljs-keyword">set</span> detach-<span class="hljs-keyword">on</span>-fork <span class="hljs-keyword">on</span> */<span class="hljs-keyword">br</span> runner_run<span class="hljs-keyword">br</span> runner_log<span class="hljs-keyword">br</span> runner_start /** 进入runner_start 后设置如下断点，glusterfsd启动以后会按照如下的调用链进行 */<span class="hljs-keyword">br</span> glusterfs_volumes_init   <span class="hljs-keyword">br</span> glusterfs_listener_init  //glusterd不会调用该方法<span class="hljs-keyword">br</span> glusterfs_mgmt_init      //glusterd不会调用该方法<span class="hljs-keyword">br</span> mgmt_rpc_notify<span class="hljs-keyword">br</span> glusterfs_volfile_fetch<span class="hljs-keyword">br</span> glusterfs_volfile_fetch_one<span class="hljs-keyword">br</span> mgmt_getspec_cbk <span class="hljs-keyword">br</span> glusterfs_process_volfp<span class="hljs-keyword">br</span> glusterfs_graph_activate<span class="hljs-keyword">br</span> glusterfs_graph_init</code></pre></li><li>1.glusterd gdb日志<pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>b94a78ebfc80 ~]$ gdb glusterdGNU gdb (GDB) Red Hat Enterprise Linux <span class="hljs-number">7.6</span><span class="hljs-number">.1</span><span class="hljs-number">-115.</span>el7Copyright (C) <span class="hljs-number">2013</span> Free Software Foundation, Inc.License GPLv3+: GNU GPL version <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> later &lt;http:<span class="hljs-comment">//gnu.org/licenses/gpl.html&gt;</span>This <span class="hljs-keyword">is</span> free software: you are free to change <span class="hljs-keyword">and</span> redistribute it.There <span class="hljs-keyword">is</span> NO WARRANTY, to the extent permitted by law.  Type <span class="hljs-string">"show copying"</span><span class="hljs-keyword">and</span> <span class="hljs-string">"show warranty"</span> <span class="hljs-keyword">for</span> details.This GDB was configured as <span class="hljs-string">"x86_64-redhat-linux-gnu"</span>.For bug reporting instructions, please see:&lt;http:<span class="hljs-comment">//www.gnu.org/software/gdb/bugs/&gt;...</span>Reading symbols <span class="hljs-keyword">from</span> /usr/local/sbin/glusterfsd...done.(gdb) br glusterfsd.c:mainBreakpoint <span class="hljs-number">1</span> at <span class="hljs-number">0x40b71d</span>: file glusterfsd.c, line <span class="hljs-number">2746.</span>(gdb) br glusterd.c:initNo source file named glusterd.c.Make breakpoint pending on future <span class="hljs-keyword">shared</span> library load? (y <span class="hljs-keyword">or</span> [n]) yBreakpoint <span class="hljs-number">2</span> (glusterd.c:init) pending.(gdb) <span class="hljs-keyword">set</span> print pretty on(gdb) <span class="hljs-keyword">set</span> follow-fork-mode child  (gdb) <span class="hljs-keyword">set</span> detach-on-fork off(gdb) cThe program <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> being run.(gdb) rStarting program: /usr/local/sbin/glusterd [Thread debugging using libthread_db enabled]Using host libthread_db library <span class="hljs-string">"/lib64/libthread_db.so.1"</span>.Breakpoint <span class="hljs-number">1</span>, main (argc=<span class="hljs-number">1</span>, argv=<span class="hljs-number">0x7fffffffe778</span>) at glusterfsd.c:<span class="hljs-number">2746</span><span class="hljs-number">2746</span>        glusterfs_ctx_t *ctx = NULL;Missing separate debuginfos, use: debuginfo-install glibc<span class="hljs-number">-2.17</span><span class="hljs-number">-292.</span>el7.x86_64 libuuid<span class="hljs-number">-2.23</span><span class="hljs-number">.2</span><span class="hljs-number">-61.</span>el7_7<span class="hljs-number">.1</span>.x86_64 openssl-libs<span class="hljs-number">-1.0</span><span class="hljs-number">.2</span>k<span class="hljs-number">-19.</span>el7.x86_64 zlib<span class="hljs-number">-1.2</span><span class="hljs-number">.7</span><span class="hljs-number">-18.</span>el7.x86_64(gdb) cContinuing.[New process <span class="hljs-number">956</span>][Thread debugging using libthread_db enabled]Using host libthread_db library <span class="hljs-string">"/lib64/libthread_db.so.1"</span>.[New Thread <span class="hljs-number">0x7ffff5431700</span> (LWP <span class="hljs-number">957</span>)][New Thread <span class="hljs-number">0x7ffff4c30700</span> (LWP <span class="hljs-number">958</span>)][New Thread <span class="hljs-number">0x7ffff442f700</span> (LWP <span class="hljs-number">959</span>)][New Thread <span class="hljs-number">0x7ffff3c2e700</span> (LWP <span class="hljs-number">960</span>)][New Thread <span class="hljs-number">0x7ffff342d700</span> (LWP <span class="hljs-number">961</span>)][New Thread <span class="hljs-number">0x7ffff2c2c700</span> (LWP <span class="hljs-number">962</span>)]Reading symbols <span class="hljs-keyword">from</span> /usr/local/lib/glusterfs<span class="hljs-comment">//xlator/mgmt/glusterd.so...done.</span>[Switching to Thread <span class="hljs-number">0x7ffff7fea4c0</span> (LWP <span class="hljs-number">956</span>)]Breakpoint <span class="hljs-number">2</span>, init (<span class="hljs-keyword">this</span>=<span class="hljs-number">0x686d40</span>) at glusterd.c:<span class="hljs-number">1373</span><span class="hljs-number">1373</span>        <span class="hljs-built_in">int</span>32_t ret = <span class="hljs-number">-1</span>;Missing separate debuginfos, use: debuginfo-install glibc<span class="hljs-number">-2.17</span><span class="hljs-number">-292.</span>el7.x86_64 libuuid<span class="hljs-number">-2.23</span><span class="hljs-number">.2</span><span class="hljs-number">-61.</span>el7_7<span class="hljs-number">.1</span>.x86_64 libxml2<span class="hljs-number">-2.9</span><span class="hljs-number">.1</span><span class="hljs-number">-6.</span>el7_2<span class="hljs-number">.3</span>.x86_64 openssl-libs<span class="hljs-number">-1.0</span><span class="hljs-number">.2</span>k<span class="hljs-number">-19.</span>el7.x86_64 userspace-rcu<span class="hljs-number">-0.7</span><span class="hljs-number">.16</span><span class="hljs-number">-1.</span>el7.x86_64 xz-libs<span class="hljs-number">-5.2</span><span class="hljs-number">.2</span><span class="hljs-number">-1.</span>el7.x86_64 zlib<span class="hljs-number">-1.2</span><span class="hljs-number">.7</span><span class="hljs-number">-18.</span>el7.x86_64(gdb)  <span class="hljs-keyword">set</span> follow-fork-mode parent(gdb)   <span class="hljs-keyword">set</span> detach-on-fork on(gdb) br glusterd_spawn_daemonsBreakpoint <span class="hljs-number">3</span> at <span class="hljs-number">0x7ffff1f79f85</span>: file glusterd-utils.c, line <span class="hljs-number">3619.</span>(gdb) br glusterd_restart_bricksBreakpoint <span class="hljs-number">4</span> at <span class="hljs-number">0x7ffff1f832e3</span>: file glusterd-utils.c, line <span class="hljs-number">6334.</span>(gdb) br glusterd_brick_startBreakpoint <span class="hljs-number">5</span> at <span class="hljs-number">0x7ffff1f826cd</span>: file glusterd-utils.c, line <span class="hljs-number">6107.</span>(gdb) br glusterd_volume_start_glusterfsBreakpoint <span class="hljs-number">6</span> at <span class="hljs-number">0x7ffff1f73f5f</span>: file glusterd-utils.c, line <span class="hljs-number">2024.</span>(gdb) cContinuing.Reading symbols <span class="hljs-keyword">from</span> /usr/local/lib/glusterfs<span class="hljs-comment">//rpc-transport/socket.so...done.</span>Reading symbols <span class="hljs-keyword">from</span> /usr/local/lib/glusterfs<span class="hljs-comment">//rpc-transport/rdma.so...done.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">964.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">965.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">966.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">967.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">968.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">969.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">970.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">971.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">972.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">973.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">974.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">975.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">976.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">977.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">978.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">979.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">980.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">981.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">982.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">983.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">984.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">985.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">986.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">987.</span>Detaching after fork <span class="hljs-keyword">from</span> child process <span class="hljs-number">988.</span>[Switching to Thread <span class="hljs-number">0x7ffff342d700</span> (LWP <span class="hljs-number">961</span>)]Breakpoint <span class="hljs-number">3</span>, glusterd_spawn_daemons (opaque=<span class="hljs-number">0x0</span>) at glusterd-utils.c:<span class="hljs-number">3619</span><span class="hljs-number">3619</span>        glusterd_conf_t *conf = THIS-&gt;<span class="hljs-keyword">private</span>;Missing separate debuginfos, use: debuginfo-install keyutils-libs<span class="hljs-number">-1.5</span><span class="hljs-number">.8</span><span class="hljs-number">-3.</span>el7.x86_64 krb5-libs<span class="hljs-number">-1.15</span><span class="hljs-number">.1</span><span class="hljs-number">-37.</span>el7_7<span class="hljs-number">.2</span>.x86_64 libcom_err<span class="hljs-number">-1.42</span><span class="hljs-number">.9</span><span class="hljs-number">-16.</span>el7.x86_64 libibverbs<span class="hljs-number">-22.1</span><span class="hljs-number">-3.</span>el7.x86_64 libnl3<span class="hljs-number">-3.2</span><span class="hljs-number">.28</span><span class="hljs-number">-4.</span>el7.x86_64 librdmacm<span class="hljs-number">-22.1</span><span class="hljs-number">-3.</span>el7.x86_64 libselinux<span class="hljs-number">-2.5</span><span class="hljs-number">-14.1</span>.el7.x86_64 pcre<span class="hljs-number">-8.32</span><span class="hljs-number">-17.</span>el7.x86_64(gdb) n<span class="hljs-number">3620</span>        <span class="hljs-built_in">int</span> ret = <span class="hljs-number">-1</span>;(gdb) <span class="hljs-number">3622</span>        synclock_lock(&amp;conf-&gt;big_lock);(gdb) [New Thread <span class="hljs-number">0x7fffef606700</span> (LWP <span class="hljs-number">989</span>)]<span class="hljs-number">3623</span>        glusterd_restart_bricks();(gdb) Breakpoint <span class="hljs-number">4</span>, glusterd_restart_bricks (opaque=<span class="hljs-number">0x7fffef9a9fc8</span>) at glusterd-utils.c:<span class="hljs-number">6334</span><span class="hljs-number">6334</span>        <span class="hljs-built_in">int</span> ret = <span class="hljs-number">0</span>;(gdb) <span class="hljs-number">6335</span>        glusterd_volinfo_t *volinfo = NULL;(gdb) <span class="hljs-number">6336</span>        glusterd_brickinfo_t *brickinfo = NULL;(gdb)   <span class="hljs-keyword">set</span> follow-fork-mode child(gdb)   <span class="hljs-keyword">set</span> detach-on-fork on(gdb) br runner_runBreakpoint <span class="hljs-number">7</span> at <span class="hljs-number">0x7ffff7b35f04</span>: runner_run. (<span class="hljs-number">2</span> locations)(gdb) br runner_startBreakpoint <span class="hljs-number">8</span> at <span class="hljs-number">0x7ffff7b35825</span>: runner_start. (<span class="hljs-number">2</span> locations)(gdb) info <span class="hljs-keyword">break</span>Num     Type           Disp Enb Address            What<span class="hljs-number">1</span>       breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">1.1</span>                         y     <span class="hljs-number">0x000000000040b71d</span> <span class="hljs-keyword">in</span> main at glusterfsd.c:<span class="hljs-number">2746</span> inf <span class="hljs-number">1</span><span class="hljs-number">1.2</span>                         y     <span class="hljs-number">0x000000000040b71d</span> <span class="hljs-keyword">in</span> main at glusterfsd.c:<span class="hljs-number">2746</span> inf <span class="hljs-number">2</span><span class="hljs-number">2</span>       breakpoint     keep y   <span class="hljs-number">0x00007ffff1f3a7ee</span> <span class="hljs-keyword">in</span> init at glusterd.c:<span class="hljs-number">1373</span> inf <span class="hljs-number">2</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">3</span>       breakpoint     keep y   <span class="hljs-number">0x00007ffff1f79f85</span> <span class="hljs-keyword">in</span> glusterd_spawn_daemons at glusterd-utils.c:<span class="hljs-number">3619</span> inf <span class="hljs-number">2</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">4</span>       breakpoint     keep y   <span class="hljs-number">0x00007ffff1f832e3</span> <span class="hljs-keyword">in</span> glusterd_restart_bricks at glusterd-utils.c:<span class="hljs-number">6334</span> inf <span class="hljs-number">2</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">5</span>       breakpoint     keep y   <span class="hljs-number">0x00007ffff1f826cd</span> <span class="hljs-keyword">in</span> glusterd_brick_start at glusterd-utils.c:<span class="hljs-number">6107</span> inf <span class="hljs-number">2</span><span class="hljs-number">6</span>       breakpoint     keep y   <span class="hljs-number">0x00007ffff1f73f5f</span> <span class="hljs-keyword">in</span> glusterd_volume_start_glusterfs at glusterd-utils.c:<span class="hljs-number">2024</span> inf <span class="hljs-number">2</span><span class="hljs-number">7</span>       breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">7.1</span>                         y     <span class="hljs-number">0x00007ffff7b35f04</span> <span class="hljs-keyword">in</span> runner_run at run.c:<span class="hljs-number">430</span> inf <span class="hljs-number">1</span><span class="hljs-number">7.2</span>                         y     <span class="hljs-number">0x00007ffff7b35f04</span> <span class="hljs-keyword">in</span> runner_run at run.c:<span class="hljs-number">430</span> inf <span class="hljs-number">2</span><span class="hljs-number">8</span>       breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">8.1</span>                         y     <span class="hljs-number">0x00007ffff7b35825</span> <span class="hljs-keyword">in</span> runner_start at run.c:<span class="hljs-number">259</span> inf <span class="hljs-number">1</span><span class="hljs-number">8.2</span>                         y     <span class="hljs-number">0x00007ffff7b35825</span> <span class="hljs-keyword">in</span> runner_start at run.c:<span class="hljs-number">259</span> inf <span class="hljs-number">2</span>(gdb) cContinuing.Breakpoint <span class="hljs-number">5</span>, glusterd_brick_start (volinfo=<span class="hljs-number">0x6db4b0</span>, brickinfo=<span class="hljs-number">0x6ef490</span>, wait=<span class="hljs-literal">false</span>, only_connect=<span class="hljs-literal">false</span>) at glusterd-utils.c:<span class="hljs-number">6107</span><span class="hljs-number">6107</span>        <span class="hljs-built_in">int</span> ret = <span class="hljs-number">-1</span>;(gdb) cContinuing.[New Thread <span class="hljs-number">0x7fffeee05700</span> (LWP <span class="hljs-number">991</span>)]Breakpoint <span class="hljs-number">6</span>, glusterd_volume_start_glusterfs (volinfo=<span class="hljs-number">0x6db4b0</span>, brickinfo=<span class="hljs-number">0x6ef490</span>, wait=<span class="hljs-literal">false</span>) at glusterd-utils.c:<span class="hljs-number">2024</span><span class="hljs-number">2024</span>        <span class="hljs-built_in">int</span>32_t ret = <span class="hljs-number">-1</span>;(gdb) cContinuing.[New process <span class="hljs-number">992</span>][Thread debugging using libthread_db enabled]Using host libthread_db library <span class="hljs-string">"/lib64/libthread_db.so.1"</span>.[Switching to Thread <span class="hljs-number">0x7ffff342d700</span> (LWP <span class="hljs-number">992</span>)]Breakpoint <span class="hljs-number">8</span>, runner_start (runner=<span class="hljs-number">0x7fffef800e00</span>) at run.c:<span class="hljs-number">259</span><span class="hljs-number">259</span>         <span class="hljs-built_in">int</span> pi[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>] = &#123;&#123;<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>&#125;, &#123;<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>&#125;, &#123;<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>&#125;&#125;;(gdb) n<span class="hljs-number">261</span>         <span class="hljs-built_in">int</span> ret = <span class="hljs-number">0</span>;(gdb) <span class="hljs-number">262</span>         <span class="hljs-built_in">int</span> errno_priv = <span class="hljs-number">0</span>;(gdb) <span class="hljs-number">263</span>         <span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>;(gdb) <span class="hljs-number">266</span>         <span class="hljs-keyword">if</span> (runner-&gt;runerr || !runner-&gt;argv) &#123;(gdb) <span class="hljs-number">271</span>         GF_ASSERT(runner-&gt;argv[<span class="hljs-number">0</span>]);(gdb)  <span class="hljs-keyword">set</span> follow-fork-mode child(gdb)   <span class="hljs-keyword">set</span> detach-on-fork on(gdb) n<span class="hljs-number">276</span>         ret = pipe(xpi);(gdb) <span class="hljs-number">277</span>         <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">-1</span>)(gdb) <span class="hljs-number">278</span>             ret = fcntl(xpi[<span class="hljs-number">1</span>], F_SETFD, FD_CLOEXEC);(gdb) <span class="hljs-number">280</span>         <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;(gdb) <span class="hljs-number">281</span>             <span class="hljs-keyword">if</span> (runner-&gt;chfd[i] != <span class="hljs-number">-2</span>)(gdb) <span class="hljs-number">282</span>                 <span class="hljs-keyword">continue</span>;(gdb) <span class="hljs-number">280</span>         <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;(gdb) <span class="hljs-number">281</span>             <span class="hljs-keyword">if</span> (runner-&gt;chfd[i] != <span class="hljs-number">-2</span>)(gdb) <span class="hljs-number">282</span>                 <span class="hljs-keyword">continue</span>;(gdb) <span class="hljs-number">280</span>         <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;(gdb) <span class="hljs-number">281</span>             <span class="hljs-keyword">if</span> (runner-&gt;chfd[i] != <span class="hljs-number">-2</span>)(gdb) <span class="hljs-number">282</span>                 <span class="hljs-keyword">continue</span>;(gdb) <span class="hljs-number">280</span>         <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;(gdb) <span class="hljs-number">291</span>         <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">-1</span>)(gdb) <span class="hljs-number">292</span>             runner-&gt;chpid = fork();(gdb) [New process <span class="hljs-number">995</span>][Thread debugging using libthread_db enabled]Using host libthread_db library <span class="hljs-string">"/lib64/libthread_db.so.1"</span>.[Switching to Thread <span class="hljs-number">0x7ffff342d700</span> (LWP <span class="hljs-number">995</span>)]<span class="hljs-number">293</span>         <span class="hljs-keyword">switch</span> (runner-&gt;chpid) &#123;<span class="hljs-number">327</span>                 <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">-1</span>) &#123;(gdb) <span class="hljs-number">328</span>                     <span class="hljs-built_in">int</span> fdv[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, xpi[<span class="hljs-number">1</span>]&#125;;(gdb) <span class="hljs-number">330</span>                     ret = close_fds_except(fdv, sizeof(fdv) / sizeof(*fdv));(gdb) <span class="hljs-number">333</span>                 <span class="hljs-keyword">if</span> (ret != <span class="hljs-number">-1</span>) &#123;(gdb) <span class="hljs-number">335</span>                     sigemptyset(&amp;<span class="hljs-keyword">set</span>);(gdb) <span class="hljs-number">336</span>                     sigprocmask(SIG_SETMASK, &amp;<span class="hljs-keyword">set</span>, NULL);(gdb) <span class="hljs-number">338</span>                     execvp(runner-&gt;argv[<span class="hljs-number">0</span>], runner-&gt;argv);(gdb) p runner-&gt;argv[<span class="hljs-number">0</span>]$<span class="hljs-number">1</span> = <span class="hljs-number">0x7fffe8000c60</span> <span class="hljs-string">"/usr/local/sbin/glusterfsd"</span>(gdb) p runner-&gt;argv$<span class="hljs-number">2</span> = (char **) <span class="hljs-number">0x7fffe8000970</span>(gdb) p/s  runner-&gt;argv$<span class="hljs-number">3</span> = (char **) <span class="hljs-number">0x7fffe8000970</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">1</span>]$<span class="hljs-number">4</span> = <span class="hljs-number">0x7fffe8000ce0</span> <span class="hljs-string">"-s"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">2</span>]$<span class="hljs-number">5</span> = <span class="hljs-number">0x7fffe8000d50</span> <span class="hljs-string">"172.17.0.2"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">3</span>]$<span class="hljs-number">6</span> = <span class="hljs-number">0x7fffe8000dc0</span> <span class="hljs-string">"--volfile-id"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">4</span>]$<span class="hljs-number">7</span> = <span class="hljs-number">0x7fffe8000e30</span> <span class="hljs-string">"dht_vol.172.17.0.2.data-brick"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">5</span>]$<span class="hljs-number">8</span> = <span class="hljs-number">0x7fffe8000eb0</span> <span class="hljs-string">"-p"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">6</span>]$<span class="hljs-number">9</span> = <span class="hljs-number">0x7fffe8000f20</span> <span class="hljs-string">"/var/run/gluster/vols/dht_vol/172.17.0.2-data-brick.pid"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">7</span>]$<span class="hljs-number">10</span> = <span class="hljs-number">0x7fffe8000fc0</span> <span class="hljs-string">"-S"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">8</span>]$<span class="hljs-number">11</span> = <span class="hljs-number">0x7fffe8001030</span> <span class="hljs-string">"/var/run/gluster/cb954c564295c3be.socket"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">9</span>]$<span class="hljs-number">12</span> = <span class="hljs-number">0x7fffe80010c0</span> <span class="hljs-string">"--brick-name"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">10</span>]$<span class="hljs-number">13</span> = <span class="hljs-number">0x7fffe8001130</span> <span class="hljs-string">"/data/brick"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">11</span>]$<span class="hljs-number">14</span> = <span class="hljs-number">0x7fffe80011a0</span> <span class="hljs-string">"-l"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">12</span>]$<span class="hljs-number">15</span> = <span class="hljs-number">0x7fffe8001210</span> <span class="hljs-string">"/var/log/glusterfs/bricks/data-brick.log"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">13</span>]$<span class="hljs-number">16</span> = <span class="hljs-number">0x7fffe80012a0</span> <span class="hljs-string">"--xlator-option"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">14</span>]$<span class="hljs-number">17</span> = <span class="hljs-number">0x7fffe8001310</span> <span class="hljs-string">"*-posix.glusterd-uuid=88efffbe-ce9e-4117-8d1a-77de0a8ecd75"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">15</span>]$<span class="hljs-number">18</span> = <span class="hljs-number">0x7fffe80013b0</span> <span class="hljs-string">"--process-name"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">16</span>]$<span class="hljs-number">19</span> = <span class="hljs-number">0x7fffe8001420</span> <span class="hljs-string">"brick"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">17</span>]$<span class="hljs-number">20</span> = <span class="hljs-number">0x7fffe8001490</span> <span class="hljs-string">"--brick-port"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">18</span>]$<span class="hljs-number">21</span> = <span class="hljs-number">0x7fffe8001500</span> <span class="hljs-string">"49152"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">19</span>]$<span class="hljs-number">22</span> = <span class="hljs-number">0x7fffe8001570</span> <span class="hljs-string">"--xlator-option"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">20</span>]$<span class="hljs-number">23</span> = <span class="hljs-number">0x7fffe80015e0</span> <span class="hljs-string">"dht_vol-server.listen-port=49152"</span>(gdb) p/s  runner-&gt;argv[<span class="hljs-number">21</span>]$<span class="hljs-number">24</span> = <span class="hljs-number">0x0</span>(gdb)</code></pre></li><li>glusterfsd gdb 日志<pre><code class="hljs angelscript">(gdb) info <span class="hljs-keyword">break</span>Num     Type           Disp Enb Address            What<span class="hljs-number">1</span>       breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">2</span> times<span class="hljs-number">1.1</span>                         y     <span class="hljs-number">0x000000000040b71d</span> <span class="hljs-keyword">in</span> main at glusterfsd.c:<span class="hljs-number">2746</span> inf <span class="hljs-number">1</span><span class="hljs-number">1.2</span>                         y     <span class="hljs-number">0x000000000040b71d</span> <span class="hljs-keyword">in</span> main at glusterfsd.c:<span class="hljs-number">2746</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">2</span>       breakpoint     keep y   &lt;PENDING&gt;          glusterd.c:init inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">3</span>       breakpoint     keep y   &lt;PENDING&gt;          glusterd_spawn_daemons inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">4</span>       breakpoint     keep y   &lt;PENDING&gt;          glusterd_restart_bricks inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">5</span>       breakpoint     keep y   &lt;PENDING&gt;          glusterd_brick_start inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">6</span>       breakpoint     keep y   &lt;PENDING&gt;          glusterd_volume_start_glusterfs inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>        breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">7</span>       breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">7.1</span>                         y     <span class="hljs-number">0x00007ffff7b35f04</span> <span class="hljs-keyword">in</span> runner_run at run.c:<span class="hljs-number">430</span> inf <span class="hljs-number">1</span><span class="hljs-number">7.2</span>                         y     <span class="hljs-number">0x00007ffff7b35f04</span> <span class="hljs-keyword">in</span> runner_run at run.c:<span class="hljs-number">430</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">8</span>       breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">8.1</span>                         y     <span class="hljs-number">0x00007ffff7b35825</span> <span class="hljs-keyword">in</span> runner_start at run.c:<span class="hljs-number">259</span> inf <span class="hljs-number">1</span><span class="hljs-number">8.2</span>                         y     <span class="hljs-number">0x00007ffff7b35825</span> <span class="hljs-keyword">in</span> runner_start at run.c:<span class="hljs-number">259</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">9</span>       breakpoint     keep y   &lt;PENDING&gt;          server-rpc-fops_v2.c:server4_0_mkdir<span class="hljs-number">10</span>      breakpoint     keep y   &lt;PENDING&gt;          server-resolve.c:server_resolve<span class="hljs-number">11</span>      breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">11.1</span>                        y     <span class="hljs-number">0x000000000040b603</span> <span class="hljs-keyword">in</span> glusterfs_volumes_init at glusterfsd.c:<span class="hljs-number">2704</span> inf <span class="hljs-number">1</span><span class="hljs-number">11.2</span>                        y     <span class="hljs-number">0x000000000040b603</span> <span class="hljs-keyword">in</span> glusterfs_volumes_init at glusterfsd.c:<span class="hljs-number">2704</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">12</span>      breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">12.1</span>                        y     <span class="hljs-number">0x000000000040b390</span> <span class="hljs-keyword">in</span> glusterfs_process_volfp at glusterfsd.c:<span class="hljs-number">2626</span> inf <span class="hljs-number">1</span><span class="hljs-number">12.2</span>                        y     <span class="hljs-number">0x000000000040b390</span> <span class="hljs-keyword">in</span> glusterfs_process_volfp at glusterfsd.c:<span class="hljs-number">2626</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">13</span>      breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">13.1</span>                        y     <span class="hljs-number">0x000000000040710f</span> <span class="hljs-keyword">in</span> get_volfp at glusterfsd.c:<span class="hljs-number">781</span> inf <span class="hljs-number">1</span><span class="hljs-number">13.2</span>                        y     <span class="hljs-number">0x000000000040710f</span> <span class="hljs-keyword">in</span> get_volfp at glusterfsd.c:<span class="hljs-number">781</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">14</span>      breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">14.1</span>                        y     <span class="hljs-number">0x0000000000412581</span> <span class="hljs-keyword">in</span> glusterfs_mgmt_init at glusterfsd-mgmt.c:<span class="hljs-number">2648</span> inf <span class="hljs-number">1</span><span class="hljs-number">14.2</span>                        y     <span class="hljs-number">0x0000000000412581</span> <span class="hljs-keyword">in</span> glusterfs_mgmt_init at glusterfsd-mgmt.c:<span class="hljs-number">2648</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">15</span>      breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time---Type &lt;<span class="hljs-keyword">return</span>&gt; to <span class="hljs-keyword">continue</span>, <span class="hljs-keyword">or</span> q &lt;<span class="hljs-keyword">return</span>&gt; to quit---<span class="hljs-number">15.1</span>                        y     <span class="hljs-number">0x0000000000411848</span> <span class="hljs-keyword">in</span> glusterfs_volfile_fetch at glusterfsd-mgmt.c:<span class="hljs-number">2270</span> inf <span class="hljs-number">1</span><span class="hljs-number">15.2</span>                        y     <span class="hljs-number">0x0000000000411848</span> <span class="hljs-keyword">in</span> glusterfs_volfile_fetch at glusterfsd-mgmt.c:<span class="hljs-number">2270</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">16</span>      breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">16.1</span>                        y     <span class="hljs-number">0x00000000004114ed</span> <span class="hljs-keyword">in</span> glusterfs_volfile_fetch_one at glusterfsd-mgmt.c:<span class="hljs-number">2166</span> inf <span class="hljs-number">1</span><span class="hljs-number">16.2</span>                        y     <span class="hljs-number">0x00000000004114ed</span> <span class="hljs-keyword">in</span> glusterfs_volfile_fetch_one at glusterfsd-mgmt.c:<span class="hljs-number">2166</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">17</span>      breakpoint     keep y   &lt;MULTIPLE&gt;                 breakpoint already hit <span class="hljs-number">1</span> time<span class="hljs-number">17.1</span>                        y     <span class="hljs-number">0x0000000000410a85</span> <span class="hljs-keyword">in</span> mgmt_getspec_cbk at glusterfsd-mgmt.c:<span class="hljs-number">1922</span> inf <span class="hljs-number">1</span><span class="hljs-number">17.2</span>                        y     <span class="hljs-number">0x0000000000410a85</span> <span class="hljs-keyword">in</span> mgmt_getspec_cbk at glusterfsd-mgmt.c:<span class="hljs-number">1922</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span><span class="hljs-number">18</span>      breakpoint     keep y   &lt;MULTIPLE&gt;         <span class="hljs-number">18.1</span>                        y     <span class="hljs-number">0x000000000040b390</span> <span class="hljs-keyword">in</span> glusterfs_process_volfp at glusterfsd.c:<span class="hljs-number">2626</span> inf <span class="hljs-number">1</span><span class="hljs-number">18.2</span>                        y     <span class="hljs-number">0x000000000040b390</span> <span class="hljs-keyword">in</span> glusterfs_process_volfp at glusterfsd.c:<span class="hljs-number">2626</span> inf <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>(gdb)</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>global-threading后导致mount客户端crash</title>
    <link href="/2020/04/15/global-threading%E5%90%8E%E5%AF%BC%E8%87%B4mount%E5%AE%A2%E6%88%B7%E7%AB%AFcrash/"/>
    <url>/2020/04/15/global-threading%E5%90%8E%E5%AF%BC%E8%87%B4mount%E5%AE%A2%E6%88%B7%E7%AB%AFcrash/</url>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><pre><code class="hljs angelscript">[<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.727619</span>] I [rpc-clnt.c:<span class="hljs-number">1963</span>:rpc_clnt_reconfig] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-2</span>: changing port to <span class="hljs-number">49153</span> (<span class="hljs-keyword">from</span> <span class="hljs-number">0</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.727653</span>] I [socket.c:<span class="hljs-number">864</span>:__socket_shutdown] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-2</span>: <span class="hljs-built_in">int</span>entional socket shutdown(<span class="hljs-number">12</span>)[<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.730524</span>] I [MSGID: <span class="hljs-number">114057</span>] [client-handshake.c:<span class="hljs-number">1376</span>:select_server_supported_programs] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-1</span>: Using Program GlusterFS <span class="hljs-number">4.</span>x v1, Num (<span class="hljs-number">1298437</span>), Version (<span class="hljs-number">400</span>) [<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.730986</span>] I [MSGID: <span class="hljs-number">114046</span>] [client-handshake.c:<span class="hljs-number">1106</span>:client_setvolume_cbk] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-1</span>: Connected to hot2_vol-client<span class="hljs-number">-1</span>, attached to remote volume <span class="hljs-string">'/glusterfs/hotvol2/brick1'</span>. [<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.733549</span>] I [MSGID: <span class="hljs-number">114057</span>] [client-handshake.c:<span class="hljs-number">1376</span>:select_server_supported_programs] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-2</span>: Using Program GlusterFS <span class="hljs-number">4.</span>x v1, Num (<span class="hljs-number">1298437</span>), Version (<span class="hljs-number">400</span>) [<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.733979</span>] I [MSGID: <span class="hljs-number">114046</span>] [client-handshake.c:<span class="hljs-number">1106</span>:client_setvolume_cbk] <span class="hljs-number">0</span>-hot2_vol-client<span class="hljs-number">-2</span>: Connected to hot2_vol-client<span class="hljs-number">-2</span>, attached to remote volume <span class="hljs-string">'/glusterfs/hotvol2/brick1'</span>. [<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.735104</span>] I [fuse-bridge.c:<span class="hljs-number">5166</span>:fuse_init] <span class="hljs-number">0</span>-glusterfs-fuse: FUSE inited with protocol versions: glusterfs <span class="hljs-number">7.24</span> kernel <span class="hljs-number">7.22</span>[<span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">37</span>:<span class="hljs-number">04.735112</span>] I [fuse-bridge.c:<span class="hljs-number">5777</span>:fuse_graph_sync] <span class="hljs-number">0</span>-fuse: switched to graph <span class="hljs-number">0</span>pending frames:frame : type(<span class="hljs-number">1</span>) op(LOOKUP)frame : type(<span class="hljs-number">1</span>) op(OPEN)patchset: git:<span class="hljs-comment">//git.gluster.org/glusterfs.git</span>signal received: <span class="hljs-number">11</span>time of crash: <span class="hljs-number">2020</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span> <span class="hljs-number">08</span>:<span class="hljs-number">50</span>:<span class="hljs-number">04</span>configuration details:argp <span class="hljs-number">1</span>backtrace <span class="hljs-number">1</span>dlfcn <span class="hljs-number">1</span>libpthread <span class="hljs-number">1</span>llistxattr <span class="hljs-number">1</span>setfsid <span class="hljs-number">1</span>spinlock <span class="hljs-number">1</span>epoll.h <span class="hljs-number">1</span>xattr.h <span class="hljs-number">1</span>st_atim.tv_nsec <span class="hljs-number">1</span>package-<span class="hljs-built_in">string</span>: glusterfs <span class="hljs-number">7.1</span>/lib64/libglusterfs.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x277ff</span>)[<span class="hljs-number">0x2b4618afe7ff</span>]/lib64/libglusterfs.so<span class="hljs-number">.0</span>(gf_print_trace+<span class="hljs-number">0x334</span>)[<span class="hljs-number">0x2b4618b09234</span>]/lib64/libc.so<span class="hljs-number">.6</span>(+<span class="hljs-number">0x36280</span>)[<span class="hljs-number">0x2b461a424280</span>]/lib64/libglusterfs.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0xaeeb5</span>)[<span class="hljs-number">0x2b4618b85eb5</span>]/lib64/libpthread.so<span class="hljs-number">.0</span>(+<span class="hljs-number">0x7dd5</span>)[<span class="hljs-number">0x2b4619d78dd5</span>]/lib64/libc.so<span class="hljs-number">.6</span>(clone+<span class="hljs-number">0x6d</span>)[<span class="hljs-number">0x2b461a4ebead</span>]---------</code></pre><h2 id="系统版本信息"><a href="#系统版本信息" class="headerlink" title="系统版本信息"></a>系统版本信息</h2><pre><code class="hljs yaml"><span class="hljs-string">[root@szdpl1543</span> <span class="hljs-string">~]#</span> <span class="hljs-string">uname</span> <span class="hljs-string">-a</span><span class="hljs-string">Linux</span> <span class="hljs-string">szdpl1543</span> <span class="hljs-number">3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-957.</span><span class="hljs-string">el7.x86_64</span> <span class="hljs-comment">#1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span><span class="hljs-string">[root@szdpl1543</span> <span class="hljs-string">~]#</span> <span class="hljs-string">gluster</span> <span class="hljs-string">--version</span><span class="hljs-string">glusterfs</span> <span class="hljs-number">7.2</span><span class="hljs-attr">Repository revision:</span> <span class="hljs-string">git://git.gluster.org/glusterfs.git</span><span class="hljs-string">Copyright</span> <span class="hljs-string">(c)</span> <span class="hljs-number">2006</span><span class="hljs-number">-2016</span> <span class="hljs-string">Red</span> <span class="hljs-string">Hat,</span> <span class="hljs-string">Inc.</span> <span class="hljs-string">&lt;https://www.gluster.org/&gt;</span><span class="hljs-string">GlusterFS</span> <span class="hljs-string">comes</span> <span class="hljs-string">with</span> <span class="hljs-string">ABSOLUTELY</span> <span class="hljs-literal">NO</span> <span class="hljs-string">WARRANTY.</span><span class="hljs-string">It</span> <span class="hljs-string">is</span> <span class="hljs-string">licensed</span> <span class="hljs-string">to</span> <span class="hljs-string">you</span> <span class="hljs-string">under</span> <span class="hljs-string">your</span> <span class="hljs-string">choice</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">GNU</span> <span class="hljs-string">Lesser</span><span class="hljs-string">General</span> <span class="hljs-string">Public</span> <span class="hljs-string">License,</span> <span class="hljs-string">version</span> <span class="hljs-number">3</span> <span class="hljs-string">or</span> <span class="hljs-string">any</span> <span class="hljs-string">later</span> <span class="hljs-string">version</span> <span class="hljs-string">(LGPLv3</span><span class="hljs-string">or</span> <span class="hljs-string">later),</span> <span class="hljs-string">or</span> <span class="hljs-string">the</span> <span class="hljs-string">GNU</span> <span class="hljs-string">General</span> <span class="hljs-string">Public</span> <span class="hljs-string">License,</span> <span class="hljs-string">version</span> <span class="hljs-number">2</span> <span class="hljs-string">(GPLv2),</span><span class="hljs-string">in</span> <span class="hljs-string">all</span> <span class="hljs-string">cases</span> <span class="hljs-string">as</span> <span class="hljs-string">published</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">Free</span> <span class="hljs-string">Software</span> <span class="hljs-string">Foundation.</span><span class="hljs-string">[root@szdpl1543</span> <span class="hljs-string">~]#</span> <span class="hljs-string">gluster</span> <span class="hljs-string">volume</span> <span class="hljs-string">info</span> <span class="hljs-string">hot2_vol</span>  <span class="hljs-attr">Volume Name:</span> <span class="hljs-string">hot2_vol</span><span class="hljs-attr">Type:</span> <span class="hljs-string">Distribute</span><span class="hljs-attr">Volume ID:</span> <span class="hljs-string">a04761f1-3380-4795-9054-cf152e55ea61</span><span class="hljs-attr">Status:</span> <span class="hljs-string">Started</span><span class="hljs-attr">Snapshot Count:</span> <span class="hljs-number">0</span><span class="hljs-attr">Number of Bricks:</span> <span class="hljs-number">3</span><span class="hljs-attr">Transport-type:</span> <span class="hljs-string">tcp</span><span class="hljs-attr">Bricks:</span><span class="hljs-attr">Brick1:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.240</span><span class="hljs-string">:/glusterfs/hotvol2/brick1</span><span class="hljs-attr">Brick2:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.241</span><span class="hljs-string">:/glusterfs/hotvol2/brick1</span><span class="hljs-attr">Brick3:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.242</span><span class="hljs-string">:/glusterfs/hotvol2/brick1</span><span class="hljs-attr">Options Reconfigured:</span><span class="hljs-attr">storage.health-check-interval:</span> <span class="hljs-number">0</span><span class="hljs-attr">performance.write-behind:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.flush-behind:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.aggregate-size:</span> <span class="hljs-string">1mb</span><span class="hljs-attr">performance.read-ahead-page-count:</span> <span class="hljs-number">16</span><span class="hljs-attr">performance.client-io-threads:</span> <span class="hljs-string">off</span><span class="hljs-attr">performance.io-cache:</span> <span class="hljs-string">on</span><span class="hljs-attr">nfs.disable:</span> <span class="hljs-string">on</span><span class="hljs-attr">storage.fips-mode-rchecksum:</span> <span class="hljs-string">on</span><span class="hljs-attr">transport.address-family:</span> <span class="hljs-string">inet</span><span class="hljs-attr">server.outstanding-rpc-limit:</span> <span class="hljs-number">512</span><span class="hljs-attr">network.tcp-window-size:</span> <span class="hljs-number">1048576</span><span class="hljs-attr">cluster.min-free-disk:</span> <span class="hljs-number">20</span><span class="hljs-attr">server.event-threads:</span> <span class="hljs-number">64</span><span class="hljs-attr">client.event-threads:</span> <span class="hljs-number">32</span><span class="hljs-attr">performance.io-thread-count:</span> <span class="hljs-number">32</span><span class="hljs-attr">performance.readdir-ahead:</span> <span class="hljs-string">on</span><span class="hljs-attr">cluster.readdir-optimize:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.parallel-readdir:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.quick-read:</span> <span class="hljs-string">on</span><span class="hljs-attr">cluster.lookup-unhashed:</span> <span class="hljs-string">off</span><span class="hljs-attr">performance.rda-cache-limit:</span> <span class="hljs-string">16GB</span><span class="hljs-attr">cluster.lookup-optimize:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.stat-prefetch:</span> <span class="hljs-string">on</span><span class="hljs-attr">features.cache-invalidation:</span> <span class="hljs-string">on</span><span class="hljs-attr">features.cache-invalidation-timeout:</span> <span class="hljs-number">600</span><span class="hljs-attr">performance.cache-invalidation:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.md-cache-timeout:</span> <span class="hljs-number">600</span><span class="hljs-attr">network.inode-lru-limit:</span> <span class="hljs-number">200000</span></code></pre><h2 id="mount选项"><a href="#mount选项" class="headerlink" title="mount选项"></a>mount选项</h2><pre><code class="hljs angelscript">mount -t glusterfs -o acl,global-threading <span class="hljs-number">172.25</span><span class="hljs-number">.78</span><span class="hljs-number">.240</span>:hot2_vol /data/glusterfs_train_hot2</code></pre><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><pre><code class="hljs pgsql">//每当接收到打开的调用时，它都会向应用程序发送成功通知，从而提高了应用程序从文件读取数据的能力<span class="hljs-keyword">Option</span>: performance.<span class="hljs-keyword">open</span>-behind<span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-keyword">on</span>Description: <span class="hljs-keyword">enable</span>/<span class="hljs-keyword">disable</span> <span class="hljs-keyword">open</span>-behind translator <span class="hljs-keyword">in</span> the volume.</code></pre><h2 id="相关的issue"><a href="#相关的issue" class="headerlink" title="相关的issue"></a>相关的issue</h2><ul><li><a href="https://github.com/gluster/glusterfs/issues/784" target="_blank" rel="noopener">https://github.com/gluster/glusterfs/issues/784</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Automatic File Replication-转载</title>
    <link href="/2020/04/15/Automatic-File-Replication-%E8%BD%AC%E8%BD%BD/"/>
    <url>/2020/04/15/Automatic-File-Replication-%E8%BD%AC%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="Automatic-File-Replication"><a href="#Automatic-File-Replication" class="headerlink" title="Automatic File Replication"></a>Automatic File Replication</h1><p>Afr xlator in glusterfs is responsible for replicating the data across the bricks.</p><h3 id="Responsibilities-of-AFR"><a href="#Responsibilities-of-AFR" class="headerlink" title="Responsibilities of AFR"></a>Responsibilities of AFR</h3><p>Its responsibilities include the following:</p><ol><li><p>Maintain replication consistency (i.e. Data on both the bricks should be same, even in the cases where there are operations happening on same file/directory in parallel from multiple applications/mount points as long as all the bricks in replica set are up)</p></li><li><p>Provide a way of recovering data in case of failures as long as there is<br> at least one brick which has the correct data.</p></li><li><p>Serve fresh data for read/stat/readdir etc</p></li></ol><h3 id="Transaction-framework"><a href="#Transaction-framework" class="headerlink" title="Transaction framework"></a>Transaction framework</h3><p>For 1, 2 above afr uses transaction framework which consists of the following 5<br>phases which happen on all the bricks in replica set(Bricks which are in replication):</p><h4 id="1-Lock-Phase"><a href="#1-Lock-Phase" class="headerlink" title="1.Lock Phase"></a>1.Lock Phase</h4><h4 id="2-Pre-op-Phase"><a href="#2-Pre-op-Phase" class="headerlink" title="2. Pre-op Phase"></a>2. Pre-op Phase</h4><h4 id="3-Op-Phase"><a href="#3-Op-Phase" class="headerlink" title="3. Op Phase"></a>3. Op Phase</h4><h4 id="4-Post-op-Phase"><a href="#4-Post-op-Phase" class="headerlink" title="4. Post-op Phase"></a>4. Post-op Phase</h4><h4 id="5-Unlock-Phase"><a href="#5-Unlock-Phase" class="headerlink" title="5. Unlock Phase"></a>5. Unlock Phase</h4><p><em>Op Phase</em> is the actual operation sent by application (<code>write/create/unlink</code> etc). For every operation which afr receives that modifies data it sends that same operation in parallel to all the bricks in its replica set. This is how it achieves replication.</p><p><em>Lock, Unlock Phases</em> take necessary locks so that <em>Op phase</em> can provide <strong>replication consistency</strong> in normal work flow.</p><h5 id="For-example"><a href="#For-example" class="headerlink" title="For example:"></a>For example:</h5><p>If an application performs <code>touch a</code> and the other one does <code>mkdir a</code>, afr makes sure that either file with name <code>a</code> or directory with name <code>a</code> is created on both the bricks.</p><p><em>Pre-op, Post-op Phases</em> provide changelogging which enables afr to figure out which copy is fresh.<br>Once afr knows how to figure out fresh copy in the replica set it can <strong>recover data</strong> from fresh copy to stale copy. Also it can <strong>serve fresh</strong> data for <code>read/stat/readdir</code> etc.</p><h2 id="Internal-Operations"><a href="#Internal-Operations" class="headerlink" title="Internal Operations"></a>Internal Operations</h2><p>Brief introduction to internal operations in Glusterfs which make <em>Locking, Unlocking, Pre/Post ops</em> possible:</p><h3 id="Internal-Locking-Operations"><a href="#Internal-Locking-Operations" class="headerlink" title="Internal Locking Operations"></a>Internal Locking Operations</h3><p>Glusterfs has <strong>locks</strong> translator which provides the following internal locking operations called <code>inodelk</code>, <code>entrylk</code> which are used by afr to achieve synchronization of operations on files or directories that conflict with each other.</p><p><code>Inodelk</code> gives the facility for translators in Glusterfs to obtain range (denoted by tuple with <strong>offset</strong>, <strong>length</strong>) locks in a given domain for an inode.<br>Full file lock is denoted by the tuple (offset: <code>0</code>, length: <code>0</code>) i.e. length <code>0</code> is considered as infinity.</p><p><code>Entrylk</code> enables translators of Glusterfs to obtain locks on <code>name</code> in a given domain for an inode, typically a directory.</p><p><strong>Locks</strong> translator provides both <em>blocking</em> and <em>nonblocking</em> variants and of these operations.</p><h3 id="Xattrop"><a href="#Xattrop" class="headerlink" title="Xattrop"></a>Xattrop</h3><p>For pre/post ops posix translator provides an operation called xattrop.<br>xattrop is a way of <em>incrementing</em>/<em>decrementing</em> a number present in the extended attribute of the inode <em>atomically</em>.</p><h2 id="Transaction-Types"><a href="#Transaction-Types" class="headerlink" title="Transaction Types"></a>Transaction Types</h2><p>There are 3 types of transactions in AFR.</p><ol><li><p>Data transactions</p><ul><li>Operations that add/modify/truncate the file contents.</li><li><code>Write</code>/<code>Truncate</code>/<code>Ftruncate</code> etc</li></ul></li><li><p>Metadata transactions</p><ul><li>Operations that modify the data kept in inode.</li><li><code>Chmod</code>/<code>Chown</code> etc</li></ul></li></ol><p>3) Entry transactions</p><ul><li>Operations that add/remove/rename entries in a directory</li><li><code>Touch</code>/<code>Mkdir</code>/<code>Mknod</code> etc</li></ul><h3 id="Data-transactions"><a href="#Data-transactions" class="headerlink" title="Data transactions:"></a>Data transactions:</h3><p><em>write</em> (<code>offset</code>, <code>size</code>) - writes data from <code>offset</code> of <code>size</code></p><p><em>ftruncate</em>/<em>truncate</em> (<code>offset</code>) - truncates data from <code>offset</code> till the end of file.</p><p>Afr internal locking needs to make sure that two conflicting data operations happen in order, one after the other so that it does not result in replication inconsistency. Afr data operations take inodelks in same domain (lets call it <code>data</code> domain).</p><p><em>Write</em> operation with offset <code>O</code> and size <code>S</code> takes an inode lock in data domain with range <code>(O, S)</code>.</p><p><em>Ftruncate</em>/<em>Truncate</em> operations with offset <code>O</code> take inode locks in <code>data</code> domain with range <code>(O, 0)</code>. Please note that size <code>0</code> means size infinity.</p><p>These ranges make sure that overlapping write/truncate/ftruncate operations are done one after the other.</p><p>Now that we know the ranges the operations take locks on, we will see how locking happens in afr.</p><h4 id="Lock"><a href="#Lock" class="headerlink" title="Lock:"></a>Lock:</h4><p>Afr initially attempts <strong>non-blocking</strong> locks on <strong>all</strong> the bricks of the replica set in <strong>parallel</strong>. If all the locks are successful then it goes on to perform pre-op. But in case <strong>non-blocking</strong> locks <strong>fail</strong> because there is <em>at least one conflicting operation</em> which already has a <strong>granted lock</strong> then it <strong>unlocks</strong> the <strong>non-blocking</strong> locks it already acquired in this previous step and proceeds to perform <strong>blocking</strong> locks <strong>one after the other</strong> on each of the subvolumes in the order of subvolumes specified in the volfile.</p><p>Chances of <strong>conflicting operations</strong> is <strong>very low</strong> and time elapsed in <strong>non-blocking</strong> locks phase is <code>Max(latencies of the bricks for responding to inodelk)</code>, where as time elapsed in <strong>blocking locks</strong> phase is <code>Sum(latencies of the bricks for responding to inodelk)</code>. That is why afr always tries for non-blocking locks first and only then it moves to blocking locks.</p><h4 id="Pre-op"><a href="#Pre-op" class="headerlink" title="Pre-op:"></a>Pre-op:</h4><p>Each file/dir in a brick maintains the changelog(roughly pending operation count) of itself and that of the files<br>present in all the other bricks in it’s replica set as seen by that brick.</p><p>Lets consider an example replica volume with 2 bricks brick-a and brick-b.<br>all files in brick-a will have 2 entries<br>one for itself and the other for the file present in it’s replica set, i.e.brick-b:<br>One can inspect changelogs using getfattr command.</p><pre><code># getfattr -d -e hex -m. brick-a/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for itself (brick-a)trusted.afr.vol-client-1=0x000000000000000000000000 --&gt;changelog for brick-b as seen by brick-a</code></pre><p>Likewise, all files in brick-b will have:</p><pre><code># getfattr -d -e hex -m. brick-b/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for brick-a as seen by brick-btrusted.afr.vol-client-1=0x000000000000000000000000 --&gt;changelog for itself (brick-b)</code></pre><h5 id="Interpreting-Changelog-Value"><a href="#Interpreting-Changelog-Value" class="headerlink" title="Interpreting Changelog Value:"></a>Interpreting Changelog Value:</h5><p>Each extended attribute has a value which is <code>24</code> hexa decimal digits. i.e. <code>12</code> bytes<br>First <code>8</code> digits (<code>4</code> bytes) represent changelog of <code>data</code>. Second <code>8</code> digits represent changelog<br>of <code>metadata</code>. Last 8 digits represent Changelog of <code>directory entries</code>.</p><p>Pictorially representing the same, we have:</p><pre><code>0x 00000000 00000000 00000000      |        |        |      |        |        \_ changelog of directory entries      |        \_ changelog of metadata      \ _ changelog of data</code></pre><p>Before write operation is performed on the brick, afr marks the file saying there is a pending operation.</p><p>As part of this pre-op afr sends xattrop operation with increment 1 for data operation to make the extended attributes the following:<br>    # getfattr -d -e hex -m. brick-a/file.txt<br>    trusted.afr.vol-client-0=0x000000010000000000000000 –&gt;changelog for itself (brick-a)<br>    trusted.afr.vol-client-1=0x000000010000000000000000 –&gt;changelog for brick-b as seen by brick-a</p><p>Likewise, all files in brick-b will have:</p><pre><code># getfattr -d -e hex -m. brick-b/file.txttrusted.afr.vol-client-0=0x000000010000000000000000 --&gt;changelog for brick-a as seen by brick-btrusted.afr.vol-client-1=0x000000010000000000000000 --&gt;changelog for itself (brick-b)</code></pre><p>As the operation is in progress on files on both the bricks all the extended attributes show the same value.</p><h4 id="Op"><a href="#Op" class="headerlink" title="Op:"></a>Op:</h4><p>Now it sends the actual write operation to both the bricks. Afr remembers whether the operation is successful or not on all the subvolumes.</p><h4 id="Post-Op"><a href="#Post-Op" class="headerlink" title="Post-Op:"></a>Post-Op:</h4><p>If the operation succeeds on all the bricks then there is no pending operations on any of the bricks so as part of POST-OP afr sends xattrop operation with increment -1 i.e. decrement by 1 for data operation to make the extended attributes back to all zeros again.</p><p>In case there is a failure on brick-b then there is still a pending operation on brick-b where as no pending operations are there on brick-a. So xattrop operation for both of these extended attributes differs now. For extended attribute corresponding to brick-a i.e. trusted.afr.vol-client-0 decrement by 1 is sent where as for extended attribute corresponding to brick-b increment by ‘0’ is sent to retain the pending operation count.</p><pre><code># getfattr -d -e hex -m. brick-a/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for itself (brick-a)trusted.afr.vol-client-1=0x000000010000000000000000 --&gt;changelog for brick-b as seen by brick-a# getfattr -d -e hex -m. brick-b/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for brick-a as seen by brick-btrusted.afr.vol-client-1=0x000000010000000000000000 --&gt;changelog for itself (brick-b)</code></pre><h4 id="Unlock"><a href="#Unlock" class="headerlink" title="Unlock:"></a>Unlock:</h4><p>Once the transaction is completed unlock is sent on all the bricks where lock is acquired.</p><h3 id="Meta-Data-transactions"><a href="#Meta-Data-transactions" class="headerlink" title="Meta Data transactions:"></a>Meta Data transactions:</h3><p>setattr, setxattr, removexattr<br>All metadata operations take same inode lock with same range in metadata domain.</p><h4 id="Lock-1"><a href="#Lock-1" class="headerlink" title="Lock:"></a>Lock:</h4><p>Metadata locking also starts initially with non-blocking locks then move on to blocking locks on any failures because of conflicting operations.</p><h4 id="Pre-op-1"><a href="#Pre-op-1" class="headerlink" title="Pre-op:"></a>Pre-op:</h4><p>Before metadata operation is performed on the brick, afr marks the file saying there is a pending operation.<br>As part of this pre-op afr sends xattrop operation with increment 1 for metadata operation to make the extended attributes the following:<br>    # getfattr -d -e hex -m. brick-a/file.txt<br>    trusted.afr.vol-client-0=0x000000000000000100000000 –&gt;changelog for itself (brick-a)<br>    trusted.afr.vol-client-1=0x000000000000000100000000 –&gt;changelog for brick-b as seen by brick-a</p><p>Likewise, all files in brick-b will have:<br>    # getfattr -d -e hex -m. brick-b/file.txt<br>    trusted.afr.vol-client-0=0x000000000000000100000000 –&gt;changelog for brick-a as seen by brick-b<br>    trusted.afr.vol-client-1=0x000000000000000100000000 –&gt;changelog for itself (brick-b)</p><p>As the operation is in progress on files on both the bricks all the extended attributes show the same value.</p><h4 id="Op-1"><a href="#Op-1" class="headerlink" title="Op:"></a>Op:</h4><p>Now it sends the actual metadata operation to both the bricks. Afr remembers whether the operation is successful or not on all the subvolumes.</p><p>Post-Op:<br>If the operation succeeds on all the bricks then there is no pending operations on any of the bricks so as part of POST-OP afr sends xattrop operation with increment -1 i.e. decrement by 1 for metadata operation to make the extended attributes back to all zeros again.</p><p>In case there is a failure on brick-b then there is still a pending operation on brick-b where as no pending operations are there on brick-a. So xattrop operation for both of these extended attributes differs now. For extended attribute corresponding to brick-a i.e. trusted.afr.vol-client-0 decrement by 1 is sent where as for extended attribute corresponding to brick-b increment by ‘0’ is sent to retain the pending operation count.</p><pre><code># getfattr -d -e hex -m. brick-a/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for itself (brick-a)trusted.afr.vol-client-1=0x000000000000000100000000 --&gt;changelog for brick-b as seen by brick-a# getfattr -d -e hex -m. brick-b/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for brick-a as seen by brick-btrusted.afr.vol-client-1=0x000000000000000100000000 --&gt;changelog for itself (brick-b)</code></pre><h4 id="Unlock-1"><a href="#Unlock-1" class="headerlink" title="Unlock:"></a>Unlock:</h4><p>Once the transaction is completed unlock is sent on all the bricks where lock is acquired.</p><h3 id="Entry-transactions"><a href="#Entry-transactions" class="headerlink" title="Entry transactions:"></a>Entry transactions:</h3><p>create, mknod, mkdir, link, symlink, rename, unlink, rmdir<br>Pre-op/Post-op (done using xattrop) always happens on the parent directory.</p><p>Entry Locks taken by these entry operations:</p><p><strong>Create</strong> (file <code>dir/a</code>): Lock on name <code>a</code> in inode of <code>dir</code></p><p><strong>mknod</strong> (file <code>dir/a</code>): Lock on name <code>a</code> in inode of <code>dir</code></p><p><strong>mkdir</strong> (dir <code>dir/a</code>): Lock on name <code>a</code> in inode of <code>dir</code></p><p><strong>link</strong> (file <code>oldfile</code>, file <code>dir/newfile</code>): Lock on name <code>newfile</code> in inode of <code>dir</code></p><p><strong>Symlink</strong> (file <code>oldfile</code>, file <code>dir</code>/<code>symlinkfile</code>): Lock on name <code>symlinkfile</code> in inode of <code>dir</code></p><p><strong>rename</strong> of (file <code>dir1</code>/<code>file1</code>, file <code>dir2</code>/<code>file2</code>): Lock on name <code>file1</code> in inode of <code>dir1</code>, Lock on name <code>file2</code> in inode of <code>dir2</code></p><p><strong>rename</strong> of (dir <code>dir1</code>/<code>dir2</code>, dir <code>dir3</code>/<code>dir4</code>): Lock on name <code>dir2</code> in inode of <code>dir1</code>, Lock on name <code>dir4</code> in inode of <code>dir3</code>, Lock on <code>NULL</code> in inode of <code>dir4</code></p><p><strong>unlink</strong> (file <code>dir</code>/<code>a</code>): Lock on name <code>a</code> in inode of <code>dir</code></p><p><strong>rmdir</strong> (dir dir/a): Lock on name <code>a</code> in inode of <code>dir</code>, Lock on <code>NULL</code> in inode of <code>a</code></p><h4 id="Lock-2"><a href="#Lock-2" class="headerlink" title="Lock:"></a>Lock:</h4><p>Even entry locking starts initially with non-blocking locks then move on to blocking locks on any failures because of conflicting operations.</p><h4 id="Pre-op-2"><a href="#Pre-op-2" class="headerlink" title="Pre-op:"></a>Pre-op:</h4><p>Before entry operation is performed on the brick, afr marks the directory saying there is a pending operation.</p><p>As part of this pre-op afr sends xattrop operation with increment 1 for entry operation to make the extended attributes the following:</p><pre><code># getfattr -d -e hex -m. brick-a/trusted.afr.vol-client-0=0x000000000000000000000001 --&gt;changelog for itself (brick-a)trusted.afr.vol-client-1=0x000000000000000000000001 --&gt;changelog for brick-b as seen by brick-a</code></pre><p>Likewise, all files in brick-b will have:<br>    # getfattr -d -e hex -m. brick-b/<br>    trusted.afr.vol-client-0=0x000000000000000000000001 –&gt;changelog for brick-a as seen by brick-b<br>    trusted.afr.vol-client-1=0x000000000000000000000001 –&gt;changelog for itself (brick-b)</p><p>As the operation is in progress on files on both the bricks all the extended attributes show the same value.</p><h4 id="Op-2"><a href="#Op-2" class="headerlink" title="Op:"></a>Op:</h4><p>Now it sends the actual entry operation to both the bricks. Afr remembers whether the operation is successful or not on all the subvolumes.</p><h4 id="Post-Op-1"><a href="#Post-Op-1" class="headerlink" title="Post-Op:"></a>Post-Op:</h4><p>If the operation succeeds on all the bricks then there is no pending operations on any of the bricks so as part of POST-OP afr sends xattrop operation with increment -1 i.e. decrement by 1 for entry operation to make the extended attributes back to all zeros again.</p><p>In case there is a failure on brick-b then there is still a pending operation on brick-b where as no pending operations are there on brick-a. So xattrop operation for both of these extended attributes differs now. For extended attribute corresponding to brick-a i.e. trusted.afr.vol-client-0 decrement by 1 is sent where as for extended attribute corresponding to brick-b increment by ‘0’ is sent to retain the pending operation count.</p><pre><code># getfattr -d -e hex -m. brick-a/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for itself (brick-a)trusted.afr.vol-client-1=0x000000000000000000000001 --&gt;changelog for brick-b as seen by brick-a# getfattr -d -e hex -m. brick-b/file.txttrusted.afr.vol-client-0=0x000000000000000000000000 --&gt;changelog for brick-a as seen by brick-btrusted.afr.vol-client-1=0x000000000000000000000001 --&gt;changelog for itself (brick-b)</code></pre><h4 id="Unlock-2"><a href="#Unlock-2" class="headerlink" title="Unlock:"></a>Unlock:</h4><p>Once the transaction is completed unlock is sent on all the bricks where lock is acquired.</p><p>The parts above cover how replication consistency is achieved in afr.</p><p>Now let us look at how afr can figure out how to recover from failures given the changelog extended attributes</p><h3 id="Recovering-from-failures-Self-heal"><a href="#Recovering-from-failures-Self-heal" class="headerlink" title="Recovering from failures (Self-heal)"></a>Recovering from failures (Self-heal)</h3><p>For recovering from failures afr tries to determine which copy is the fresh copy based on the extended attributes.</p><p>There are 3 possibilities:</p><ol><li><p>All the extended attributes are zero on all the bricks. This means there are no pending operations on any of the bricks so there is nothing to recover.</p></li><li><p>According to the extended attributes there is a brick(brick-a) which noticed that there are operations pending on the other brick(brick-b).</p><ul><li><p>There are 4 possibilities for brick-b</p><ul><li><p>It did not even participate in transaction (all extended attributes on brick-b are zeros). Choose brick-a as source and perform recovery to brick-b.</p></li><li><p>It participated in the transaction but died even before post-op. (All extended attributes on brick-b have a pending-count). Choose brick-a as source and perform recovery to brick-b.</p></li><li><p>It participated in the transaction and after the post-op extended attributes on brick-b show that there are pending operations on itself. Choose brick-a as source and perform recovery to brick-b.</p></li><li><p>It participated in the transaction and after the post-op extended attributes on brick-b show that there are pending operations on brick-a. This situation is called Split-brain and there is no way to recover. This situation can happen in cases of network partition.</p></li></ul></li></ul></li><li><p>The only possibility now is where both brick-a, brick-b have pending operations. In this case changelogs extended attributes are all non-zeros on all the bricks. Basically what could have happened is the operations started on the file but either the whole replica set went down or the mount process itself dies before post-op is performed. In this case there is a possibility that data on the bricks is different. In this case afr chooses file with bigger size as source, if both files have same size then it choses the subvolume which has witnessed large number of pending operations on the other brick as source. If both have same number of pending operations then it chooses the file with newest ctime as source. If this is also same then it just picks one of the two bricks as source and syncs data on to the other to make sure that the files are replicas to each other.</p></li></ol><h3 id="Self-healing"><a href="#Self-healing" class="headerlink" title="Self-healing:"></a>Self-healing:</h3><p>Afr does 3 types of self-heals for data recovery.</p><ol><li><p>Data self-heal</p></li><li><p>Metadata self-heal</p></li><li><p>Entry self-heal</p></li></ol><p>As we have seen earlier, afr depends on changelog extended attributes to figure out which copy is source and which copy is sink. General algorithm for performing this recovery (self-heal) is same for all of these different self-heals.</p><ol><li><p>Take appropriate full locks on the file/directory to make sure no other transaction is in progress while inspecting changelog extended attributes.<br>In this step, for</p><ul><li>Data self-heal afr takes inode lock with <code>offset: 0</code> and <code>size: 0</code>(infinity) in data domain.</li><li>Entry self-heal takes entry lock on directory with <code>NULL</code> name i.e. full directory lock.</li><li>Metadata self-heal it takes pre-defined range in metadata domain on which all the metadata operations on that inode take locks on. To prevent duplicate data self-heal an inode lock is taken in self-heal domain as well.</li></ul></li><li><p>Perform Sync from fresh copy to stale copy.<br>In this step,</p><ul><li><p>Metadata self-heal gets the inode attributes, extended attributes from source copy and sets them on the stale copy.</p></li><li><p>Entry self-heal reads entries on stale directories and see if they are present on source directory, if they are not present it deletes them. Then it reads entries on fresh directory and creates the missing entries on stale directories.</p></li><li><p>Data self-heal does things a bit differently to make sure no other writes on the file are blocked for the duration of self-heal because files sizes could be as big as 100G(VM files) and we don’t want to block all the transactions until the self-heal is over. Locks translator allows two overlapping locks to be granted if they are from same lock owner. Using this what data self-heal does is it takes a small 128k size range lock and unlock previous acquired lock, heals just that 128k chunk and takes next 128k chunk lock and unlock previous lock and moves to the next one. It always makes sure that at least one lock is present on the file by selfheal throughout the duration of self-heal so that two self-heals don’t happen in parallel.</p></li><li><p>Data self-heal has two algorithms, where the file can be copied only when there is data mismatch for that chunk called as ‘diff’ self-heal. The other one is blind copy of each chunk called ‘full’ self-heal</p></li></ul></li><li><p>Change extended attributes to mark new sources after the sync.</p></li><li><p>Unlock the locks acquired to perform self-heal.</p></li></ol><h3 id="Transaction-Optimizations"><a href="#Transaction-Optimizations" class="headerlink" title="Transaction Optimizations:"></a>Transaction Optimizations:</h3><p>As we saw earlier afr transaction for all the operations that modify data happens in 5 phases, i.e. it sends 5 operations on the network for every operation. In the following sections we will see optimizations already implemented in afr which reduce the number of operations on the network to just 1 per transaction in best case.</p><h4 id="Changelog-piggybacking"><a href="#Changelog-piggybacking" class="headerlink" title="Changelog-piggybacking"></a>Changelog-piggybacking</h4><p>This optimization comes into picture when on same file descriptor, before write1’s post op is complete write2’s pre-op starts and the operations are succeeding. When writes come in that manner we can piggyback on the pre-op of write1 for write2 and somehow tell write1 that write2 will do the post-op that was supposed to be done by write1. So write1’s post-op does not happen over network, write2’s pre-op does not happen over network. This optimization does not hold if there are any failures in write1’s phases.</p><h4 id="Delayed-Post-op"><a href="#Delayed-Post-op" class="headerlink" title="Delayed Post-op"></a>Delayed Post-op</h4><p>This optimization just delays post-op of the write transaction(write1) by a pre-configured amount time to increase the probability of next write piggybacking on the pre-op done by write1.</p><p>With the combination of these two optimizations for operations like full file copy which are write intensive operations, what will essentially happen is for the first write a pre-op will happen. Then for the last write on the file post-op happens. So for all the write transactions between first write and last write afr reduced network operations from 5 to 3.</p><h4 id="Eager-locking"><a href="#Eager-locking" class="headerlink" title="Eager-locking:"></a>Eager-locking:</h4><p>This optimization comes into picture when only one file descriptor is open on the file and performing writes just like in the previous optimization. What this optimization does is it takes a full file lock on the file irrespective of the offset, size of the write, so that lock acquired by write1 can be piggybacked by write2 and write2 takes the responsibility of unlocking it. both write1, write2 will have same lock owner and afr takes the responsibility of serializing overlapping writes so that replication consistency is maintained.</p><p>With the combination of these optimizations for operations like full file copy which are write intensive operations, what will essentially happen is for the first write a pre-op, full-file lock will happen. Then for the last write on the file post-op, unlock happens. So for all the write transactions between first write and last write afr reduced network operations from 5 to 1.</p><h3 id="Quorum-in-afr"><a href="#Quorum-in-afr" class="headerlink" title="Quorum in afr:"></a>Quorum in afr:</h3><p>To avoid split-brains, afr employs the following quorum policies.</p><ul><li>In replica set with odd number of bricks, replica set is said to be in quorum if more than half of the bricks are up.</li><li>In replica set with even number of bricks, if more than half of the bricks are up then it is said to be in quorum but if number of bricks that are up is equal to number of bricks that are down then, it is said to be in quorum if the first brick is also up in the set of bricks that are up.</li></ul><p>When quorum is not met in the replica set then modify operations on the mount are not allowed by afr.</p><h3 id="Self-heal-daemon-and-Index-translator-usage-by-afr"><a href="#Self-heal-daemon-and-Index-translator-usage-by-afr" class="headerlink" title="Self-heal daemon and Index translator usage by afr:"></a>Self-heal daemon and Index translator usage by afr:</h3><h4 id="Index-xlator"><a href="#Index-xlator" class="headerlink" title="Index xlator"></a>Index xlator</h4><p>On each brick index xlator is loaded. This xlator keeps track of what is happening in afr’s pre-op and post-op. If there is an ongoing I/O or a pending self-heal, changelog xattrs would have non-zero values. Whenever xattrop/fxattrop fop (pre-op, post-ops are done using these fops) comes to index xlator a link (with gfid as name of the file on which the fop is performed) is added in <brick>/.glusterfs/indices/xattrop directory. If the value returned by the fop is zero the link is removed from the index otherwise it is kept until zero is returned in the subsequent xattrop/fxattrop fops.</brick></p><h4 id="Self-heal-daemon"><a href="#Self-heal-daemon" class="headerlink" title="Self-heal-daemon:"></a>Self-heal-daemon:</h4><p>self-heal-daemon process keeps running on each machine of the trusted storage pool. This process has afr xlators of all the volumes which are started. Its job is to crawl indices on bricks that are local to that machine. If any of the files represented by the gfid of the link name need healing and automatically heal them. This operation is performed every 10 minutes for each replica set. Additionally when a brick comes online also this operation is performed.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>How GlusterFs Distribution Works</title>
    <link href="/2020/04/15/glusterfs-dht%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84/"/>
    <url>/2020/04/15/glusterfs-dht%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<h1 id="How-GlusterFS-Distribution-Works"><a href="#How-GlusterFS-Distribution-Works" class="headerlink" title="How GlusterFS Distribution Works"></a>How GlusterFS Distribution Works</h1><p>The defining feature of any scale-out system is its ability to distribute work<br>or data among many servers.  Accordingly, people in the distributed-system<br>community have developed many powerful techniques to perform such distribution,<br>but those techniques often remain little known or understood even among other<br>members of the file system and database communities that benefit.  This<br>confusion is represented even in the name of the GlusterFS component that<br>performs distribution - DHT, which stands for Distributed Hash Table but is not<br>actually a DHT as that term is most commonly used or defined.  The way<br>GlusterFS’s DHT works is based on a few basic principles:</p><ul><li><p>All operations are driven by clients, which are all equal.  There are no<br>special nodes with special knowledge of where files are or should be.</p></li><li><p>Directories exist on all subvolumes (bricks or lower-level aggregations of<br>bricks); files exist on only one.</p></li><li><p>Files are assigned to subvolumes based on <em>consistent hashing</em>, and even<br>more specifically a form of consistent hashing exemplified by Amazon’s<br><a href="http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf" target="_blank" rel="noopener">Dynamo</a>.</p></li></ul><p>The result of all this is that users are presented with a set of files that is<br>the union of the files present on all subvolumes.  The following sections<br>describe how this “uniting” process actually works.</p><h2 id="Layouts"><a href="#Layouts" class="headerlink" title="Layouts"></a>Layouts</h2><p>The conceptual basis of Dynamo-style consistent hashing is of numbers around a<br>circle, like a clock.  First, the circle is divided into segments and those<br>segments are assigned to bricks.  (For the sake of simplicity we’ll use<br>“bricks” hereafter even though they might actually be replicated/striped<br>subvolumes.)  Several factors guide this assignment.</p><ul><li><p>Assignments are done separately for each directory.</p></li><li><p>Historically, segments have all been the same size.  However, this can lead<br>to smaller bricks becoming full while plenty of space remains on larger<br>ones.  If the <em>cluster.weighted-rebalance</em> option is set, segments sizes<br>will be proportional to brick sizes.</p></li><li><p>Assignments need not include all bricks in the volume.  If the<br><em>cluster.subvols-per-directory</em> option is set, only that many bricks will<br>receive assignments for that directory.</p></li></ul><p>However these assignments are done, they collectively become what we call a<br><em>layout</em> for a directory.  This layout is then stored using extended<br>attributes, with each brick’s copy of that extended attribute on that directory<br>consisting of four 32-bit fields.</p><ul><li><p>A version, which might be DHT_HASH_TYPE_DM to represent an assignment as<br>described above, or DHT_HASH_TYPE_DM_USER to represent an assignment made<br>manually by the user (or external script).</p></li><li><p>A “commit hash” which will be described later.</p></li><li><p>The first number in the assigned range (segment).</p></li><li><p>The last number in the assigned range.</p></li></ul><p>For example, the extended attributes representing a weighted assignment between<br>three bricks, one twice as big as the others, might look like this.</p><ul><li><p>Brick A (the large one): DHT_HASH_TYPE_DM 1234 0 0x7ffffff</p></li><li><p>Brick B: DHT_HASH_TYPE_DM 1234 0x80000000 0xbfffffff</p></li><li><p>Brick C: DHT_HASH_TYPE_DM 1234 0xc0000000 0xffffffff</p></li></ul><h2 id="Placing-Files"><a href="#Placing-Files" class="headerlink" title="Placing Files"></a>Placing Files</h2><p>To place a file in a directory, we first need a layout for that directory - as<br>described above.  Next, we calculate a hash for the file.  To minimize<br>collisions either between files in the same directory with different names or<br>between files in different directories with the same name, this hash is<br>generated using both the (containing) directory’s unique GFID and the file’s<br>name.  This hash is then matched to one of the layout assignments, to yield<br>what we call a <em>hashed location</em>.  For example, consider the layout shown<br>above.  The hash 0xabad1dea is between 0x80000000 and 0xbfffffff, so the<br>corresponding file’s hashed location would be on Brick B.  A second file with a<br>hash of 0xfaceb00c would be assigned to Brick C by the same reasoning.</p><h2 id="Looking-Up-Files"><a href="#Looking-Up-Files" class="headerlink" title="Looking Up Files"></a>Looking Up Files</h2><p>Because layout assignments might change, especially as bricks are added or<br>removed, finding a file involves more than calculating its hashed location and<br>looking there.  That is in fact the first step, and works most of the time -<br>i.e. the file is found where we expected it to be - but there are a few more<br>steps when that’s not the case.  Historically, the next step has been to look<br>for the file <strong>everywhere</strong> - i.e. to broadcast our lookup request to all<br>subvolumes.  If the file isn’t found that way, it doesn’t exist.  At this<br>point, an open that requires the file’s presence will fail, or a create/mkdir<br>that requires its absence will be allowed to continue.</p><p>Regardless of whether a file is found at its hashed location or elsewhere, we<br>now know its <em>cached location</em>.  As the name implies, this is stored within DHT<br>to satisfy future lookups.  If it’s not the same as the hashed location, we<br>also take an extra step.  This step is the creation of a <em>linkfile</em>, which is a<br>special stub left at the <strong>hashed</strong> location pointing to the <strong>cached</strong><br>location.  Therefore, if a client naively looks for a file at its hashed<br>location and finds a linkfile instead, it can use that linkfile to look up the<br>file where it really is instead of needing to inquire everywhere.</p><h2 id="Rebalancing"><a href="#Rebalancing" class="headerlink" title="Rebalancing"></a>Rebalancing</h2><p>As bricks are added or removed, or files are renamed, many files can end up<br>somewhere other than at their hashed locations.  When this happens, the volumes<br>need to be rebalanced.  This process consists of two parts.</p><ol><li><p>Calculate new layouts, according to the current set of bricks (and possibly<br>their characteristics).  We call this the “fix-layout” phase.</p></li><li><p>Migrate any “misplaced” files to their correct (hashed) locations, and<br>clean up any linkfiles which are no longer necessary.  We call this the<br>“migrate-data” phase.</p></li></ol><p>Usually, these two phases are done together.  (In fact, the code for them is<br>somewhat intermingled.)  However, the migrate-data phase can involve a lot of<br>I/O and be very disruptive, so users can do just the fix-layout phase and defer<br>migrate-data until a more convenient time.  This allows new files to be placed<br>on new bricks, even though old files might still be in the “wrong” place.</p><p>When calculating a new layout to replace an old one, DHT specifically tries to<br>maximize overlap of the assigned ranges, thus minimizing data movement.  This<br>difference can be very large.  For example, consider the case where our example<br>layout from earlier is updated to add a new double-sided brick.  Here’s a very<br>inefficient way to do that.</p><ul><li><p>Brick A (the large one): 0x00000000 to 0x55555555</p></li><li><p>Brick B: 0x55555556 to 0x7fffffff</p></li><li><p>Brick C: 0x80000000 to 0xaaaaaaaa</p></li><li><p>Brick D (the new one): 0xaaaaaaab to 0xffffffff</p></li></ul><p>This would cause files in the following ranges to be migrated:</p><ul><li><p>0x55555556 to 0x7fffffff (from A to B)</p></li><li><p>0x80000000 to 0xaaaaaaaa (from B to C)</p></li><li><p>0xaaaaaaab to 0xbfffffff (from B to D)</p></li><li><p>0xc0000000 to 0xffffffff (from C to D)</p></li></ul><p>As an historical note, this is exactly what we used to do, and in this case it<br>would have meant moving 7/12 of all files in the volume.  Now let’s consider a<br>new layout that’s optimized to maximize overlap with the old one. </p><ul><li><p>Brick A: 0x00000000 to 0x55555555</p></li><li><p>Brick D: 0x55555556 to 0xaaaaaaaa  &lt;- optimized insertion point</p></li><li><p>Brick B: 0xaaaaaaab to 0xd5555554</p></li><li><p>Brick C: 0xd5555555 to 0xffffffff</p></li></ul><p>In this case we only need to move 5/12 of all files.  In a volume with millions<br>or even billions of files, reducing data movement by 1/6 of all files is a<br>pretty big improvement.  In the future, DHT might use “virtual node IDs” or<br>multiple hash rings to make rebalancing even more efficient.</p><h2 id="Rename-Optimizations"><a href="#Rename-Optimizations" class="headerlink" title="Rename Optimizations"></a>Rename Optimizations</h2><p>With the file-lookup mechanisms we already have in place, it’s not necessary to<br>move a file from one brick to another when it’s renamed - even across<br>directories.  It will still be found, albeit a little less efficiently.  The<br>first client to look for it after the rename will add a linkfile, which every<br>other client will follow from then on.  Also, every client that has found the<br>file once will continue to find it based on its cached location, without any<br>network traffic at all.  Because the extra lookup cost is small, and the<br>movement cost might be very large, DHT renames the file “in place” on its<br>current brick instead (taking advantage of the fact that directories exist<br>everywhere).</p><p>This optimization is further extended to handle cases where renames are very<br>common.  For example, rsync and similar tools often use a “write new then<br>rename” idiom in which a file “xxx” is actually written as “.xxx.1234” and then<br>moved into place only after its contents have been fully written.  To make this<br>process more efficient, DHT uses a regular expression to separate the permanent<br>part of a file’s name (in this case “xxx”) from what is likely to be a<br>temporary part (the leading “.” and trailing “.1234”).  That way, after the<br>file is renamed it will be in its correct hashed location - which it wouldn’t<br>be otherwise if “xxx” and “.xxx.1234” hash differently - and no linkfiles or<br>broadcast lookups will be necessary.</p><p>In fact, there are two regular expressions available for this purpose -<br><em>cluster.rsync-hash-regex</em> and <em>cluster.extra-hash-regex</em>.  As its name<br>implies, <em>rsync-hash-regex</em> defaults to the pattern that regex uses, while<br><em>extra-hash-regex</em> can be set by the user to support a second tool using the<br>same temporary-file idiom.</p><h2 id="Commit-Hashes"><a href="#Commit-Hashes" class="headerlink" title="Commit Hashes"></a>Commit Hashes</h2><p>A very recent addition to DHT’s algorithmic arsenal is intended to reduce the<br>number of “broadcast” lookups the it issues.  If a volume is completely in<br>balance, then no file could exist anywhere but at its hashed location.<br>Therefore, if we’ve already looked there and not found it, then looking<br>elsewhere would be pointless (and wasteful).  The <em>commit hash</em> mechanism is<br>used to detect this case.  A commit hash is assigned to a volume, and<br>separately to each directory, and then updated according to the following<br>rules.</p><ul><li><p>The volume commit hash is changed whenever actions are taken that might<br>cause layout assignments across all directories to become invalid - i.e.<br>bricks being added, removed, or replaced.</p></li><li><p>The directory commit hash is changed whenever actions are taken that might<br>cause files to be “misplaced” - e.g. when they’re renamed.</p></li><li><p>The directory commit hash is set to the volume commit hash when the<br>directory is created, and whenever the directory is fully rebalanced so that<br>all files are at their hashed locations.</p></li></ul><p>In other words, whenever either the volume or directory commit hash is changed<br>that creates a mismatch.  In that case we revert to the “pessimistic”<br>broadcast-lookup method described earlier.  However, if the two hashes match<br>then we can with skip the broadcast lookup and return a result immediately.<br>This has been observed to cause a 3x performance improvement in workloads that<br>involve creating many small files across many bricks.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs global-threading挂载选项</title>
    <link href="/2020/04/15/glusterfs-global-threading%E6%8C%82%E8%BD%BD%E9%80%89%E9%A1%B9/"/>
    <url>/2020/04/15/glusterfs-global-threading%E6%8C%82%E8%BD%BD%E9%80%89%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs"><span class="hljs-attribute">core</span>: implement a global thread poolThis patch implements a thread pool that is wait-free for adding jobs tothe queue and uses a very small locked region to get jobs. This makes itpossible to decrease contention drastically. It's based on wfcqueuestructure provided by urcu library.It automatically enables more threads when load demands it, and stopsthem when not needed. There's a maximum number of threads that can beused. This value can be configured.Depending on the workload, the maximum number of threads plays animportant role. So it needs to be configured for optimal performance.Currently the thread pool doesn't self adjust the maximum for theworkload, so this configuration needs to be changed manually.For this reason, the global thread pool has been made optional, so thatvolumes can still use the thread pool provided by io-threads.To enable it for bricks, the following option needs to be set:config.global-threading = onThis option has no effect if bricks are already running. A restart isrequired to activate it. It's recommended to also enable the followingoption when running bricks with the global thread pool:performance.iot-pass-through = onTo enable it for a FUSE mount point, the option '--global-threading'must be added to the mount command. To change it, an umount and remountis needed. It's recommended to disable the following option when usingglobal threading on a mount point:performance.client-io-threads = offCurrently it can only be enabled for bricks and FUSE mounts.The maximum number of threads for clients and bricks can be configuredusing the following options:<span class="hljs-attribute">config.client-threads</span><span class="hljs-attribute">config.brick-threads</span><span class="hljs-attribute"></span>These options can be applied online and its effect is immediate most ofthe times. If one of them is set to 0, the maximum number of threadswill be calcutated as #cores * 2.Some distributions use a very old userspace-rcu library (version 0.7)for this reason, some header files from version 0.10 have been copiedinto contrib/userspace-rcu and are used if the detected version is 0.7or older.If you also want to enable global-threading for fuse clients, you also need to set this option:# gluster volume set &lt;volname&gt; performance.client-io-threads offAnd remount the volume using --global-threading mount option.gluster volume set dht_vol performance.client-io-threads offmount -t glusterfs -o acl,global-threading 127.0.0.1:/dht_vol /mnt/data</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>go pipeline样例</title>
    <link href="/2020/04/15/go-pipeline%E6%A0%B7%E4%BE%8B/"/>
    <url>/2020/04/15/go-pipeline%E6%A0%B7%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="workflow-for-pipeline"><a href="#workflow-for-pipeline" class="headerlink" title="workflow for pipeline"></a>workflow for pipeline</h3><p><img src="https://upload-images.jianshu.io/upload_images/2582954-e811c2065a9f1b09.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="pipeline-v1.jpg"></p><h3 id="runing-result"><a href="#runing-result" class="headerlink" title="runing result"></a>runing result</h3><pre><code class="hljs fortran">enter contrl+c  to <span class="hljs-keyword">stop</span> pipeline <span class="hljs-function"><span class="hljs-keyword">program</span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/2582954-1c05168284572a19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="result.png"></p><h3 id="code-example"><a href="#code-example" class="headerlink" title="code example"></a>code example</h3><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<span class="hljs-keyword">import</span> (        <span class="hljs-string">"log"</span>        <span class="hljs-string">"math/rand"</span>        <span class="hljs-string">"os"</span>        <span class="hljs-string">"os/signal"</span>        <span class="hljs-string">"syscall"</span>        <span class="hljs-string">"time"</span>)<span class="hljs-comment">/*</span><span class="hljs-comment">classic pipeline demo write by perrynzhou@gmail.com</span><span class="hljs-comment">*/</span><span class="hljs-keyword">const</span> (        batchSize = <span class="hljs-number">8</span>)<span class="hljs-comment">/*</span><span class="hljs-comment">note:</span><span class="hljs-comment">        for range 在chan上有如下特性</span><span class="hljs-comment">                1.如果chan上有数据，则for 继续往下执行，如果chan没有数据则for 会阻塞</span><span class="hljs-comment">                2.如果chan被close了，则chan为nil,for range会退出循环。</span><span class="hljs-comment">*/</span><span class="hljs-keyword">type</span> PipeFeature <span class="hljs-keyword">struct</span> &#123;        input1 <span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>        input2 <span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>        input3 <span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>        done   <span class="hljs-keyword">chan</span> <span class="hljs-keyword">struct</span>&#123;&#125;        stop   <span class="hljs-keyword">chan</span> <span class="hljs-keyword">struct</span>&#123;&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">NewPipeFeature</span><span class="hljs-params">()</span> *<span class="hljs-title">PipeFeature</span></span> &#123;        <span class="hljs-keyword">return</span> &amp;PipeFeature&#123;                input1: <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>, batchSize),                input2: <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>, batchSize),                input3: <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-keyword">int64</span>, batchSize),                done:   <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-keyword">struct</span>&#123;&#125;),                stop:   <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-keyword">struct</span>&#123;&#125;),        &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;        log.Println(<span class="hljs-string">"...init running..."</span>)        <span class="hljs-keyword">defer</span> <span class="hljs-built_in">close</span>(p.input1)        <span class="hljs-keyword">for</span> &#123;                <span class="hljs-keyword">select</span> &#123;                <span class="hljs-keyword">case</span> &lt;-p.done:                        log.Println(<span class="hljs-string">"...init stop..."</span>)                        <span class="hljs-keyword">return</span>                <span class="hljs-keyword">default</span>:                        time.Sleep(<span class="hljs-number">5</span> * time.Millisecond)                        p.input1 &lt;- rand.Int63n(<span class="hljs-number">65535</span>)                &#125;        &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">stage1</span><span class="hljs-params">()</span></span> &#123;        log.Println(<span class="hljs-string">"...stage1 running..."</span>)        <span class="hljs-keyword">defer</span> <span class="hljs-built_in">close</span>(p.input2)        <span class="hljs-keyword">for</span> v := <span class="hljs-keyword">range</span> p.input1 &#123; <span class="hljs-comment">//will block util input1 close</span>                v = v - rand.Int63n(<span class="hljs-number">1024</span>)                p.input2 &lt;- v        &#125;        log.Println(<span class="hljs-string">"stage1 done..."</span>)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">stage2</span><span class="hljs-params">()</span></span> &#123;        log.Println(<span class="hljs-string">"...stage2 running..."</span>)        <span class="hljs-keyword">defer</span> <span class="hljs-built_in">close</span>(p.input3)        <span class="hljs-keyword">for</span> v := <span class="hljs-keyword">range</span> p.input2 &#123;                v = v + <span class="hljs-number">1</span>                p.input3 &lt;- v        &#125;        log.Println(<span class="hljs-string">"stage2 done..."</span>)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">stage3</span><span class="hljs-params">()</span></span> &#123;        log.Println(<span class="hljs-string">"...stage3 running..."</span>)        <span class="hljs-keyword">for</span> v3 := <span class="hljs-keyword">range</span> p.input3 &#123; <span class="hljs-comment">//will block</span>                v3 = v3 + rand.Int63n(<span class="hljs-number">100</span>)        &#125;        log.Println(<span class="hljs-string">"stage3 done..."</span>)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">Run</span><span class="hljs-params">()</span></span> &#123;        log.Println(<span class="hljs-string">"start pipeline..."</span>)        <span class="hljs-keyword">go</span> p.init() <span class="hljs-comment">//order2- recv data from done and closed input1, return this function</span>        <span class="hljs-keyword">go</span> p.stage1() order <span class="hljs-number">3</span>-<span class="hljs-keyword">if</span> input1 is closed,<span class="hljs-keyword">break</span> <span class="hljs-keyword">for</span> loop, and <span class="hljs-built_in">close</span> input2 before <span class="hljs-keyword">return</span>         <span class="hljs-keyword">go</span> p.stage2() <span class="hljs-comment">//order 4-if input2 is closed ,break for range input2 and close input3 before return </span>       <span class="hljs-comment">// order 5- if input3 is closed,stage3 return</span>        p.stage3() <span class="hljs-comment">//  will block util input3 closed after call stage2</span>        p.stop &lt;- <span class="hljs-keyword">struct</span>&#123;&#125;&#123;&#125; <span class="hljs-comment">// order 6-send stop flag to stop chan before end Run function</span>&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *PipeFeature)</span> <span class="hljs-title">Stop</span><span class="hljs-params">()</span></span> &#123;        p.done &lt;- <span class="hljs-keyword">struct</span>&#123;&#125;&#123;&#125;  <span class="hljs-comment">// order 1-let init function to stop</span>      <span class="hljs-comment">//order 7 - already recv data from stop chan</span>        &lt;-p.stop <span class="hljs-comment">//wait for recv stop chan</span>        log.Println(<span class="hljs-string">"stop pipeline..."</span>)&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;        pipe := NewPipeFeature()        <span class="hljs-keyword">defer</span> pipe.Stop()        sigs := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> os.Signal, <span class="hljs-number">1</span>)        signal.Notify(sigs, os.Interrupt, syscall.SIGTERM, syscall.SIGINT)        <span class="hljs-keyword">go</span> pipe.Run()        <span class="hljs-keyword">for</span> &#123;                <span class="hljs-keyword">select</span> &#123;                <span class="hljs-keyword">case</span> &lt;-sigs:                        log.Println(<span class="hljs-string">"recieve stop signal"</span>)                        <span class="hljs-keyword">return</span>                &#125;        &#125;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>System IO和Standard IO详解</title>
    <link href="/2020/04/15/System-IO%E5%92%8CStandard-IO%E8%AF%A6%E8%A7%A3/"/>
    <url>/2020/04/15/System-IO%E5%92%8CStandard-IO%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="System-IO"><a href="#System-IO" class="headerlink" title="System IO"></a>System IO</h2><ul><li>System IO指的是使用open/close/read/write/lseek系统调用使用io的方式，这样的方式是实打实的从user space-&gt;kernel space中函数调用,这样的方式是实时性高。<h2 id="Standard-IO"><a href="#Standard-IO" class="headerlink" title="Standard IO"></a>Standard IO</h2></li><li>Standard IO 是是指使用stdio中的FILE中的fopen/fclose/fread/fwrite/fseek等方式进行IO的操作.使用stdio中的函数实现是依赖底层system io的系统函数。stdio中的函数是带有cache的机制，说简单点就是merge system io函数的调用，已达到在kernel层面减少系统调用的，这样的IO方式可以提高吞吐量。</li></ul><h2 id="文件描述符本质"><a href="#文件描述符本质" class="headerlink" title="文件描述符本质"></a>文件描述符本质</h2><p><img src="https://upload-images.jianshu.io/upload_images/2582954-b0b70b4672c56758.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png"></p><ul><li><p>每个文件open/fopen以后会产生一个inode-struct.一个inode-struct包含了文件操作的基本属性以及position，position是这个文件读写的位置。每个inode-struct会保存在每个进程中的文件描述符的数组中，open返回的fd就是这个数组的下边。</p></li><li><p>每个进程在默认情况下最多打开1024个文件描述符，0/1/2默认是是输入、输出、错误输出。</p></li><li><p>进程中文件描述符数组使用方式按照最小下标方式。</p></li><li><p>FILE 结构中的position和inode-struct中的postition基本不是一样的，这个为什么？比如执行三次fput(FILE,’a’)，这样的操作在FILE结构中postion会++3次。这个position中是揍batch然后在kernel层面统一执行一次系统调用。</p></li><li><p>System IO 和 Standard IO 不能混用。</p><h2 id="验证推断"><a href="#验证推断" class="headerlink" title="验证推断"></a>验证推断</h2></li><li><p>实例代码验证standard io缓冲以及system io 实打实的调用</p><pre><code class="hljs dart"><span class="hljs-comment"><span class="markdown">/<span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-emphasis">***</span></span></span><span class="hljs-comment"><span class="markdown">  &gt; File Name: test.c</span></span><span class="hljs-comment"><span class="markdown">  &gt; Author:perrynzhou </span></span><span class="hljs-comment"><span class="markdown">  &gt; Mail:perrynzhou@gmail.com </span></span><span class="hljs-comment"><span class="markdown">  &gt; Created Time: Sat May  4 21:58:45 2019</span></span><span class="hljs-comment"><span class="markdown"> <span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span>**/</span></span>#include &lt;stdio.h&gt;#include &lt;unistd.h&gt;#include &lt;stdlib.h&gt;<span class="hljs-built_in">int</span> main()&#123;    putchar(<span class="hljs-string">'a'</span>);    write(<span class="hljs-number">1</span>, <span class="hljs-string">"b"</span>, <span class="hljs-number">1</span>);    putchar(<span class="hljs-string">'a'</span>);    write(<span class="hljs-number">1</span>, <span class="hljs-string">"b"</span>, <span class="hljs-number">1</span>);    putchar(<span class="hljs-string">'a'</span>);    write(<span class="hljs-number">1</span>, <span class="hljs-string">"b"</span>, <span class="hljs-number">1</span>);    exit(<span class="hljs-number">0</span>);&#125;</code></pre></li><li><p>执行结果如下</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/2582954-77a03ea892dfc791.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="Snipaste_2019-05-04_22-11-44.png"></p><ul><li><p>trace下test执行路径<br><img src="https://upload-images.jianshu.io/upload_images/2582954-f654d46749be9fcb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="Snipaste_2019-05-04_22-16-58.png"></p></li><li><p>分析<br>strace后的执行路径，可以看出，putchar执行三次最后是一次write(1,”aaa”,3)写入。其他的关于b的写入，每一次write都会写一次。</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>zombies 和 init process</title>
    <link href="/2020/04/15/zombies-%E5%92%8C-init-process/"/>
    <url>/2020/04/15/zombies-%E5%92%8C-init-process/</url>
    
    <content type="html"><![CDATA[<h4 id="进程关系"><a href="#进程关系" class="headerlink" title="进程关系"></a>进程关系</h4><h4 id="zombies进程"><a href="#zombies进程" class="headerlink" title="zombies进程"></a>zombies进程</h4><ul><li>linux中的pid号和file的fd号的规则不同，pid的增长是逐次递增使用，如果达到上限再来一次从小到大的周期，寻找可用的pid号。如果没有就会出现系统错误。<ul><li>linux fork后子进程先于父进程退出，这个进程子进程就是zombies的进程，zombies的进程占用的是pcb块资源以及pid资源，zombies的进程最终由1号(init process接管),统一由init process回收这些zombies进程，但是这个回收zombies的进程是异步的<h4 id="孤儿进程"><a href="#孤儿进程" class="headerlink" title="孤儿进程"></a>孤儿进程</h4></li><li>linux fork之后父进程退出，子进程存活，这些子进程是孤儿进程，孤儿进程是由init process接管。这些孤儿进程最开始得父进程是fork出来这些子进程的父进程，之后父进程退出后，孤儿进程的父进程就是1号进程(init process)<h4 id="zombies-代码例子"><a href="#zombies-代码例子" class="headerlink" title="zombies 代码例子"></a>zombies 代码例子</h4><img src="https://upload-images.jianshu.io/upload_images/2582954-8acbf597c443ce01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png"></li></ul></li></ul><pre><code class="hljs cpp"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: fork0.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Sun 16 Jun 2019 01:55:54 PM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;getopt.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">is_num</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == s)  &#123;    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  &#125;  <span class="hljs-keyword">size_t</span> len = <span class="hljs-built_in">strlen</span>(s);  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)  &#123;    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isdigit</span>(s[i]) == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    &#125;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc,<span class="hljs-keyword">char</span> *argv[])</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> pn, fn;  <span class="hljs-keyword">int</span> default_pn = <span class="hljs-number">2</span>;  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *cmd_line = <span class="hljs-string">"p:"</span>;  <span class="hljs-keyword">char</span> ch;  <span class="hljs-keyword">while</span> ((ch = getopt(argc, argv, cmd_line)) != <span class="hljs-number">-1</span>)  &#123;    <span class="hljs-keyword">int</span> flag = is_num(optarg);    <span class="hljs-keyword">switch</span>(ch)    &#123;    <span class="hljs-keyword">case</span> <span class="hljs-string">'p'</span>:      pn = (flag == <span class="hljs-number">0</span>) ? atoi(optarg) : default_pn;      <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">default</span>:      <span class="hljs-keyword">break</span>;    &#125;  &#125;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>,<span class="hljs-string">"process number:%d\n"</span>,pn);  fflush(<span class="hljs-literal">NULL</span>);  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; pn; i++)  &#123;    fflush(<span class="hljs-literal">NULL</span>);    <span class="hljs-keyword">pid_t</span> pid = fork();    <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">-1</span>)    &#123;      perror(<span class="hljs-string">"fork()"</span>);      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);    &#125;    <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"child process %ld,parent process %ld\n"</span>, getpid(), getppid());      <span class="hljs-comment">//sleep(100000); </span>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);    &#125;  &#125;  sleep(<span class="hljs-number">10000</span>);  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h5 id="孤儿进程-1"><a href="#孤儿进程-1" class="headerlink" title="孤儿进程"></a>孤儿进程</h5><p><img src="https://upload-images.jianshu.io/upload_images/2582954-70345eae7ba28d33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png"></p><pre><code class="hljs cpp"><span class="hljs-comment">/*************************************************************************</span><span class="hljs-comment">  &gt; File Name: fork0.c</span><span class="hljs-comment">  &gt; Author:perrynzhou </span><span class="hljs-comment">  &gt; Mail:perrynzhou@gmail.com </span><span class="hljs-comment">  &gt; Created Time: Sun 16 Jun 2019 01:55:54 PM CST</span><span class="hljs-comment"> ************************************************************************/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;getopt.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">is_num</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *s)</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == s)  &#123;    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  &#125;  <span class="hljs-keyword">size_t</span> len = <span class="hljs-built_in">strlen</span>(s);  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)  &#123;    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isdigit</span>(s[i]) == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    &#125;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc,<span class="hljs-keyword">char</span> *argv[])</span></span><span class="hljs-function"></span>&#123;  <span class="hljs-keyword">int</span> pn, fn;  <span class="hljs-keyword">int</span> default_pn = <span class="hljs-number">2</span>;  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *cmd_line = <span class="hljs-string">"p:"</span>;  <span class="hljs-keyword">char</span> ch;  <span class="hljs-keyword">while</span> ((ch = getopt(argc, argv, cmd_line)) != <span class="hljs-number">-1</span>)  &#123;    <span class="hljs-keyword">int</span> flag = is_num(optarg);    <span class="hljs-keyword">switch</span>(ch)    &#123;    <span class="hljs-keyword">case</span> <span class="hljs-string">'p'</span>:      pn = (flag == <span class="hljs-number">0</span>) ? atoi(optarg) : default_pn;      <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">default</span>:      <span class="hljs-keyword">break</span>;    &#125;  &#125;  <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>,<span class="hljs-string">"process number:%d\n"</span>,pn);  fflush(<span class="hljs-literal">NULL</span>);  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; pn; i++)  &#123;    fflush(<span class="hljs-literal">NULL</span>);    <span class="hljs-keyword">pid_t</span> pid = fork();    <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">-1</span>)    &#123;      perror(<span class="hljs-string">"fork()"</span>);      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);    &#125;    <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">0</span>)    &#123;      <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">"child process %ld,parent process %ld\n"</span>, getpid(), getppid());      sleep(<span class="hljs-number">100000</span>);       <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);    &#125;  &#125; <span class="hljs-comment">// sleep(10000);</span>  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>理解简单汇编程序</title>
    <link href="/2020/04/15/%E7%90%86%E8%A7%A3%E7%AE%80%E5%8D%95%E6%B1%87%E7%BC%96%E7%A8%8B%E5%BA%8F/"/>
    <url>/2020/04/15/%E7%90%86%E8%A7%A3%E7%AE%80%E5%8D%95%E6%B1%87%E7%BC%96%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<ul><li>寄存器以及中断号对应表</li></ul><table><thead><tr><th>eax(系统调用号)</th><th>系统调用</th><th>ebx(系统调用参数1)</th><th>ecx(系统调用参数2)</th><th>ecx(系统调用参数3)</th><th>edx(系统调用参数4 )</th><th>esx(系统调用参数5)</th><th>edi（系统调用参数6）</th></tr></thead><tbody><tr><td>1</td><td>sys_exit</td><td>int</td><td>无</td><td>无</td><td>无</td><td>无</td><td>无</td></tr><tr><td>4</td><td>sys_write</td><td>unsigned int</td><td>const char *</td><td>size_t</td><td>无</td><td>无</td><td>无</td></tr></tbody></table><ul><li>hello.asm汇编代码解释<pre><code>//定义数据段SECTION .data;</code></pre></li></ul><p>//db 代表一个字节占8个字节，读完一个偏移量加1字节<br>//dw 是汇编中的一个字，就是占用2个字节，读完一个偏移量加2<br>//dd 是汇编中的一个双字节，占用4个字节，读完一个偏移量加4<br>MyMsg: db “hello,word”;<br>MyMsgLen: equ $-MyMsg;</p><p>//定义bbs段<br>SECTION  .bbs;<br>//定义代码段<br>SECTION .text;</p><p>global _start;</p><p>_start:<br>            nop;<br>            mov eax,4;                         //把4号系统调用写入到eax,sys_write写入到eax寄存器<br>            mov ebx,1;                         //把1号文件描述符写入到ebx<br>            mov ecx,MyMsg;                     //把MyMsg的地址写入到ecx<br>            mov edx,MyMsgLen;                       //把MyMsgLen写入到edx<br>            int 80H;                           //调用系统sys_write，回去eax取出对应的中断号，同时从ebx,ecx,edx出去系统调用参数进行调用<br>            mov eax,1;                              //把1号系统调用写入到eax<br>            mov ebx ,0;                         //把0写入到ebx中<br>            int 80H;                         //调用系统exit</p><pre><code>- linux系统中断对应表![image.png](https://upload-images.jianshu.io/upload_images/2582954-c5536607f4a7b75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>golang 1.4 mod 使用经验</title>
    <link href="/2020/04/15/golang-1-4-mod-%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/"/>
    <url>/2020/04/15/golang-1-4-mod-%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h4 id="1-go-mod-替代原来gopath的功能-依赖包下载依赖Go环境变量"><a href="#1-go-mod-替代原来gopath的功能-依赖包下载依赖Go环境变量" class="headerlink" title="1.go mod 替代原来gopath的功能,依赖包下载依赖Go环境变量"></a>1.go mod 替代原来gopath的功能,依赖包下载依赖Go环境变量</h4><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GO111MODULE</span>=on<span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOPROXY</span>=https://mirrors.aliyun.com/goproxy/</code></pre><h4 id="2-go-mod-init-一个golang-项目"><a href="#2-go-mod-init-一个golang-项目" class="headerlink" title="2.go mod init 一个golang 项目"></a>2.go mod init 一个golang 项目</h4><ul><li>go mod 的命令使用<pre><code class="hljs sql">$ go <span class="hljs-keyword">help</span> <span class="hljs-keyword">mod</span><span class="hljs-keyword">Usage</span>:        <span class="hljs-keyword">go</span> <span class="hljs-keyword">mod</span> &lt;command&gt; [arguments]The commands <span class="hljs-keyword">are</span>:        download    download modules <span class="hljs-keyword">to</span> <span class="hljs-keyword">local</span> <span class="hljs-keyword">cache</span>        edit        edit go.mod <span class="hljs-keyword">from</span> tools <span class="hljs-keyword">or</span> scripts        graph       print <span class="hljs-keyword">module</span> requirement graph        init        initialize <span class="hljs-keyword">new</span> <span class="hljs-keyword">module</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">current</span> <span class="hljs-keyword">directory</span>        tidy        <span class="hljs-keyword">add</span> <span class="hljs-keyword">missing</span> <span class="hljs-keyword">and</span> remove <span class="hljs-keyword">unused</span> modules        vendor      make vendored copy <span class="hljs-keyword">of</span> dependencies        <span class="hljs-keyword">verify</span>      <span class="hljs-keyword">verify</span> dependencies have expected <span class="hljs-keyword">content</span>        why         <span class="hljs-keyword">explain</span> why packages <span class="hljs-keyword">or</span> modules <span class="hljs-keyword">are</span> needed</code></pre></li><li>用go mod 初始化glusterfs-benchmark依赖包管理</li></ul><pre><code class="hljs sqf"><span class="hljs-comment">//进入glusterfs-benchmark目录</span>cd glusterfs-<span class="hljs-built_in">benchmark</span> go <span class="hljs-built_in">mod</span> init glusterfs-<span class="hljs-built_in">benchmark</span> <span class="hljs-comment">//会在 lusterfs-benchmark目录中  生成go.mod的文件</span></code></pre><ul><li>项目目录架构<pre><code class="hljs vim">[perrynzhou@Debian ~/Source/perryn/glusterfs-benchmark]$ tree ../glusterfs-benchmark/../glusterfs-benchmark/├── api│   ├── fuse_fetch.<span class="hljs-keyword">go</span>│   └── glfs_fetch.<span class="hljs-keyword">go</span>├── <span class="hljs-keyword">conf</span>│   └── <span class="hljs-keyword">conf</span>.<span class="hljs-keyword">go</span>├── <span class="hljs-keyword">go</span>.<span class="hljs-keyword">mod</span>├── metric│   └── metric.<span class="hljs-keyword">go</span>├── pkg│   └── <span class="hljs-keyword">mod</span>│       └── cache│           └── lock└── utils    └── utils.<span class="hljs-keyword">go</span><span class="hljs-number">14</span> directories, <span class="hljs-number">114</span> <span class="hljs-keyword">files</span></code></pre></li><li>引入glusterfs-benchmark/api/fuse_fetch.go中引入utils库本地库</li></ul><pre><code class="hljs processing"><span class="hljs-comment">// fuse_fetch.go的包信息</span><span class="hljs-keyword">package</span> api<span class="hljs-keyword">import</span> (<span class="hljs-string">"bufio"</span><span class="hljs-string">"fmt"</span><span class="hljs-built_in">log</span> <span class="hljs-string">"github.com/sirupsen/logrus"</span><span class="hljs-string">"glusterfs-benchmark/conf"</span><span class="hljs-string">"glusterfs-benchmark/metric"</span><span class="hljs-string">"glusterfs-benchmark/utils"</span><span class="hljs-string">"os"</span><span class="hljs-string">"path/filepath"</span><span class="hljs-string">"sync"</span><span class="hljs-string">"sync/atomic"</span>)</code></pre><pre><code class="hljs angelscript"><span class="hljs-comment">//修改go.mod文件</span>module glusterfs-benchmarkgo <span class="hljs-number">1.14</span>require github.com/sirupsen/logrus v1<span class="hljs-number">.4</span><span class="hljs-number">.2</span></code></pre><ul><li>项目构建<pre><code class="hljs maxima">//进入包含main.<span class="hljs-built_in">go</span>的目录下执行<span class="hljs-built_in">go</span> <span class="hljs-built_in">mod</span> vendor,保存依赖包<span class="hljs-built_in">go</span> <span class="hljs-built_in">mod</span> vendor//下载第三方依赖库<span class="hljs-built_in">go</span> <span class="hljs-built_in">mod</span> tidy -v//编译项目<span class="hljs-built_in">go</span> build -<span class="hljs-built_in">mod</span>=vendor</code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux文件系统</title>
    <link href="/2020/04/15/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <url>/2020/04/15/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/2582954-a7eed89cf5b27e87.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="文件系统（note by perrynzhou).png"></p><h5 id="1-文件系统的系统调用"><a href="#1-文件系统的系统调用" class="headerlink" title="1.文件系统的系统调用"></a>1.文件系统的系统调用</h5><ul><li>例如：read、write</li></ul><h5 id="2-虚拟文件系统-vfs-virtual-filesystem-switch"><a href="#2-虚拟文件系统-vfs-virtual-filesystem-switch" class="headerlink" title="2.虚拟文件系统(vfs virtual filesystem switch)"></a>2.虚拟文件系统(vfs virtual filesystem switch)</h5><ul><li><p>超级块对象</p><ul><li><p>简介</p><ul><li>1.代表已安装文件系统</li><li>2.每个文件系统都会对应一个超级块对象</li><li>3.描述整个文件系统信息(组织结构和管理信息),不涉及文件系统的内容</li><li>4.具体文件系统在安装时候建立，并在这些文件系统卸载时自动删除</li><li>5.vfs的超级超级块存在于内存，每个分区所挂在的文件系统都有一个属于该文件系统和分区的超级块存在于磁盘</li></ul></li><li><p>操作对象</p><ul><li><p>super_operations</p><ul><li>包括内核对特定文件系统所能调用的方法，比如read_inide/sync_fs等</li></ul></li></ul></li></ul></li><li><p>索引节点对象</p><ul><li><p>简介</p><ul><li>1.代表一个文件，包括访问权限、属主、组、大小、生成时间和访问时间</li><li>2.内核操作文件或者目录时需要的全部信息，一个文件对应一个inode(唯一)</li><li>3.具体文件系统的inode持久化在磁盘，访问时调入内存,vfs的inode存在于内存</li><li>4.vfs的inode是xfs inode的抽象，映射与扩充，而后者是前者的静态信息部分，也是对前者(vfs inode)的具体化、实例化和持久化</li></ul></li><li><p>操作对象</p><ul><li><p>inode_operations</p><ul><li>包括内核针对文件所能调用的方法，比如create/link等</li></ul></li></ul></li></ul></li><li><p>目录项对象（动态创建)</p><ul><li><p>简介</p><ul><li><p>1.代表一个目录项，是路径组成的一部分</p></li><li><p>2.用于方便查找目录，找到后缓存目录到dcache中</p><ul><li>例如/bin/vi,这个目录bin是目录文件，vi是普通文件</li></ul></li><li><p>3.该目录对象存在于内存，磁盘并没有任何的持久化</p></li></ul></li><li><p>操作对象</p><ul><li><p>dentry_operations</p><ul><li>内核针对目录所能调用方法，比如d_cpmpare/d_delete等</li></ul></li></ul></li></ul></li><li><p>文件对象</p><ul><li><p>简介</p><ul><li><p>1.代表进程打开的文件的内存表现形式</p><ul><li>调用open/close来创建和销毁文件对象</li></ul></li><li><p>2.文件对象存在于内存，在磁盘并没有具体的存储</p></li></ul></li><li><p>操作对象</p><ul><li><p>file_operations</p><ul><li>内核针对进程已打开的文件所能调用方法比如read/write等</li></ul></li></ul></li></ul></li></ul><h5 id="挂在到VFS的实际文件系统"><a href="#挂在到VFS的实际文件系统" class="headerlink" title="挂在到VFS的实际文件系统"></a>挂在到VFS的实际文件系统</h5><ul><li>例如:ext3、ext4、xfs</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/2582954-b3fd9e17db5e44e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="虚拟文件系统.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo 使用手册</title>
    <link href="/2020/04/15/hexo%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <url>/2020/04/15/hexo%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server 或者 hexo s</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate 或者 hexo g</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy 或者hexo d</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs小文件调优指南</title>
    <link href="/2020/04/15/glusterfs%E5%B0%8F%E6%96%87%E4%BB%B6%E8%B0%83%E4%BC%98%E6%8C%87%E5%8D%97/"/>
    <url>/2020/04/15/glusterfs%E5%B0%8F%E6%96%87%E4%BB%B6%E8%B0%83%E4%BC%98%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h4 id="glusterfs-小文件调优指南"><a href="#glusterfs-小文件调优指南" class="headerlink" title="glusterfs 小文件调优指南"></a>glusterfs 小文件调优指南</h4><h5 id="获取glusterfs参数说明和默认值"><a href="#获取glusterfs参数说明和默认值" class="headerlink" title="获取glusterfs参数说明和默认值"></a>获取glusterfs参数说明和默认值</h5><ul><li><p>glusterfs获取所有可用参数</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> gluster volume <span class="hljs-built_in">set</span> <span class="hljs-built_in">help</span></span></code></pre></li><li><p>获取指定参数</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> gluster volume <span class="hljs-built_in">set</span> <span class="hljs-built_in">help</span>|grep <span class="hljs-string">"cache-min-file-size"</span> -A7</span></code></pre><h5 id="glusterfs-volume调优参数"><a href="#glusterfs-volume调优参数" class="headerlink" title="glusterfs volume调优参数"></a>glusterfs volume调优参数</h5></li><li><p>1.目录操作性能</p><pre><code class="hljs routeros">Option: performance.readdir-aheadDefault Value: onDescription: enable/<span class="hljs-builtin-name">disable</span> readdir-ahead translator <span class="hljs-keyword">in</span> the volume.Option: performance.rda-cache-limitDefault Value: 10MBDescription: maximum size of cache consumed by readdir-ahead xlator. This value is global <span class="hljs-keyword">and</span> total memory consumption by readdir-ahead is capped by this value, irrespective of the number/size of directories cachedOption: cluster.readdir-optimizeDefault Value: offDescription: This option <span class="hljs-keyword">if</span> <span class="hljs-builtin-name">set</span> <span class="hljs-keyword">to</span> ON enables the optimization that allows DHT <span class="hljs-keyword">to</span> requests non-first subvolumes <span class="hljs-keyword">to</span><span class="hljs-built_in"> filter </span>out directory entries.Option: cluster.lookup-unhashedDefault Value: onDescription: This option <span class="hljs-keyword">if</span> <span class="hljs-builtin-name">set</span> <span class="hljs-keyword">to</span> ON, does a lookup through all the sub-volumes, <span class="hljs-keyword">in</span> case a lookup didn<span class="hljs-string">'t return any result from the hash subvolume. If set to OFF, it does not do a lookup on the remaining subvolumes.</span><span class="hljs-string"></span><span class="hljs-string">Option: performance.parallel-readdir</span><span class="hljs-string">Default Value: off</span><span class="hljs-string">Description: If this option is enabled, the readdir operation is performed in parallel on all the bricks, thus improving the performance of readdir. Note that the performance improvement is higher in large clusters</span><span class="hljs-string"></span><span class="hljs-string">gluster volume set dht_vol performance.readdir-ahead on</span><span class="hljs-string">gluster volume set dht_vol cluster.readdir-optimize on</span><span class="hljs-string">gluster volume set dht_vol cluster.lookup-unhashed off</span><span class="hljs-string">gluster volume set dht_vol performance.parallel-readdir on</span><span class="hljs-string">//默认是关闭</span><span class="hljs-string">gluster volume set dht_vol group metadata-cache</span></code></pre></li><li><p>2.inode缓存大小</p><pre><code class="hljs pgsql">//官方解释<span class="hljs-keyword">Option</span>: network.inode-lru-<span class="hljs-keyword">limit</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">16384</span>Description: Specifies the <span class="hljs-keyword">limit</span> <span class="hljs-keyword">on</span> the number <span class="hljs-keyword">of</span> inodes <span class="hljs-keyword">in</span> the lru list <span class="hljs-keyword">of</span> the inode <span class="hljs-keyword">cache</span>.//设置gluster volume set dht_vol network.inode-lru-limit <span class="hljs-number">100000</span></code></pre></li><li><p>3.实际IO操作线程调整</p><pre><code class="hljs pgsql">//官方解释<span class="hljs-keyword">Option</span>: performance.io-thread-count<span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">16</span>Description: Number <span class="hljs-keyword">of</span> threads <span class="hljs-keyword">in</span> IO threads translator which <span class="hljs-keyword">perform</span> concurrent IO operations// 设置值小于等于可用CPU的合数gluster volume <span class="hljs-keyword">set</span> dht_vol performance.io-thread-count <span class="hljs-number">32</span></code></pre></li><li><p>4.客户端rpc请求吞吐量设置</p><pre><code class="hljs routeros">Option: server.outstanding-rpc-limitDefault Value: 64Description: Parameter <span class="hljs-keyword">to</span> throttle the number of<span class="hljs-built_in"> incoming </span>RPC requests <span class="hljs-keyword">from</span> a client. 0 means <span class="hljs-literal">no</span> limit (can potentially <span class="hljs-builtin-name">run</span> out of memory)gluster volume <span class="hljs-builtin-name">set</span> dht_vol server.outstanding-rpc-limit 512</code></pre></li><li><p>5.event线程数设置（提高性能,降低响应时间)</p><pre><code class="hljs smali">//官方解释Option: client.event-threadsDefault Value: 2Description: Specifies the number of event threads to<span class="hljs-built_in"> execute </span>in parallel. Larger values would help process responses faster, depending on available processing power. Range 1-32 threads.Option: server.event-threadsDefault Value: 2Description: Specifies the number of event threads to<span class="hljs-built_in"> execute </span>in parallel. Larger values would help process responses faster, depending on available processing power.//设置超过可用CPU核数会导致context切换严重gluster volume set dht_vol  client.event-threads  8gluster volume set dht_vol  server.event-threads  8</code></pre></li><li><p>6.io-cache调整</p><pre><code class="hljs sql">//官方解释<span class="hljs-comment"># gluster volume set help|grep "io-cache" -A7</span>Option: performance.cache-<span class="hljs-keyword">min</span>-<span class="hljs-keyword">file</span>-<span class="hljs-keyword">size</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">0</span>Description: <span class="hljs-keyword">Minimum</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">size</span> which would be cached <span class="hljs-keyword">by</span> the io-<span class="hljs-keyword">cache</span> translator.<span class="hljs-keyword">Option</span>: performance.cache-<span class="hljs-keyword">min</span>-<span class="hljs-keyword">file</span>-<span class="hljs-keyword">size</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">0</span>Description: <span class="hljs-keyword">Minimum</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">size</span> which would be cached <span class="hljs-keyword">by</span> the io-<span class="hljs-keyword">cache</span> translator.<span class="hljs-keyword">Option</span>: performance.cache-<span class="hljs-keyword">refresh</span>-<span class="hljs-keyword">timeout</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">1</span>Description: The cached <span class="hljs-keyword">data</span> <span class="hljs-keyword">for</span> a <span class="hljs-keyword">file</span> will be retained <span class="hljs-keyword">for</span> <span class="hljs-string">'cache-refresh-timeout'</span> <span class="hljs-keyword">seconds</span>, <span class="hljs-keyword">after</span> which <span class="hljs-keyword">data</span> re-<span class="hljs-keyword">validation</span> <span class="hljs-keyword">is</span> performed.<span class="hljs-keyword">Option</span>: performance.io-<span class="hljs-keyword">cache</span>-pass-<span class="hljs-keyword">through</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-literal">false</span>Description: <span class="hljs-keyword">Enable</span>/<span class="hljs-keyword">Disable</span> io <span class="hljs-keyword">cache</span> translator<span class="hljs-keyword">Option</span>: performance.io-<span class="hljs-keyword">cache</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-keyword">on</span>Description: <span class="hljs-keyword">enable</span>/<span class="hljs-keyword">disable</span> io-<span class="hljs-keyword">cache</span> translator <span class="hljs-keyword">in</span> the volume.<span class="hljs-keyword">Option</span>: performance.open-behind<span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-keyword">on</span>Description: <span class="hljs-keyword">enable</span>/<span class="hljs-keyword">disable</span> <span class="hljs-keyword">open</span>-behind translator <span class="hljs-keyword">in</span> the volume.//当前我们采用opencas作为glusterfsd的后端存储，同时我们业务场景又是存储<span class="hljs-number">10</span>亿+的小文件，因此IO-<span class="hljs-keyword">cache</span>开启的意义不大,默认是开启（针对大文件效果好)，需要关闭才可以gluster volume <span class="hljs-keyword">set</span> dht_vol  performance.io-<span class="hljs-keyword">cache</span>  <span class="hljs-keyword">off</span></code></pre></li></ul><h5 id="gluster-volume调优样例"><a href="#gluster-volume调优样例" class="headerlink" title="gluster volume调优样例"></a>gluster volume调优样例</h5><pre><code class="hljs yaml"><span class="hljs-comment"># gluster volume info warm_vol1 </span> <span class="hljs-attr">Volume Name:</span> <span class="hljs-string">warm_vol1</span><span class="hljs-attr">Type:</span> <span class="hljs-string">Distribute</span><span class="hljs-attr">Volume ID:</span> <span class="hljs-string">d36874f3-60a0-458a-88b3-7f5ed18c645e</span><span class="hljs-attr">Status:</span> <span class="hljs-string">Started</span><span class="hljs-attr">Snapshot Count:</span> <span class="hljs-number">0</span><span class="hljs-attr">Number of Bricks:</span> <span class="hljs-number">2</span><span class="hljs-attr">Transport-type:</span> <span class="hljs-string">tcp</span><span class="hljs-attr">Bricks:</span><span class="hljs-attr">Brick1:</span> <span class="hljs-number">172.21</span><span class="hljs-number">.73</span><span class="hljs-number">.96</span><span class="hljs-string">:/glusterfs/warmvol1/data1/brick1</span><span class="hljs-attr">Brick2:</span> <span class="hljs-number">172.21</span><span class="hljs-number">.73</span><span class="hljs-number">.96</span><span class="hljs-string">:/glusterfs/warmvol1/data2/brick1</span><span class="hljs-attr">Options Reconfigured:</span><span class="hljs-attr">performance.rda-cache-limit:</span> <span class="hljs-string">1024MB</span><span class="hljs-attr">client.event-threads:</span> <span class="hljs-number">8</span><span class="hljs-attr">server.outstanding-rpc-limit:</span> <span class="hljs-number">512</span><span class="hljs-attr">performance.io-thread-count:</span> <span class="hljs-number">32</span><span class="hljs-attr">server.event-threads:</span> <span class="hljs-number">8</span><span class="hljs-attr">network.inode-lru-limit:</span> <span class="hljs-number">500000</span><span class="hljs-attr">performance.read-ahead-page-count:</span> <span class="hljs-number">16</span><span class="hljs-attr">cluster.min-free-inodes:</span> <span class="hljs-number">25</span><span class="hljs-string">%</span><span class="hljs-attr">performance.readdir-ahead:</span> <span class="hljs-string">on</span><span class="hljs-attr">cluster.readdir-optimize:</span> <span class="hljs-string">on</span><span class="hljs-attr">cluster.lookup-optimize:</span> <span class="hljs-string">on</span><span class="hljs-attr">performance.io-cache:</span> <span class="hljs-string">off</span><span class="hljs-attr">cluster.lookup-unhashed:</span> <span class="hljs-string">off</span><span class="hljs-attr">performance.parallel-readdir:</span> <span class="hljs-string">on</span><span class="hljs-attr">storage.fips-mode-rchecksum:</span> <span class="hljs-string">on</span></code></pre><h5 id="linux-网络参数调优"><a href="#linux-网络参数调优" class="headerlink" title="linux 网络参数调优"></a>linux 网络参数调优</h5><pre><code class="hljs stata"><span class="hljs-comment">//vi /etc/sysctl.conf 添加如下内容</span><span class="hljs-keyword">net</span>.core.rmem_max=67108864<span class="hljs-keyword">net</span>.core.wmem_max=67108864<span class="hljs-keyword">net</span>.ipv4.tcp_wmem=33554432<span class="hljs-keyword">net</span>.ipv4.tcp_rmem=33554432<span class="hljs-keyword">net</span>.core.netdev_max_backlog=30000<span class="hljs-keyword">net</span>.ipv4.tcp_congestion_control=htcp<span class="hljs-comment">// sysctl -p 生效</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用 Intel Open Cas加速glusterfs</title>
    <link href="/2020/04/14/%E4%BD%BF%E7%94%A8-Intel-Open-Cas%E5%8A%A0%E9%80%9Fglusterfs/"/>
    <url>/2020/04/14/%E4%BD%BF%E7%94%A8-Intel-Open-Cas%E5%8A%A0%E9%80%9Fglusterfs/</url>
    
    <content type="html"><![CDATA[<h3 id="Open-Cas-架构概览"><a href="#Open-Cas-架构概览" class="headerlink" title="Open Cas 架构概览"></a>Open Cas 架构概览</h3><ul><li><p>数据从HDD盘读取然后拷贝到open cas 的cache中，后续数据读取都是从内存读取，提高读写效率。</p></li><li><p>在write-through模式，所有的数据都是同步刷新到open cas的ssd和后端hdd硬盘中。</p></li><li><p>在write-back模式中，所有数据同步写入open cas的ssd中，然后异步刷新到HDD中。</p></li><li><p>open cas 缓存满后，采用open cas的淘汰算法，用最新写入的数据淘汰以前旧数据，已达到oepn cas始终可以缓存数据。</p><p><img src="https://open-cas.github.io/images/guide_figure1.jpg" srcset="/img/loading.gif" alt="alt text"> </p></li></ul><h3 id="系统组件以来"><a href="#系统组件以来" class="headerlink" title="系统组件以来"></a>系统组件以来</h3><ul><li>sed</li><li>make</li><li>gcc</li><li>kernel-devel</li><li>kernel-headers</li><li>python3</li><li>lsblk</li><li>argparse (python module)</li></ul><h3 id="安装linux-open-cas"><a href="#安装linux-open-cas" class="headerlink" title="安装linux open cas"></a>安装linux open cas</h3><h5 id="1-open-cas-由kernel-modules和cli工具组成"><a href="#1-open-cas-由kernel-modules和cli工具组成" class="headerlink" title="1.open cas 由kernel modules和cli工具组成"></a>1.open cas 由kernel modules和cli工具组成</h5><h5 id="2-为了获取最佳性能，强烈推荐在SSD-device采用noop的IO调度策略"><a href="#2-为了获取最佳性能，强烈推荐在SSD-device采用noop的IO调度策略" class="headerlink" title="2.为了获取最佳性能，强烈推荐在SSD device采用noop的IO调度策略"></a>2.为了获取最佳性能，强烈推荐在SSD device采用noop的IO调度策略</h5><h5 id="3-具体安装步骤"><a href="#3-具体安装步骤" class="headerlink" title="3.具体安装步骤:"></a>3.具体安装步骤:</h5><ul><li><p>下载open cas linux source</p><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/Open-CAS/open-cas-linux</code></pre></li></ul><ul><li><p>获取子模块</p><pre><code class="hljs stata"><span class="hljs-keyword">cd</span> <span class="hljs-keyword">open</span>-cas-linux git submodule <span class="hljs-keyword">update</span> –init</code></pre></li><li><p>配置和安装</p><pre><code class="hljs gauss">./configure<span class="hljs-built_in">make</span><span class="hljs-built_in">make</span> install</code></pre></li><li><p>检查和验证</p><pre><code class="hljs stylus">cas_disk<span class="hljs-selector-class">.ko</span>  <span class="hljs-comment">//open cas 磁盘内核模块</span>cas_cache<span class="hljs-selector-class">.ko</span> <span class="hljs-comment">//open cas 缓存内核模块</span>casadm       <span class="hljs-comment">//open cas 管理员工具</span>casadm -V    <span class="hljs-comment">//install 检验</span></code></pre></li></ul><h3 id="open-cas配置"><a href="#open-cas配置" class="headerlink" title="open cas配置"></a>open cas配置</h3><ul><li><p>配置文件在utils/opencas.conf中，包括cache的配置和core devices的配置</p><ul><li><p>caches配置说明</p><pre><code class="hljs angelscript"><span class="hljs-number">1.</span>cache id:执行设备的启动实例ID,整形取值范围在<span class="hljs-number">1</span>~<span class="hljs-number">16384</span><span class="hljs-number">2.</span>path:指向ssd的磁盘路径<span class="hljs-number">3.</span>desired mode:预期模式，一共有<span class="hljs-number">5</span>中模式，分别是write-through/write-back/write-only/pass-through<span class="hljs-number">4.</span>extra fields:用户自定义IO配置<span class="hljs-number">4.1</span> ioclass_file：允许用户加载自定义IO策略   <span class="hljs-number">4.2</span> cleaning_policy ：允许用户缓存清理的策略，包括了acp/alru/nop<span class="hljs-number">4.3</span> promotion_policy ：允许用户使用缓存的推进策略，包括了always/nhit</code></pre></li><li><p>core devices配置说明</p></li></ul></li></ul><pre><code>1.cache id:每个core device对应的Cache id，整形，取值范围0~40952.core id:每个core device的id3.path:core device的路径    //每个cache和core devices必须执行已经存储在hdd和ssd,core device应该引用wwn的标识，cache device必须顺序数据。</code></pre><ul><li><p>配置样例</p><pre><code class="hljs angelscript">## Caches configuration section[caches]## Cache ID Cache device Cache mode Extra fields (optional)<span class="hljs-number">1</span> /dev/disk/by-id/nvme-INTEL_SSD WT ioclass_file=/etc/opencas/ioclass-config.csv## Core devices configuration[cores]## Cache ID Core ID Core device<span class="hljs-number">1</span> <span class="hljs-number">1</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee0aed22393</span><span class="hljs-number">1</span> <span class="hljs-number">2</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee0042769ef</span><span class="hljs-number">1</span> <span class="hljs-number">3</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee00429bf94</span><span class="hljs-number">1</span> <span class="hljs-number">4</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee0aed45a6d</span><span class="hljs-number">1</span> <span class="hljs-number">5</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee6b11be556</span><span class="hljs-number">1</span> <span class="hljs-number">6</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee0aed229a4</span><span class="hljs-number">1</span> <span class="hljs-number">7</span> /dev/disk/by-id/wwn<span class="hljs-number">-0x50014ee004276c68</span></code></pre></li></ul><ul><li><p>cas管理工具</p><ul><li><p>手动配置 write-through 模式</p><ul><li>在该模式下，   caching  software 写入数据到flash device，然后顺序的写到到core device中，这种模式100%保证core device中数据和cache中数据一致，同时可以共享给其他的服务读取，这种类型可以加速读操作</li></ul><pre><code class="hljs awk">casadm -S -i <span class="hljs-number">1</span> -d <span class="hljs-regexp">/dev/</span>sdc  <span class="hljs-regexp">//</span>创建id=<span class="hljs-number">1</span>的cachecasadm -A -i <span class="hljs-number">1</span> -d <span class="hljs-regexp">/dev/</span>sdb  <span class="hljs-regexp">//</span>匹配<span class="hljs-regexp">/dev/</span>sdb到cache</code></pre></li><li><p>手动配置write-back模式</p><ul><li>在该模式下， caching  software首先把数据先写入到cache中，然后通知用户写完毕了，最后周期性的把数据写入到core device中,write-back模式提高了读写性能，但是会有数据丢失的风险  <pre><code class="hljs awk">casadm -S -i <span class="hljs-number">1</span> -d <span class="hljs-regexp">/dev/</span>sdc -c wbcasadm -A -i <span class="hljs-number">1</span> -d <span class="hljs-regexp">/dev/</span>sdb  <span class="hljs-regexp">//</span>匹配<span class="hljs-regexp">/dev/</span>sdb到cache</code></pre></li></ul></li><li><p>手动配置Write-around模式</p><ul><li><p>在write-around模式下， 只有block数据已经存在于cache中，caching  software把数据才会写入到flash device中，然后顺序写数据到core device.这种模式100%保证core device和cache一致， 写回操作进一步优化了缓存，以避免在写入数据且随后不经常重新读取数据的情况下对缓存的污染 。</p> <pre><code class="hljs angelscript">casadm -S -i <span class="hljs-number">1</span> -d /dev/sdc -c wa</code></pre></li><li><p>手动配置pass-through模式</p></li><li><p>在该模式下,caching software所有操作都绕开cache.</p><pre><code class="hljs angelscript">casadm -S -i <span class="hljs-number">1</span> -d /dev/sdc -c pt</code></pre></li></ul></li><li><p>手动配置write-only模式</p><ul><li>在write-only模式下,缓存系统先把数据写入到cache中，然后通知应用端写完成。后续周期性的同步写到core device中,当有新的读请求。只有当之前写入数据在cache device中，读请求会绕开cache software,直接读取caching device的数据。该模式仅仅提高写性能，但是会有数据丢失风险。</li></ul><pre><code class="hljs angelscript">casadm -S -i <span class="hljs-number">1</span> -d /dev/sdc -c wo</code></pre></li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs and opencas issue列表</title>
    <link href="/2020/04/14/glusterfs-issue%E5%88%97%E8%A1%A8/"/>
    <url>/2020/04/14/glusterfs-issue%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="issue-列表"><a href="#issue-列表" class="headerlink" title="issue 列表"></a>issue 列表</h3><ul><li>1.glusterfsd crash due to health-check failed, going down ,system call errorno not return<pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gluster/g</span>lusterfs<span class="hljs-regexp">/issues/</span><span class="hljs-number">1168</span></code></pre></li><li>2.glusterfsd memory leak killed by os #1166<pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gluster/g</span>lusterfs<span class="hljs-regexp">/issues/</span><span class="hljs-number">1166</span></code></pre></li><li>3.Major bug,glusterfsd consume to much cpu resource #1133<pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gluster/g</span>lusterfs<span class="hljs-regexp">/issues/</span><span class="hljs-number">1133</span></code></pre></li><li><ol start="4"><li>opencase case write page lost</li></ol></li></ul><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Open-CAS/</span>open-cas-linux<span class="hljs-regexp">/issues/</span><span class="hljs-number">396</span></code></pre><ul><li>5.Fatal Bug:distribute replica 3,one brick of data is different from another replicate one brick #1184</li></ul><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gluster/g</span>lusterfs<span class="hljs-regexp">/issues/</span><span class="hljs-number">1184</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs cluster.read-hash-mode的作用</title>
    <link href="/2020/04/14/glusterfs-cluster-read-hash-mode%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <url>/2020/04/14/glusterfs-cluster-read-hash-mode%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="1-官方解释"><a href="#1-官方解释" class="headerlink" title="1.官方解释"></a>1.官方解释</h3><pre><code class="hljs sql">[root@centos-linux ~]$ gluster volume <span class="hljs-keyword">set</span> <span class="hljs-keyword">help</span>|grep <span class="hljs-keyword">read</span>-<span class="hljs-keyword">hash</span>-<span class="hljs-keyword">mode</span> -A7<span class="hljs-keyword">Option</span>: cluster.read-<span class="hljs-keyword">hash</span>-<span class="hljs-keyword">mode</span><span class="hljs-keyword">Default</span> <span class="hljs-keyword">Value</span>: <span class="hljs-number">1</span>Description: inode-<span class="hljs-keyword">read</span> fops happen <span class="hljs-keyword">only</span> <span class="hljs-keyword">on</span> one <span class="hljs-keyword">of</span> the bricks <span class="hljs-keyword">in</span> replicate. AFR will prefer the one computed <span class="hljs-keyword">using</span> the method specified <span class="hljs-keyword">using</span> this option.<span class="hljs-number">0</span> = <span class="hljs-keyword">first</span> readable <span class="hljs-keyword">child</span> <span class="hljs-keyword">of</span> AFR, <span class="hljs-keyword">starting</span> <span class="hljs-keyword">from</span> <span class="hljs-number">1</span>st child.<span class="hljs-number">1</span> = <span class="hljs-keyword">hash</span> <span class="hljs-keyword">by</span> GFID <span class="hljs-keyword">of</span> <span class="hljs-keyword">file</span> (<span class="hljs-keyword">all</span> clients <span class="hljs-keyword">use</span> same subvolume).<span class="hljs-number">2</span> = <span class="hljs-keyword">hash</span> <span class="hljs-keyword">by</span> GFID <span class="hljs-keyword">of</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">client</span> PID.<span class="hljs-number">3</span> = brick <span class="hljs-keyword">having</span> the <span class="hljs-keyword">least</span> outstanding <span class="hljs-keyword">read</span> requests.</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs 调试环境构建</title>
    <link href="/2020/04/14/glusterfs-%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/"/>
    <url>/2020/04/14/glusterfs-%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="Debug-Glusterfs"><a href="#Debug-Glusterfs" class="headerlink" title="Debug Glusterfs"></a>Debug Glusterfs</h3><h4 id="Download-source"><a href="#Download-source" class="headerlink" title="Download source"></a>Download source</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/gluster/glusterfs.git</span></code></pre><h4 id="Install-Deps"><a href="#Install-Deps" class="headerlink" title="Install Deps"></a>Install Deps</h4><ul><li>centos7 <pre><code class="hljs vim"># yum install autoconf automake bison cmockery2-devel dos2unix flex fuse-devel glib2-devel libacl-devel libaio-devel libattr-devel libcurl-devel libibverbs-devel librdmacm-devel libtirpc-devel libtool libxml2-devel lvm2-devel <span class="hljs-keyword">make</span> openssl-devel pkgconfig pyliblzma <span class="hljs-keyword">python</span>-devel <span class="hljs-keyword">python</span>-eventlet <span class="hljs-keyword">python</span>-netifaces <span class="hljs-keyword">python</span>-paste-deploy <span class="hljs-keyword">python</span>-simplejson <span class="hljs-keyword">python</span>-sphinx <span class="hljs-keyword">python</span>-webob pyxattr readline-devel rpm-build sqlite-devel systemtap-sdt-devel tar userspace-rcu-devel -<span class="hljs-keyword">y</span></code></pre></li><li>centos8 <pre><code class="hljs vim">yum -<span class="hljs-keyword">y</span> install gcc gcc-<span class="hljs-keyword">c</span>++ <span class="hljs-keyword">make</span> expat-devel  autoconf automake libtool flex bison  openssl-devel  libuuid-devel  libacl-devel  libxml2-devel libtirpc-devel  rdma-core-devel readline-devel libaio-devel yum -<span class="hljs-keyword">y</span> install autoconf automake bison dos2unix flex fuse-devel glib2-devel libacl-devel libaio-devel libattr-devel libcurl-devel libibverbs librdmacm libtirpc-devel libtool libxml2-devel lvm2-libs <span class="hljs-keyword">make</span> openssl-devel pkgconf python36-devel readline-devel rpm-build sqlite-devel systemtap-sdt-devel tarwget http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/urcu/userspace-rcu/archive/v0.<span class="hljs-number">7.16</span>.tar.gz -O userspace-rcu-<span class="hljs-number">0.7</span>.<span class="hljs-number">16</span>.tar.gztar -xf userspace-rcu-<span class="hljs-number">0.7</span>.<span class="hljs-number">16</span>.tar.gz<span class="hljs-keyword">cd</span> ~/userspace-rcu-<span class="hljs-number">0.7</span>.<span class="hljs-number">16</span>/./bootstrap<span class="hljs-keyword">make</span><span class="hljs-keyword">make</span> install<span class="hljs-keyword">find</span> /usr/ -name \*liburcu-<span class="hljs-keyword">bp</span>.<span class="hljs-keyword">so</span>\*ldconfig -v | <span class="hljs-keyword">grep</span> liburcu-<span class="hljs-keyword">bp</span>.<span class="hljs-keyword">so</span><span class="hljs-keyword">echo</span> <span class="hljs-string">'/usr/local/lib'</span> &gt; /etc/ld.<span class="hljs-keyword">so</span>.<span class="hljs-keyword">conf</span>.d/userspace-rcu.<span class="hljs-keyword">conf</span></code></pre></li><li>debian</li></ul><pre><code class="hljs q"># sudo apt-<span class="hljs-built_in">get</span> install make automake autoconf libtool flex bison pkg-config libssl-<span class="hljs-built_in">dev</span> libxml2-<span class="hljs-built_in">dev</span> python-<span class="hljs-built_in">dev</span> libaio-<span class="hljs-built_in">dev</span> libibverbs-<span class="hljs-built_in">dev</span> librdmacm-<span class="hljs-built_in">dev</span> libreadline-<span class="hljs-built_in">dev</span> liblvm2-<span class="hljs-built_in">dev</span> libglib2<span class="hljs-number">.0</span>-<span class="hljs-built_in">dev</span> liburcu-<span class="hljs-built_in">dev</span> libcmocka-<span class="hljs-built_in">dev</span> libsqlite3-<span class="hljs-built_in">dev</span> libacl1-<span class="hljs-built_in">dev</span> uuid uuid-<span class="hljs-built_in">dev</span></code></pre><h4 id="Build-With-Debug"><a href="#Build-With-Debug" class="headerlink" title="Build With Debug"></a>Build With Debug</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> glusterfs-6.5</span><span class="hljs-meta">#</span><span class="bash"> ./autogen.sh</span><span class="hljs-meta">#</span><span class="bash">CFLAGS=<span class="hljs-string">"-g3 -gdwarf-2  -O0"</span>  ./configure  --<span class="hljs-built_in">enable</span>-debug --<span class="hljs-built_in">enable</span>-gnfs  --without-libtirpc </span><span class="hljs-meta">#</span><span class="bash"> make -j4</span><span class="hljs-meta">#</span><span class="bash"> make install</span></code></pre><h4 id="Create-Mount-Point"><a href="#Create-Mount-Point" class="headerlink" title="Create Mount Point"></a>Create Mount Point</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vgcreate --physicalextentsize 128K gfs_test_vg /dev/sdb</span><span class="hljs-meta">#</span><span class="bash"> lvcreate -L 2G --name gfs_test_lv gfs_test_vg</span><span class="hljs-meta">#</span><span class="bash"> lvdisplay</span>  --- Logical volume ---  LV Path                /dev/gfs_test_vg/gfs_test_lv  LV Name                gfs_test_lv  VG Name                gfs_test_vg  LV UUID                1uw4WG-cdFi-vtHL-vyCZ-qluF-xknL-1Z8mY3  LV Write Access        read/write  LV Creation host, time localhost.localdomain, 2019-10-14 16:40:58 +0800  LV Status              available  LV Size                2.00 GiB  Current LE             16384  Segments               1  Allocation             inherit  Read ahead sectors     auto  - currently set to     8192<span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">"/dev/gfs_test_vg/gfs_test_lv   /data/glusterfs/test_vol/brick1   xfs     defaults        0 0"</span> | tee --append /etc/fstab</span></code></pre><h4 id="Begin-Gdb"><a href="#Begin-Gdb" class="headerlink" title="Begin Gdb"></a>Begin Gdb</h4><h6 id="Debug-Volume-Info"><a href="#Debug-Volume-Info" class="headerlink" title="Debug Volume Info"></a>Debug Volume Info</h6><ul><li>Set BreakPoint<pre><code class="hljs routeros"><span class="hljs-comment">#gdb gluster </span>(gdb)<span class="hljs-builtin-name">set</span> args volume info(gdb)br main</code></pre></li><li>Core Execute Path<pre><code class="hljs cs">main   gluster/cli/src/cli.c:<span class="hljs-number">797</span>cli_cmds_register gluster/cli/src/cli-cmd.c:<span class="hljs-number">208</span>cli_cmd_volume_register  gluster/cli/src/cli_cmd_volume_register:<span class="hljs-number">3585</span>cli_cmd_register  gluster/cli/src/registry.c:<span class="hljs-number">356</span>cli_cmd_ingest    gluster/cli/src/registry.c:<span class="hljs-number">313</span>cli_input_init gluster/cli/src/cli.c:<span class="hljs-number">862</span>cli_batch    gluster/cli/input.c:<span class="hljs-number">22</span>cli_cmd_process gluster/cli/src/cli-cmd.c:<span class="hljs-number">87</span>cli_cmd_volume_info_cbk(state-&gt;tree.root.cbkfn) gluster/cli/src/cli-cmd-volume.c:<span class="hljs-number">3355</span>cli_rpc_prog-&gt;proctable[GLUSTER_CLI_GET_VOLUME] &#123;    <span class="hljs-comment">//gluster/cli/src/cli-rpc-ops.c:12152</span><span class="hljs-keyword">struct</span> rpc_clnt_procedure gluster_cli_actors[GLUSTER_CLI_MAXVALUE] = &#123;    [<span class="hljs-meta">GLUSTER_CLI_NULL</span>] = &#123;<span class="hljs-string">"NULL"</span>, NULL&#125;,    [<span class="hljs-meta">GLUSTER_CLI_PROBE</span>] = &#123;<span class="hljs-string">"PROBE_QUERY"</span>, gf_cli_probe&#125;,    [<span class="hljs-meta">GLUSTER_CLI_DEPROBE</span>] = &#123;<span class="hljs-string">"DEPROBE_QUERY"</span>, gf_cli_deprobe&#125;,    [<span class="hljs-meta">GLUSTER_CLI_LIST_FRIENDS</span>] = &#123;<span class="hljs-string">"LIST_FRIENDS"</span>, gf_cli_list_friends&#125;,    [<span class="hljs-meta">GLUSTER_CLI_UUID_RESET</span>] = &#123;<span class="hljs-string">"UUID_RESET"</span>, gf_cli3_1_uuid_reset&#125;,    [<span class="hljs-meta">GLUSTER_CLI_UUID_GET</span>] = &#123;<span class="hljs-string">"UUID_GET"</span>, gf_cli3_1_uuid_get&#125;,    [<span class="hljs-meta">GLUSTER_CLI_CREATE_VOLUME</span>] = &#123;<span class="hljs-string">"CREATE_VOLUME"</span>, gf_cli_create_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_DELETE_VOLUME</span>] = &#123;<span class="hljs-string">"DELETE_VOLUME"</span>, gf_cli_delete_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_START_VOLUME</span>] = &#123;<span class="hljs-string">"START_VOLUME"</span>, gf_cli_start_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_STOP_VOLUME</span>] = &#123;<span class="hljs-string">"STOP_VOLUME"</span>, gf_cli_stop_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_RENAME_VOLUME</span>] = &#123;<span class="hljs-string">"RENAME_VOLUME"</span>, gf_cli_rename_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_DEFRAG_VOLUME</span>] = &#123;<span class="hljs-string">"DEFRAG_VOLUME"</span>, gf_cli_defrag_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GET_VOLUME</span>] = &#123;<span class="hljs-string">"GET_VOLUME"</span>, gf_cli_get_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GET_NEXT_VOLUME</span>] = &#123;<span class="hljs-string">"GET_NEXT_VOLUME"</span>, gf_cli_get_next_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_SET_VOLUME</span>] = &#123;<span class="hljs-string">"SET_VOLUME"</span>, gf_cli_set_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_ADD_BRICK</span>] = &#123;<span class="hljs-string">"ADD_BRICK"</span>, gf_cli_add_brick&#125;,    [<span class="hljs-meta">GLUSTER_CLI_REMOVE_BRICK</span>] = &#123;<span class="hljs-string">"REMOVE_BRICK"</span>, gf_cli_remove_brick&#125;,    [<span class="hljs-meta">GLUSTER_CLI_REPLACE_BRICK</span>] = &#123;<span class="hljs-string">"REPLACE_BRICK"</span>, gf_cli_replace_brick&#125;,    [<span class="hljs-meta">GLUSTER_CLI_LOG_ROTATE</span>] = &#123;<span class="hljs-string">"LOG ROTATE"</span>, gf_cli_log_rotate&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GETSPEC</span>] = &#123;<span class="hljs-string">"GETSPEC"</span>, gf_cli_getspec&#125;,    [<span class="hljs-meta">GLUSTER_CLI_PMAP_PORTBYBRICK</span>] = &#123;<span class="hljs-string">"PMAP PORTBYBRICK"</span>, gf_cli_pmap_b2p&#125;,    [<span class="hljs-meta">GLUSTER_CLI_SYNC_VOLUME</span>] = &#123;<span class="hljs-string">"SYNC_VOLUME"</span>, gf_cli_sync_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_RESET_VOLUME</span>] = &#123;<span class="hljs-string">"RESET_VOLUME"</span>, gf_cli_reset_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_FSM_LOG</span>] = &#123;<span class="hljs-string">"FSM_LOG"</span>, gf_cli_fsm_log&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GSYNC_SET</span>] = &#123;<span class="hljs-string">"GSYNC_SET"</span>, gf_cli_gsync_set&#125;,    [<span class="hljs-meta">GLUSTER_CLI_PROFILE_VOLUME</span>] = &#123;<span class="hljs-string">"PROFILE_VOLUME"</span>, gf_cli_profile_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_QUOTA</span>] = &#123;<span class="hljs-string">"QUOTA"</span>, gf_cli_quota&#125;,    [<span class="hljs-meta">GLUSTER_CLI_TOP_VOLUME</span>] = &#123;<span class="hljs-string">"TOP_VOLUME"</span>, gf_cli_top_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GETWD</span>] = &#123;<span class="hljs-string">"GETWD"</span>, gf_cli_getwd&#125;,    [<span class="hljs-meta">GLUSTER_CLI_STATUS_VOLUME</span>] = &#123;<span class="hljs-string">"STATUS_VOLUME"</span>, gf_cli_status_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_STATUS_ALL</span>] = &#123;<span class="hljs-string">"STATUS_ALL"</span>, gf_cli_status_volume_all&#125;,    [<span class="hljs-meta">GLUSTER_CLI_MOUNT</span>] = &#123;<span class="hljs-string">"MOUNT"</span>, gf_cli_mount&#125;,    [<span class="hljs-meta">GLUSTER_CLI_UMOUNT</span>] = &#123;<span class="hljs-string">"UMOUNT"</span>, gf_cli_umount&#125;,    [<span class="hljs-meta">GLUSTER_CLI_HEAL_VOLUME</span>] = &#123;<span class="hljs-string">"HEAL_VOLUME"</span>, gf_cli_heal_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_STATEDUMP_VOLUME</span>] = &#123;<span class="hljs-string">"STATEDUMP_VOLUME"</span>,                                      gf_cli_statedump_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_LIST_VOLUME</span>] = &#123;<span class="hljs-string">"LIST_VOLUME"</span>, gf_cli_list_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_CLRLOCKS_VOLUME</span>] = &#123;<span class="hljs-string">"CLEARLOCKS_VOLUME"</span>,                                     gf_cli_clearlocks_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_COPY_FILE</span>] = &#123;<span class="hljs-string">"COPY_FILE"</span>, gf_cli_copy_file&#125;,    [<span class="hljs-meta">GLUSTER_CLI_SYS_EXEC</span>] = &#123;<span class="hljs-string">"SYS_EXEC"</span>, gf_cli_sys_exec&#125;,    [<span class="hljs-meta">GLUSTER_CLI_SNAP</span>] = &#123;<span class="hljs-string">"SNAP"</span>, gf_cli_snapshot&#125;,    [<span class="hljs-meta">GLUSTER_CLI_BARRIER_VOLUME</span>] = &#123;<span class="hljs-string">"BARRIER VOLUME"</span>, gf_cli_barrier_volume&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GET_VOL_OPT</span>] = &#123;<span class="hljs-string">"GET_VOL_OPT"</span>, gf_cli_get_vol_opt&#125;,    [<span class="hljs-meta">GLUSTER_CLI_BITROT</span>] = &#123;<span class="hljs-string">"BITROT"</span>, gf_cli_bitrot&#125;,    [<span class="hljs-meta">GLUSTER_CLI_ATTACH_TIER</span>] = &#123;<span class="hljs-string">"ATTACH_TIER"</span>, gf_cli_attach_tier&#125;,    [<span class="hljs-meta">GLUSTER_CLI_TIER</span>] = &#123;<span class="hljs-string">"TIER"</span>, gf_cli_tier&#125;,    [<span class="hljs-meta">GLUSTER_CLI_GET_STATE</span>] = &#123;<span class="hljs-string">"GET_STATE"</span>, gf_cli_get_state&#125;,    [<span class="hljs-meta">GLUSTER_CLI_RESET_BRICK</span>] = &#123;<span class="hljs-string">"RESET_BRICK"</span>, gf_cli_reset_brick&#125;,    [<span class="hljs-meta">GLUSTER_CLI_REMOVE_TIER_BRICK</span>] = &#123;<span class="hljs-string">"DETACH_TIER"</span>, gf_cli_remove_tier_brick&#125;,    [<span class="hljs-meta">GLUSTER_CLI_ADD_TIER_BRICK</span>] = &#123;<span class="hljs-string">"ADD_TIER_BRICK"</span>, gf_cli_add_tier_brick&#125;&#125;;<span class="hljs-keyword">struct</span> rpc_clnt_program cli_prog = &#123;    .progname = <span class="hljs-string">"Gluster CLI"</span>,    .prognum = GLUSTER_CLI_PROGRAM,    .progver = GLUSTER_CLI_VERSION,    .numproc = GLUSTER_CLI_MAXVALUE,    .proctable = gluster_cli_actors,&#125;;&#125;gf_cli_get_volume   gluster/cli/src/cli-rpc-ops.c:<span class="hljs-number">4579</span>gf_cli_get_volume_cbk  gluster/cli/src/cli-rpc-ops.c:<span class="hljs-number">819</span></code></pre></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>glusterfs 参数说明</title>
    <link href="/2020/04/14/glusterfs-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/"/>
    <url>/2020/04/14/glusterfs-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="选项说明"><a href="#选项说明" class="headerlink" title="选项说明"></a>选项说明</h2><pre><code class="hljs dockerfile">$ gluster <span class="hljs-keyword">volume</span><span class="bash"> <span class="hljs-built_in">set</span> <span class="hljs-built_in">help</span></span></code></pre><table><thead><tr><th align="left">选项</th><th align="center">默认值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">changelog.changelog-barrier-timeout</td><td align="center">120</td><td align="left">After ‘timeout’ seconds since the time ‘barrier’ option was set to “on”, unlink/rmdir/rename operations are no longer blocked and previously blocked fops are allowed to go through</td></tr><tr><td align="left">cluster.enable-shared-storage</td><td align="center">disable</td><td align="left">Create and mount the shared storage volume(gluster_shared_storage) at /var/run/gluster/shared_storage on enabling this option. Unmount and delete the shared storage volume on disabling this option.</td></tr><tr><td align="left">cluster.write-freq-threshold</td><td align="center">0</td><td align="left">Defines the number of writes, in a promotion/demotion cycle, that would mark a file HOT for promotion. Any file that has write hits less than this value will be considered as COLD and will be demoted.</td></tr><tr><td align="left">cluster.read-freq-threshold</td><td align="center">0</td><td align="left">Defines the number of reads, in a promotion/demotion cycle, that would mark a file HOT for promotion. Any file that has read hits less than this value will be considered as COLD and will be demoted.</td></tr><tr><td align="left">cluster.tier-pause</td><td align="center">off</td><td align="left">(null)</td></tr><tr><td align="left">cluster.tier-promote-frequency</td><td align="center">120</td><td align="left">Frequency to promote files to fast tier</td></tr><tr><td align="left">cluster.tier-demote-frequency</td><td align="center">120</td><td align="left">Frequency to demote files to slow tier</td></tr><tr><td align="left">cluster.watermark-hi</td><td align="center">90</td><td align="left">Upper % watermark for promotion. If hot tier fills above this percentage, no promotion will happen and demotion will happen with high probability.</td></tr><tr><td align="left">cluster.watermark-low</td><td align="center">75</td><td align="left">Lower % watermark. If hot tier is less full than this, promotion will happen and demotion will not happen. If greater than this, promotion/demotion will happen at a probability relative to how full the hot tier is.</td></tr><tr><td align="left">cluster.tier-mode</td><td align="center">cache</td><td align="left">Either ‘test’ or ‘cache’. Test mode periodically demotes or promotes files automatically based on access. Cache mode does so based on whether the cache is full or not, as specified with watermarks.</td></tr><tr><td align="left">cluster.tier-max-mb</td><td align="center">10000</td><td align="left">The maximum number of MB that may be migrated in any direction in a given cycle by a single node.</td></tr><tr><td align="left">cluster.tier-max-files</td><td align="center">50000</td><td align="left">The maximum number of files that may be migrated in any direction in a given cycle by a single node.</td></tr><tr><td align="left">cluster.lookup-unhashed</td><td align="center">on</td><td align="left">This option if set to ON, does a lookup through all the sub-volumes, in case a lookup didn’t return any result from the hash subvolume. If set to OFF, it does not do a lookup on the remaining subvolumes.</td></tr><tr><td align="left">cluster.lookup-optimize</td><td align="center">off</td><td align="left">This option if set to ON enables the optimization of -ve lookups, by not doing a lookup on non-hashed subvolumes for files, in case the hashed subvolume does not return any result. This option disregards the lookup-unhashed setting, when enabled.</td></tr><tr><td align="left">cluster.min-free-disk</td><td align="center">10%</td><td align="left">Percentage/Size of disk space, after which the process starts balancing out the cluster, and logs will appear in log files</td></tr><tr><td align="left">cluster.min-free-inodes</td><td align="center">5%</td><td align="left">after system has only N% of inodes, warnings starts to appear in log files</td></tr><tr><td align="left">cluster.rebalance-stats</td><td align="center">off</td><td align="left">This option if set to ON displays and logs the time taken for migration of each file, during the rebalance process. If set to OFF, the rebalance logs will only display the time spent in each directory.</td></tr><tr><td align="left">cluster.subvols-per-directory</td><td align="center">null</td><td align="left">Specifies the directory layout spread. Takes number of subvolumes as default value.</td></tr><tr><td align="left">cluster.readdir-optimize</td><td align="center">off</td><td align="left">This option if set to ON enables the optimization that allows DHT to requests non-first subvolumes to filter out directory entries.</td></tr><tr><td align="left">cluster.rebal-throttle</td><td align="center">normal</td><td align="left">Sets the maximum number of parallel file migrations allowed on a node during the rebalance operation. The default value is normal and allows a max of [($(processing units) - 4) / 2), 2] files to be migrated at a time. Lazy will allow only one file to be migrated at a time and aggressive will allow max of [($(processing units) - 4) / 2), 4]</td></tr><tr><td align="left">cluster.weighted-rebalance</td><td align="center">on</td><td align="left">When enabled, files will be allocated to bricks with a probability proportional to their size. Otherwise, all bricks will have the same probability (legacy behavior).</td></tr><tr><td align="left">cluster.entry-change-log</td><td align="center">on</td><td align="left">Entry fops like create/unlink will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.read-subvolume</td><td align="center">null</td><td align="left">inode-read fops happen only on one of the bricks in replicate. Afr will prefer the one specified using this option if it is not stale. Option value must be one of the xlator names of the children. Ex: -client-0 till -client-&lt;number-of-bricks - 1&gt;</td></tr><tr><td align="left">cluster.read-subvolume-index</td><td align="center">-1</td><td align="left">inode-read fops happen only on one of the bricks in replicate. AFR will prefer the one specified using this option if it is not stale. allowed options include -1 till replica-count - 1</td></tr><tr><td align="left">cluster.read-hash-mode</td><td align="center">1</td><td align="left">inode-read fops happen only on one of the bricks in replicate. AFR will prefer the one computed using the method specified using this option0 = first up server, 1 = hash by GFID of file (all clients use same subvolume), 2 = hash by GFID of file and client PID</td></tr><tr><td align="left">cluster.background-self-heal-count</td><td align="center">16</td><td align="left">This specifies the number of self-heals that can be performed in background without blocking the fop</td></tr><tr><td align="left">cluster.metadata-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable metadata i.e. Permissions, ownerships, xattrs self-heal on the file/directory.</td></tr><tr><td align="left">cluster.data-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable data self-heal on the file. “open” means data self-heal action will only be triggered by file open operations.</td></tr><tr><td align="left">cluster.entry-self-heal</td><td align="center">on</td><td align="left">Using this option we can enable/disable entry self-heal on the directory.</td></tr><tr><td align="left">cluster.self-heal-daemon</td><td align="center">on</td><td align="left">This option applies to only self-heal-daemon. Index directory crawl and automatic healing of files will not be performed if this option is turned off.</td></tr><tr><td align="left">cluster.heal-timeout</td><td align="center">600</td><td align="left">time interval for checking the need to self-heal in self-heal-daemon</td></tr><tr><td align="left">cluster.self-heal-window-size</td><td align="center">1</td><td align="left">Maximum number blocks per file for which self-heal process would be applied simultaneously.</td></tr><tr><td align="left">cluster.data-change-log</td><td align="center">on</td><td align="left">Data fops like write/truncate will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.metadata-change-log</td><td align="center">on</td><td align="left">Metadata fops like setattr/setxattr will not perform pre/post fop changelog operations in afr transaction if this option is disabled</td></tr><tr><td align="left">cluster.data-self-heal-algorithm</td><td align="center">null</td><td align="left">Select between “full”, “diff”. The “full” algorithm copies the entire file from source to sink. The “diff” algorithm copies to sink only those blocks whose checksums don’t match with those of source. If no option is configured the option is chosen dynamically as follows: If the file does not exist on one of the sinks or empty file exists or if the source file size is about the same as page size the entire file will be read and written i.e “full” algo, otherwise “diff” algo is chosen.</td></tr><tr><td align="left">cluster.eager-lock</td><td align="center">on</td><td align="left">Lock phase of a transaction has two sub-phases. First is an attempt to acquire locks in parallel by broadcasting non-blocking lock requests. If lock acquisition fails on any server, then the held locks are unlocked and revert to a blocking locked mode sequentially on one server after another. If this option is enabled the initial broadcasting lock request attempt to acquire lock on the entire file. If this fails, we revert back to the sequential “regional” blocking lock as before. In the case where such an “eager” lock is granted in the non-blocking phase, it gives rise to an opportunity for optimization. i.e, if the next write transaction on the same FD arrives before the unlock phase of the first transaction, it “takes over” the full file lock. Similarly if yet another data transaction arrives before the unlock phase of the “optimized” transaction, that in turn “takes over” the lock as well. The actual unlock now happens at the end of the last “optimized” transaction.</td></tr><tr><td align="left">cluster.quorum-type</td><td align="center">none</td><td align="left">If value is “fixed” only allow writes if quorum-count bricks are present. If value is “auto” only allow writes if more than half of bricks, or exactly half including the first, are present.</td></tr><tr><td align="left">cluster.quorum-count</td><td align="center">null</td><td align="left">If quorum-type is “fixed” only allow writes if this many bricks or present. Other quorum types will OVERWRITE this value.</td></tr><tr><td align="left">cluster.choose-local</td><td align="center">true</td><td align="left">Choose a local subvolume (i.e. Brick) to read from if read-subvolume is not explicitly set.</td></tr><tr><td align="left">cluster.self-heal-readdir-size</td><td align="center">1KB</td><td align="left">readdirp size for performing entry self-heal</td></tr><tr><td align="left">cluster.ensure-durability</td><td align="center">on</td><td align="left">Afr performs fsyncs for transactions if this option is on to make sure the changelogs/data is written to the disk</td></tr><tr><td align="left">cluster.consistent-metadata</td><td align="center">no</td><td align="left">If this option is enabled, readdirp will force lookups on those entries read whose read child is not the same as that of the parent. This will guarantee that all read operations on a file serve attributes from the same subvol as long as it holds a good copy of the file/dir.</td></tr><tr><td align="left">cluster.stripe-block-size</td><td align="center">128KB</td><td align="left">Size of the stripe unit that would be read from or written to the striped servers.</td></tr><tr><td align="left">cluster.stripe-coalesce</td><td align="center">true</td><td align="left">Enable/Disable coalesce mode to flatten striped files as stored on the server (i.e., eliminate holes caused by the traditional format).</td></tr><tr><td align="left">cluster.server-quorum-type</td><td align="center">(null)</td><td align="left">This feature is on the server-side i.e. in glusterd. Whenever the glusterd on a machine observes that the quorum is not met, it brings down the bricks to prevent data split-brains. When the network connections are brought back up and the quorum is restored the bricks in the volume are brought back up.</td></tr><tr><td align="left">cluster.server-quorum-ratio</td><td align="center">(null)</td><td align="left">Sets the quorum percentage for the trusted storage pool.</td></tr><tr><td align="left">cluster.quorum-reads</td><td align="center">no</td><td align="left">If quorum-reads is “true” only allow reads if quorum is met when quorum is enabled.</td></tr><tr><td align="left">diagnostics.latency-measurement</td><td align="center">off</td><td align="left">If on stats related to the latency of each operation would be tracked inside GlusterFS data-structures.</td></tr><tr><td align="left">diagnostics.dump-fd-stats</td><td align="center">off</td><td align="left">If on stats related to file-operations would be tracked inside GlusterFS data-structures.</td></tr><tr><td align="left">diagnostics.brick-log-level</td><td align="center">INFO</td><td align="left">Changes the log-level of the bricks</td></tr><tr><td align="left">diagnostics.client-log-level</td><td align="center">INFO</td><td align="left">Changes the log-level of the clients</td></tr><tr><td align="left">diagnostics.brick-sys-log-level</td><td align="center">CRITICAL</td><td align="left">Gluster’s syslog log-level</td></tr><tr><td align="left">diagnostics.client-sys-log-level</td><td align="center">CRITICAL</td><td align="left">Gluster’s syslog log-level</td></tr><tr><td align="left">diagnostics.brick-logger</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-logger</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-format</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-format</td><td align="center">null</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-buf-size</td><td align="center">5</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-buf-size</td><td align="center">5</td><td align="left">null</td></tr><tr><td align="left">diagnostics.brick-log-flush-timeout</td><td align="center">20</td><td align="left">null</td></tr><tr><td align="left">diagnostics.client-log-flush-timeout</td><td align="center">20</td><td align="left">null</td></tr><tr><td align="left">disperse.background-heals</td><td align="center">8</td><td align="left">This option can be used to control number of parallel heals</td></tr><tr><td align="left">disperse.heal-wait-qlength</td><td align="center">128</td><td align="left">This option can be used to control number of heals that can wait</td></tr><tr><td align="left">disperse.read-policy</td><td align="center">round-robin</td><td align="left">inode-read fops happen only on ‘k’ number of bricks in n=k+m disperse subvolume. ‘round-robin’ selects the read subvolume using round-robin algo. ‘gfid-hash’ selects read subvolume based on hash of the gfid of that file/directory.</td></tr><tr><td align="left">dht.force-readdirp</td><td align="center">on</td><td align="left">This option if set to ON, forces the use of readdirp, and hence also displays the stats of the files.</td></tr><tr><td align="left">performance.cache-max-file-size</td><td align="center">0</td><td align="left">Maximum file size which would be cached by the io-cache translator.</td></tr><tr><td align="left">performance.cache-min-file-size</td><td align="center">0</td><td align="left">Minimum file size which would be cached by the io-cache translator.</td></tr><tr><td align="left">performance.cache-refresh-timeout</td><td align="center">1</td><td align="left">The cached data for a file will be retained till ‘cache-refresh-timeout’ seconds, after which data re-validation is performed.</td></tr><tr><td align="left">performance.cache-priority</td><td align="center"></td><td align="left">Assigns priority to filenames with specific patterns so that when a page needs to be ejected out of the cache, the page of a file whose priority is the lowest will be ejected earlier</td></tr><tr><td align="left">performance.cache-size</td><td align="center">32MB</td><td align="left">Size of the read cache.</td></tr><tr><td align="left">performance.io-thread-count</td><td align="center">16</td><td align="left">Number of threads in IO threads translator which perform concurrent IO operations</td></tr><tr><td align="left">performance.high-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform high priority IO operations at a given time</td></tr><tr><td align="left">performance.normal-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform normal priority IO operations at a given time</td></tr><tr><td align="left">performance.low-prio-threads</td><td align="center">16</td><td align="left">Max number of threads in IO threads translator which perform low priority IO operations at a given time</td></tr><tr><td align="left">performance.least-prio-threads</td><td align="center">1</td><td align="left">Max number of threads in IO threads translator which perform least priority IO operations at a given time</td></tr><tr><td align="left">performance.enable-least-priority</td><td align="center">on</td><td align="left">Enable/Disable least priority</td></tr><tr><td align="left">performance.least-rate-limit</td><td align="center">0</td><td align="left">Max number of least priority operations to handle per-second</td></tr><tr><td align="left">performance.flush-behind</td><td align="center">on</td><td align="left">If this option is set ON, instructs write-behind translator to perform flush in background, by returning success (or any errors, if any of previous writes were failed) to application even before flush FOP is sent to backend filesystem.</td></tr><tr><td align="left">performance.nfs.flush-behind</td><td align="center">on</td><td align="left">If this option is set ON, instructs write-behind translator to perform flush in background, by returning success (or any errors, if any of previous writes were failed) to application even before flush FOP is sent to backend filesystem.</td></tr><tr><td align="left">performance.write-behind-window-size</td><td align="center">1MB</td><td align="left">Size of the write-behind buffer for a single file (inode).</td></tr><tr><td align="left">performance.nfs.write-behind-window-size</td><td align="center">1MB</td><td align="left">Size of the write-behind buffer for a single file (inode).</td></tr><tr><td align="left">performance.strict-o-direct</td><td align="center">off</td><td align="left">This option when set to off, ignores the O_DIRECT flag.</td></tr><tr><td align="left">performance.nfs.strict-o-direct</td><td align="center">off</td><td align="left">This option when set to off, ignores the O_DIRECT flag.</td></tr><tr><td align="left">performance.strict-write-ordering</td><td align="center">off</td><td align="left">Do not let later writes overtake earlier writes even if they do not overlap</td></tr><tr><td align="left">performance.nfs.strict-write-ordering</td><td align="center">off</td><td align="left">Do not let later writes overtake earlier writes even if they do not overlap</td></tr><tr><td align="left">performance.lazy-open</td><td align="center">yes</td><td align="left">Perform open in the backend only when a necessary FOP arrives (e.g writev on the FD, unlink of the file). When option is disabled, perform backend open right after unwinding open().</td></tr><tr><td align="left">performance.read-after-open</td><td align="center">no</td><td align="left">read is sent only after actual open happens and real fd is obtained, instead of doing on anonymous fd (similar to write)</td></tr><tr><td align="left">performance.read-ahead-page-count</td><td align="center">4</td><td align="left">Number of pages that will be pre-fetched</td></tr><tr><td align="left">performance.md-cache-timeout</td><td align="center">1</td><td align="left">Time period after which cache has to be refreshed</td></tr><tr><td align="left">performance.write-behind</td><td align="center">on</td><td align="left">enable/disable write-behind translator in the volume.</td></tr><tr><td align="left">performance.read-ahead</td><td align="center">on</td><td align="left">enable/disable read-ahead translator in the volume.</td></tr><tr><td align="left">performance.readdir-ahead</td><td align="center">off</td><td align="left">enable/disable readdir-ahead translator in the volume.</td></tr><tr><td align="left">performance.io-cache</td><td align="center">on</td><td align="left">enable/disable io-cache translator in the volume.</td></tr><tr><td align="left">performance.quick-read</td><td align="center">on</td><td align="left">enable/disable quick-read translator in the volume.</td></tr><tr><td align="left">performance.open-behind</td><td align="center">on</td><td align="left">enable/disable open-behind translator in the volume.</td></tr><tr><td align="left">performance.stat-prefetch</td><td align="center">on</td><td align="left">enable/disable meta-data caching translator in the volume.</td></tr><tr><td align="left">performance.client-io-threads</td><td align="center">off</td><td align="left">enable/disable io-threads translator in the client graph of volume.</td></tr><tr><td align="left">performance.nfs.write-behind</td><td align="center">on</td><td align="left">enable/disable write-behind translator in the volume</td></tr><tr><td align="left">performance.force-readdirp</td><td align="center">true</td><td align="left">Convert all readdir requests to readdirplus to collect stat info on each entry.</td></tr><tr><td align="left">features.encryption</td><td align="center">off</td><td align="left">enable/disable client-side encryption for the volume.</td></tr><tr><td align="left">encryption.master-key</td><td align="center">null</td><td align="left">Pathname of regular file which contains master volume key</td></tr><tr><td align="left">encryption.data-key-size</td><td align="center">256</td><td align="left">Data key size (bits)</td></tr><tr><td align="left">encryption.block-size</td><td align="center">4096</td><td align="left">Atom size (bits)</td></tr><tr><td align="left">nfs.enable-ino32</td><td align="center">no</td><td align="left">For nfs clients or apps that do not support 64-bit inode numbers, use this option to make NFS return 32-bit inode numbers instead. Disabled by default, so NFS returns 64-bit inode numbers.</td></tr><tr><td align="left">nfs.mem-factor</td><td align="center">15</td><td align="left">Use this option to make NFS be faster on systems by using more memory. This option specifies a multiple that determines the total amount of memory used. Default value is 15. Increase to use more memory in order to improve performance for certain use cases.Please consult gluster-users list before using this option.</td></tr><tr><td align="left">nfs.export-dirs</td><td align="center">on</td><td align="left">By default, all subvolumes of nfs are exported as individual exports. There are cases where a subdirectory or subdirectories in the volume need to be exported separately. Enabling this option allows any directory on a volumes to be exported separately.Directory exports are enabled by default.</td></tr><tr><td align="left">nfs.export-volumes</td><td align="center">on</td><td align="left">Enable or disable exporting whole volumes, instead if used in conjunction with nfs3.export-dir, can allow setting up only subdirectories as exports. On by default.</td></tr><tr><td align="left">nfs.addr-namelookup</td><td align="center">off</td><td align="left">Users have the option of turning on name lookup for incoming client connections using this option. Use this option to turn on name lookups during address-based authentication. Turning this on will enable you to use hostnames in nfs.rpc-auth-* filters. In some setups, the name server can take too long to reply to DNS queries resulting in timeouts of mount requests. By default, name lookup is off</td></tr><tr><td align="left">nfs.dynamic-volumes</td><td align="center">off</td><td align="left">Internal option set to tell gnfs to use a different scheme for encoding file handles when DVM is being used.</td></tr><tr><td align="left">nfs.register-with-portmap</td><td align="center">on</td><td align="left">For systems that need to run multiple nfs servers, only one registration is possible with portmap service. Use this option to turn off portmap registration for Gluster NFS. On by default</td></tr><tr><td align="left">nfs.outstanding-rpc-limit</td><td align="center">16</td><td align="left">Parameter to throttle the number of incoming RPC requests from a client. 0 means no limit (can potentially run out of memory)</td></tr><tr><td align="left">nfs.port</td><td align="center">2049</td><td align="left">Use this option on systems that need Gluster NFS to be associated with a non-default port number.</td></tr><tr><td align="left">nfs.rpc-auth-unix</td><td align="center">on</td><td align="left">Disable or enable the AUTH_UNIX authentication type for a particular exported volume overriding defaults and general setting for AUTH_UNIX scheme. Must always be enabled for better interoperability. However, can be disabled if needed. Enabled by default.</td></tr><tr><td align="left">nfs.rpc-auth-null</td><td align="center">on</td><td align="left">Disable or enable the AUTH_NULL authentication type for a particular exported volume overriding defaults and general setting for AUTH_NULL. Must always be enabled. This option is here only to avoid unrecognized option warnings.</td></tr><tr><td align="left">nfs.rpc-auth-allow</td><td align="center">all</td><td align="left">Allow a comma separated list of addresses and/or hostnames to connect to the server. By default, all connections are allowed. This allows users to define a rule for a specific exported volume.</td></tr><tr><td align="left">nfs.rpc-auth-reject</td><td align="center">none</td><td align="left">Reject a comma separated list of addresses and/or hostnames from connecting to the server. By default, all connections are allowed. This allows users to define a rule for a specific exported volume.</td></tr><tr><td align="left">nfs.ports-insecure</td><td align="center">off</td><td align="left">Allow client connections from unprivileged ports. By default only privileged ports are allowed. Use this option to enable or disable insecure ports for a specific subvolume and to override the global setting set by the previous option.</td></tr><tr><td align="left">nfs.transport-type</td><td align="center">(null)</td><td align="left">Specifies the nfs transport type. Valid transport types are ‘tcp’ and ‘rdma’.</td></tr><tr><td align="left">nfs.trusted-sync</td><td align="center">off</td><td align="left">All writes and COMMIT requests are treated as async. This implies that no write requests are guaranteed to be on server disks when the write reply is received at the NFS client. Trusted sync includes trusted-write behaviour. Off by default.</td></tr><tr><td align="left">nfs.trusted-write</td><td align="center">off</td><td align="left">On an UNSTABLE write from client, return STABLE flag to force client to not send a COMMIT request. In some environments, combined with a replicated GlusterFS setup, this option can improve write performance. This flag allows user to trust Gluster replication logic to sync data to the disks and recover when required. COMMIT requests if received will be handled in a default manner by fsyncing. STABLE writes are still handled in a sync manner. Off by default.</td></tr><tr><td align="left">nfs.volume-access</td><td align="center">read-write</td><td align="left">Type of access desired for this subvolume: read-only, read-write(default)</td></tr><tr><td align="left">nfs.export-dir</td><td align="center"></td><td align="left">By default, all subvolumes of nfs are exported as individual exports. There are cases where a subdirectory or subdirectories in the volume need to be exported separately. This option can also be used in conjunction with nfs3.export-volumes option to restrict exports only to the subdirectories specified through this option. Must be an absolute path. Along with path allowed list of IPs/hostname can be associated with each subdirectory. If provided connection will allowed only from these IPs. By default connections from all IPs are allowed. Format:[(hostspec[|hostspec|…])][,…]. Where hostspec can be an IP address, hostname or an IP range in CIDR notation. e.g. /foo(192.168.1.0/24|host1|10.1.1.8),/host2. NOTE: Care must be taken while configuring this option as invalid entries and/or unreachable DNS servers can introduce unwanted delay in all the mount calls.</td></tr><tr><td align="left">nfs.disable</td><td align="center">false</td><td align="left">This option is used to start or stop the NFS server for individual volumes.</td></tr><tr><td align="left">nfs.nlm</td><td align="center">on</td><td align="left">This option, if set to ‘off’, disables NLM server by not registering the service with the portmapper. Set it to ‘on’ to re-enable it. Default value: ‘on’</td></tr><tr><td align="left">nfs.acl</td><td align="center">on</td><td align="left">This option is used to control ACL support for NFS.</td></tr><tr><td align="left">nfs.mount-udp</td><td align="center">off</td><td align="left">set the option to ‘on’ to enable mountd on UDP. Required for some Solaris and AIX NFS clients. The need for enabling this option often depends on the usage of NLM.</td></tr><tr><td align="left">nfs.mount-rmtab</td><td align="center">/var/lib/glusterd/nfs/rmtab</td><td align="left">Set the location of the cache file that is used to list all the NFS-clients that have connected through the MOUNT protocol. If this is on shared storage, all GlusterFS servers will update and output (with ‘showmount’) the same list. Set to “/-“ to disable.</td></tr><tr><td align="left">nfs.drc</td><td align="center">off</td><td align="left">Enable Duplicate Request Cache in gNFS server to improve correctness of non-idempotent operations like write, delete, link, et al</td></tr><tr><td align="left">nfs.drc-size</td><td align="center">0x20000</td><td align="left">Sets the number of non-idempotent requests to cache in drc</td></tr><tr><td align="left">nfs.read-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue read requests to the Gluster NFSv3 server. Must be a multiple of 4KB (4096). Min and Max supported values are 4KB (4096) and 1MB (1048576) respectively. If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.write-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue write requests to the Gluster NFSv3 server. Must be a multiple of 1KB (1024). Min and Max supported values are 4KB (4096) and 1MB(1048576) respectively. If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.readdir-size</td><td align="center">(1 * 1048576ULL)</td><td align="left">Size in which the client should issue directory reading requests to the Gluster NFSv3 server. Must be a multiple of 1KB (1024). Min and Max supported values are 4KB (4096) and 1MB (1048576) respectively.If the specified value is within the supported range but not a multiple of 4096, it is rounded up to the nearest multiple of 4096.</td></tr><tr><td align="left">nfs.exports-auth-enable</td><td align="center">(null)</td><td align="left">Set the option to ‘on’ to enable exports/netgroup authentication in the NFS server and mount daemon.</td></tr><tr><td align="left">nfs.auth-refresh-interval-sec</td><td align="center">(null)</td><td align="left">Frequency in seconds that the daemon should check for changes in the exports/netgroups file.</td></tr><tr><td align="left">nfs.auth-cache-ttl-sec</td><td align="center">(null)</td><td align="left">Sets the TTL of an entry in the auth cache. Value is in seconds.</td></tr><tr><td align="left">ganesha.enable</td><td align="center">off</td><td align="left">export volume via NFS-Ganesha</td></tr><tr><td align="left">network.frame-timeout</td><td align="center">1800</td><td align="left">Time frame after which the (file) operation would be declared as dead, if the server does not respond for a particular (file) operation.</td></tr><tr><td align="left">network.ping-timeout</td><td align="center">42</td><td align="left">Time duration for which the client waits to check if the server is responsive.</td></tr><tr><td align="left">network.tcp-window-size</td><td align="center">null</td><td align="left">Specifies the window size for tcp socket.</td></tr><tr><td align="left">network.remote-dio</td><td align="center">disable</td><td align="left">If enabled, in open() and creat() calls, O_DIRECT flag will be filtered at the client protocol level so server will still continue to cache the file. This works similar to NFS’s behavior of O_DIRECT</td></tr><tr><td align="left">network.inode-lru-limit</td><td align="center">16384</td><td align="left">Specifies the maximum megabytes of memory to be used in the inode cache.</td></tr><tr><td align="left">network.compression</td><td align="center">off</td><td align="left">enable/disable network compression translator</td></tr><tr><td align="left">network.compression.window-size</td><td align="center">-15</td><td align="left">Size of the zlib history buffer.</td></tr><tr><td align="left">network.compression.mem-level</td><td align="center">8</td><td align="left">Memory allocated for internal compression state. 1 uses minimum memory but is slow and reduces compression ratio; memLevel=9 uses maximum memory for optimal speed. The default value is 8.</td></tr><tr><td align="left">network.compression.min-size</td><td align="center">0</td><td align="left">Data is compressed only when its size exceeds this.</td></tr><tr><td align="left">network.compression.compression-level</td><td align="center">-1</td><td align="left">Compression levels 0 : no compression, 1 : best speed, 9 : best compression, -1 : default compression</td></tr><tr><td align="left">features.lock-heal</td><td align="center">off</td><td align="left">When the connection to client is lost, server cleans up all the locks held by the client. After the connection is restored, the client reacquires (heals) the fcntl locks released by the server.</td></tr><tr><td align="left">features.grace-timeout</td><td align="center">10</td><td align="left">Specifies the duration for the lock state to be maintained on the client after a network disconnection. Range 10-1800 seconds.</td></tr><tr><td align="left">features.file-snapshot</td><td align="center">off</td><td align="left">enable/disable file-snapshot feature in the volume.</td></tr><tr><td align="left">features.uss</td><td align="center">off</td><td align="left">enable/disable User Serviceable Snapshots on the volume.</td></tr><tr><td align="left">features.snapshot-directory</td><td align="center">.snaps</td><td align="left">Entry point directory for entering snapshot world</td></tr><tr><td align="left">features.show-snapshot-directory</td><td align="center">off</td><td align="left">show entry point in readdir output of snapdir-entry-path which is set by samba</td></tr><tr><td align="left">features.quota-deem-statfs</td><td align="center">off</td><td align="left">If set to on, it takes quota limits intoconsideration while estimating fs size. (df command) (Default is off).</td></tr><tr><td align="left">features.read-only</td><td align="center">off</td><td align="left">When “on”, makes a volume read-only. It is turned “off” by default.</td></tr><tr><td align="left">features.worm</td><td align="center">off</td><td align="left">When “on”, makes a volume get write once read many feature. It is turned “off” by default.</td></tr><tr><td align="left">features.barrier-timeout</td><td align="center">120</td><td align="left">After ‘timeout’ seconds since the time ‘barrier’ option was set to “on”, acknowledgements to file operations are no longer blocked and previously blocked acknowledgements are sent to the application</td></tr><tr><td align="left">features.trash</td><td align="center">off</td><td align="left">Enable/disable trash translator</td></tr><tr><td align="left">features.trash-dir</td><td align="center">.trashcan</td><td align="left">Directory for trash files</td></tr><tr><td align="left">features.trash-eliminate-path</td><td align="center">(null)</td><td align="left">Eliminate paths to be excluded from trashing</td></tr><tr><td align="left">features.trash-max-filesize</td><td align="center">5MB</td><td align="left">Maximum size of file that can be moved to trash</td></tr><tr><td align="left">features.trash-internal-op</td><td align="center">off</td><td align="left">Enable/disable trash translator for internal operations</td></tr><tr><td align="left">features.ctr-enabled</td><td align="center">off</td><td align="left">Enable CTR xlator</td></tr><tr><td align="left">features.record-counters</td><td align="center">off</td><td align="left">Its a Change Time Recorder Xlator option to enable recording write and read heat counters. The default is disabled. If enabled, “cluster.write-freq-threshold” and “cluster.read-freq-threshold” defined the number of writes (or reads) to a given file are needed before triggering migration.</td></tr><tr><td align="left">features.ctr-sql-db-cachesize</td><td align="center">1000</td><td align="left">Defines the cache size of the sqlite database of changetimerecorder xlator.The input to this option is in pages.Each page is 4096 bytes. Default value is 1000 pages i.e ~ 4 MB. The max value is 262144 pages i.e 1 GB and the min value is 1000 pages i.e ~ 4 MB.</td></tr><tr><td align="left">features.ctr-sql-db-wal-autocheckpoint</td><td align="center">1000</td><td align="left">Defines the autocheckpoint of the sqlite database of changetimerecorder. The input to this option is in pages. Each page is 4096 bytes. Default value is 1000 pages i.e ~ 4 MB.The max value is 262144 pages i.e 1 GB and the min value is 1000 pages i.e ~4 MB.</td></tr><tr><td align="left">features.shard-block-size</td><td align="center">4MB</td><td align="left">The size unit used to break a file into multiple chunks</td></tr><tr><td align="left">features.cache-invalidation</td><td align="center">off</td><td align="left">When “on”, sends cache-invalidation notifications.</td></tr><tr><td align="left">features.cache-invalidation-timeout</td><td align="center">60</td><td align="left">After ‘timeout’ seconds since the time client accessed any file, cache-invalidation notifications are no longer sent to that client.</td></tr><tr><td align="left">client.event-threads</td><td align="center">2</td><td align="left">Specifies the number of event threads to execute in parallel. Larger values would help process responses faster, depending on available processing power. Range 1-32 threads.</td></tr><tr><td align="left">auth.allow</td><td align="center">null</td><td align="left">Allow a comma separated list of addresses and/or hostnames to connect to the server. Option auth.reject overrides this option. By default, all connections are allowed.</td></tr><tr><td align="left">auth.reject</td><td align="center">null</td><td align="left">Reject a comma separated list of addresses and/or hostnames to connect to the server. This option overrides the auth.allow option. By default, all connections are allowed.</td></tr><tr><td align="left">server.root-squash</td><td align="center">off</td><td align="left">Map requests from uid/gid 0 to the anonymous uid/gid. Note that this does not apply to any other uids or gids that might be equally sensitive, such as user bin or group staff.</td></tr><tr><td align="left">server.anonuid</td><td align="center">65534</td><td align="left">value of the uid used for the anonymous user/nfsnobody when root-squash is enabled.</td></tr><tr><td align="left">server.anongid</td><td align="center">65534</td><td align="left">value of the gid used for the anonymous user/nfsnobody when root-squash is enabled.</td></tr><tr><td align="left">server.statedump-path</td><td align="center">/var/run/gluster</td><td align="left">Specifies directory in which gluster should save its statedumps.</td></tr><tr><td align="left">server.outstanding-rpc-limit</td><td align="center">64</td><td align="left">Parameter to throttle the number of incoming RPC requests from a client. 0 means no limit (can potentially run out of memory)</td></tr><tr><td align="left">server.manage-gids</td><td align="center">off</td><td align="left">Resolve groups on the server-side.</td></tr><tr><td align="left">server.dynamic-auth</td><td align="center">on</td><td align="left">When ‘on’ perform dynamic authentication of volume options in order to allow/terminate client transport connection immediately in response to *.allow | *.reject volume set options.</td></tr><tr><td align="left">server.gid-timeout</td><td align="center">300</td><td align="left">Timeout in seconds for the cached groups to expire.</td></tr><tr><td align="left">server.event-threads</td><td align="center">2</td><td align="left">Specifies the number of event threads to execute in parallel. Larger values would help process responses faster, depending on available processing power. Range 1-32 threads.</td></tr><tr><td align="left">ssl.own-cert</td><td align="center">null</td><td align="left">SSL certificate. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.private-key</td><td align="center">null</td><td align="left">SSL private key. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.ca-list</td><td align="center">null</td><td align="left">SSL CA list. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.crl-path</td><td align="center">null</td><td align="left">Path to directory containing CRL. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.certificate-depth</td><td align="center">null</td><td align="left">Maximum certificate-chain depth. If zero, the peer’s certificate itself must be in the local certificate list. Otherwise, there may be up to N signing certificates between the peer’s and the local list. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.cipher-list</td><td align="center">null</td><td align="left">Allowed SSL ciphers. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.dh-param</td><td align="center">null</td><td align="left">DH parameters file. Ignored if SSL is not enabled.</td></tr><tr><td align="left">ssl.ec-curve</td><td align="center">null</td><td align="left">ECDH curve name. Ignored if SSL is not enabled.</td></tr><tr><td align="left">storage.linux-aio</td><td align="center">off</td><td align="left">Support for native Linux AIO</td></tr><tr><td align="left">storage.batch-fsync-mode</td><td align="center">reverse-fsync</td><td align="left">Possible values: syncfs: Perform one syncfs() on behalf oa batchof fsyncs. syncfs-single-fsync: Perform one syncfs() on behalf of a batch of fsyncs and one fsync() per batch. syncfs-reverse-fsync: Preform one syncfs() on behalf of a batch of fsyncs and fsync() each file in the batch in reverse order. reverse-fsync: Perform fsync() of each file in the batch in reverse order.</td></tr><tr><td align="left">storage.batch-fsync-delay-usec</td><td align="center">0</td><td align="left">Num of usecs to wait for aggregating fsync requests</td></tr><tr><td align="left">storage.owner-uid</td><td align="center">-1</td><td align="left">Support for setting uid of brick’s owner</td></tr><tr><td align="left">storage.owner-gid</td><td align="center">-1</td><td align="left">Support for setting gid of brick’s owner</td></tr><tr><td align="left">storage.node-uuid-pathinfo</td><td align="center">off</td><td align="left">return glusterd’s node-uuid in pathinfo xattr string instead of hostname</td></tr><tr><td align="left">storage.health-check-interval</td><td align="center">30</td><td align="left">Interval in seconds for a filesystem health check, set to 0 to disable</td></tr><tr><td align="left">storage.build-pgfid</td><td align="center">off</td><td align="left">Enable placeholders for gfid to path conversion</td></tr><tr><td align="left">storage.bd-aio</td><td align="center">off</td><td align="left">Support for native Linux AIO</td></tr></tbody></table><h2 id="GlusterFS的优化样例"><a href="#GlusterFS的优化样例" class="headerlink" title="GlusterFS的优化样例"></a>GlusterFS的优化样例</h2><table><thead><tr><th align="left">选项</th><th align="center">配置</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">cluster.server-quorum-type</td><td align="center">server</td><td align="left"></td></tr><tr><td align="left">cluster.quorum-type</td><td align="center">auto</td><td align="left"></td></tr><tr><td align="left">network.remote-dio</td><td align="center">enable</td><td align="left"></td></tr><tr><td align="left">cluster.eager-lock</td><td align="center">enable</td><td align="left"></td></tr><tr><td align="left">performance.stat-prefetch</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.io-cache</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.read-ahead</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.quick-read</td><td align="center">off</td><td align="left"></td></tr><tr><td align="left">performance.readdir-ahead</td><td align="center"></td><td align="left"></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
